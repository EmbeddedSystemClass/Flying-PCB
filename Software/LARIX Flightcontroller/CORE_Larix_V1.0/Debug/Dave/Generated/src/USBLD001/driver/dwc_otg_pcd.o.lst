   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"dwc_otg_pcd.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.cil_pcd_start,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	cil_pcd_start:
  25              	.LFB16:
  26              		.file 1 "../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h"
   1:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /* ==========================================================================
   2:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * $File: //dwh/usb_iip/dev/software/otg/linux/drivers/dwc_otg_cil.h $
   3:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * $Revision: #115 $
   4:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * $Date: 2010/11/29 $
   5:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * $Change: 1636033 $
   6:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
   7:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Synopsys HS OTG Linux Software Driver and documentation (hereinafter,
   8:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * "Software") is an Unsupported proprietary work of Synopsys, Inc. unless
   9:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * otherwise expressly agreed to in writing between Synopsys and you.
  10:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
  11:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * The Software IS NOT an item of Licensed Software or Licensed Product under
  12:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * any End User Software License Agreement or Agreement for Licensed Product
  13:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * with Synopsys or any supplement thereto. You are permitted to use and
  14:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * redistribute this Software in source and binary forms, with or without
  15:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * modification, provided that redistributions of source code must retain this
  16:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * notice. You may not view, use, disclose, copy or distribute this file or
  17:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * any information contained herein except pursuant to this license grant from
  18:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Synopsys. If you do not agree with this notice, including the disclaimer
  19:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * below, then you are not authorized to use the Software.
  20:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
  21:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * THIS SOFTWARE IS BEING DISTRIBUTED BY SYNOPSYS SOLELY ON AN "AS IS" BASIS
  22:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * ARE HEREBY DISCLAIMED. IN NO EVENT SHALL SYNOPSYS BE LIABLE FOR ANY DIRECT,
  25:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  26:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  28:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  29:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
  30:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
  31:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * DAMAGE.
  32:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * ========================================================================== */
  33:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  34:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /* THIS FILE IS PROVIDED BY DAVE.
  35:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * THIS FILE IS GENERATED.
  36:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
  37:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  38:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /*******************************************************************************
  39:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
  40:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Copyright (C) 2011 Infineon Technologies AG. All rights reserved.
  41:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
  42:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Infineon Technologies AG (Infineon) is supplying this software for use with
  43:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Infineon's microcontrollers.
  44:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This file can be freely distributed within development tools that are
  45:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * supporting such microcontrollers.
  46:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
  47:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  48:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  49:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  50:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
  51:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  52:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
  53:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** ********************************************************************************
  54:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** **                                                                            **
  55:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** **                                                                            **
  56:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** ** PLATFORM : Infineon XMC4000 Series                                         **
  57:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** **                                                                            **
  58:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** ** COMPILER : Compiler Independent                                            **
  59:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** **                                                                            **
  60:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** ** AUTHOR : App Developer                                                     **
  61:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** **                                                                            **
  62:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** ** MAY BE CHANGED BY USER [yes/no]: Yes                                       **
  63:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** **                                                                            **
  64:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** ** MODIFICATION DATE : Apr 8, 2012                                            **
  65:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** **                                                                            **
  66:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** *******************************************************************************/
  67:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  68:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /*******************************************************************************
  69:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** **                       Author(s) Identity                                   **
  70:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** ********************************************************************************
  71:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** **                                                                            **
  72:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** ** Initials    Name                                                           **
  73:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** ** ---------------------------------------------------------------------------**
  74:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** ** CM          App Developer                                                  **
  75:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** *******************************************************************************/
  76:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  77:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  78:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #if !defined(__DWC_CIL_H__)
  79:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define __DWC_CIL_H__
  80:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  81:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef __cplusplus
  82:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern "C"{
  83:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
  84:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  85:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #include "../dwc_common_port/dwc_list.h"
  86:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #include "dwc_otg_dbg.h"
  87:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #include "dwc_otg_regs.h"
  88:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  89:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #include "dwc_otg_core_if.h"
  90:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #include "dwc_otg_adp.h"
  91:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  92:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
  93:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * @file
  94:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This file contains the interface to the Core Interface Layer.
  95:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
  96:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  97:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef DWC_UTE_CFI
  98:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  99:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define MAX_DMA_DESCS_PER_EP	256
 100:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 101:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
 102:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Enumeration for the data buffer mode
 103:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
 104:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** typedef enum _data_buffer_mode {
 105:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	BM_STANDARD = 0,	/* data buffer is in normal mode */
 106:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	BM_SG = 1,		/* data buffer uses the scatter/gather mode */
 107:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	BM_CONCAT = 2,		/* data buffer uses the concatenation mode */
 108:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	BM_CIRCULAR = 3,	/* data buffer uses the circular DMA mode */
 109:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	BM_ALIGN = 4		/* data buffer is in buffer alignment mode */
 110:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } data_buffer_mode_e;
 111:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif //DWC_UTE_CFI
 112:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 113:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Macros defined for DWC OTG HW Release verison */
 114:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 115:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define OTG_CORE_REV_2_60a	0x4F54260A
 116:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define OTG_CORE_REV_2_71a	0x4F54271A
 117:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define OTG_CORE_REV_2_72a	0x4F54272A
 118:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define OTG_CORE_REV_2_80a	0x4F54280A
 119:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define OTG_CORE_REV_2_81a	0x4F54281A
 120:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define OTG_CORE_REV_2_90a	0x4F54290A
 121:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define OTG_CORE_REV_2_91a	0x4F54291A
 122:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define OTG_CORE_REV_2_92a	0x4F54292A
 123:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 124:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
 125:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Information for each ISOC packet.
 126:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
 127:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** typedef struct iso_pkt_info {
 128:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t offset;
 129:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t length;
 130:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t status;
 131:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } iso_pkt_info_t;
 132:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 133:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
 134:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * The <code>dwc_ep</code> structure represents the state of a single
 135:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * endpoint when acting in device mode. It contains the data items
 136:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * needed for an endpoint to be activated and transfer packets.
 137:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
 138:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** typedef struct dwc_ep {
 139:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** EP number used for register address lookup */
 140:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t num;
 141:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** EP direction 0 = OUT */
 142:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned is_in:1;
 143:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** EP active. */
 144:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned active:1;
 145:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 146:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 147:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *Periodic Tx FIFO # for IN EPs For INTR EP set to 0 to use non-periodic Tx FIFO
 148:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * If dedicated Tx FIFOs are enabled for all IN Eps - Tx FIFO # FOR IN EPs*/
 149:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned tx_fifo_num:4;
 150:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** EP type: 0 - Control, 1 - ISOC,	 2 - BULK,	3 - INTR */
 151:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned type:2;
 152:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_EP_TYPE_CONTROL	   0
 153:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_EP_TYPE_ISOC	   1
 154:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_EP_TYPE_BULK	   2
 155:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_EP_TYPE_INTR	   3
 156:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 157:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** DATA start PID for INTR and BULK EP */
 158:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned data_pid_start:1;
 159:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Frame (even/odd) for ISOC EP */
 160:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned even_odd_frame:1;
 161:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Max Packet bytes */
 162:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned maxpacket:11;
 163:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 164:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Max Transfer size */
 165:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t maxxfer;
 166:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 167:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** @name Transfer state */
 168:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** @{ */
 169:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 170:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 171:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Pointer to the beginning of the transfer buffer -- do not modify
 172:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * during transfer.
 173:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 174:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 175:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_dma_t dma_addr;
 176:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 177:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_dma_t dma_desc_addr;
 178:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_dev_dma_desc_t *desc_addr;
 179:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 180:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t *start_xfer_buff;
 181:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** pointer to the transfer buffer */
 182:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t *xfer_buff;
 183:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of bytes to transfer */
 184:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned xfer_len:19;
 185:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of bytes transferred. */
 186:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned xfer_count:19;
 187:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Sent ZLP */
 188:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned sent_zlp:1;
 189:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Total len for control transfer */
 190:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned total_len:19;
 191:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 192:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** stall clear flag */
 193:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned stall_clear_flag:1;
 194:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 195:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef DWC_UTE_CFI
 196:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/* The buffer mode */
 197:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	data_buffer_mode_e buff_mode;
 198:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 199:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/* The chain of DMA descriptors.
 200:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * MAX_DMA_DESCS_PER_EP will be allocated for each active EP.
 201:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 202:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_dma_desc_t *descs;
 203:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 204:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/* The DMA address of the descriptors chain start */
 205:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dma_addr_t descs_dma_addr;
 206:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** This variable stores the length of the last enqueued request */
 207:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t cfi_req_len;
 208:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif				//DWC_UTE_CFI
 209:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 210:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Allocated DMA Desc count */
 211:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t desc_cnt;
 212:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 213:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef DWC_UTE_PER_IO
 214:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Next frame num for which will be setup DMA Desc */
 215:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t xiso_frame_num;
 216:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** bInterval */
 217:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t xiso_bInterval;
 218:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Count of currently active transfers - shall be either 0 or 1 */
 219:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int xiso_active_xfers;
 220:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int xiso_queued_xfers;
 221:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
 222:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef DWC_EN_ISOC
 223:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 224:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Variables specific for ISOC EPs
 225:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *
 226:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 227:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** DMA addresses of ISOC buffers */
 228:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_dma_t dma_addr0;
 229:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_dma_t dma_addr1;
 230:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 231:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_dma_t iso_dma_desc_addr;
 232:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_dev_dma_desc_t *iso_desc_addr;
 233:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 234:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** pointer to the transfer buffers */
 235:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t *xfer_buff0;
 236:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t *xfer_buff1;
 237:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 238:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** number of ISOC Buffer is processing */
 239:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t proc_buf_num;
 240:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Interval of ISOC Buffer processing */
 241:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t buf_proc_intrvl;
 242:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Data size for regular frame */
 243:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t data_per_frame;
 244:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 245:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/* todo - pattern data support is to be implemented in the future */
 246:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Data size for pattern frame */
 247:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t data_pattern_frame;
 248:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Frame number of pattern data */
 249:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t sync_frame;
 250:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 251:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** bInterval */
 252:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t bInterval;
 253:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** ISO Packet number per frame */
 254:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t pkt_per_frm;
 255:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Next frame num for which will be setup DMA Desc */
 256:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t next_frame;
 257:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of packets per buffer processing */
 258:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t pkt_cnt;
 259:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Info for all isoc packets */
 260:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	iso_pkt_info_t *pkt_info;
 261:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** current pkt number */
 262:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t cur_pkt;
 263:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** current pkt number */
 264:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t *cur_pkt_addr;
 265:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** current pkt number */
 266:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t cur_pkt_dma_addr;
 267:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif				/* DWC_EN_ISOC */
 268:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 269:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** @} */
 270:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } dwc_ep_t;
 271:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 272:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /*
 273:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Reasons for halting a host channel.
 274:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
 275:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** typedef enum dwc_otg_halt_status {
 276:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_NO_HALT_STATUS,
 277:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_COMPLETE,
 278:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_URB_COMPLETE,
 279:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_ACK,
 280:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_NAK,
 281:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_NYET,
 282:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_STALL,
 283:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_XACT_ERR,
 284:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_FRAME_OVERRUN,
 285:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_BABBLE_ERR,
 286:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_DATA_TOGGLE_ERR,
 287:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_AHB_ERR,
 288:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_PERIODIC_INCOMPLETE,
 289:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_URB_DEQUEUE
 290:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } dwc_otg_halt_status_e;
 291:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 292:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
 293:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Host channel descriptor. This structure represents the state of a single
 294:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * host channel when acting in host mode. It contains the data items needed to
 295:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * transfer packets to an endpoint via a host channel.
 296:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
 297:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** typedef struct dwc_hc {
 298:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Host channel number used for register address lookup */
 299:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t hc_num;
 300:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 301:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Device to access */
 302:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned dev_addr:7;
 303:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 304:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** EP to access */
 305:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned ep_num:4;
 306:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 307:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** EP direction. 0: OUT, 1: IN */
 308:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned ep_is_in:1;
 309:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 310:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 311:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * EP speed.
 312:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * One of the following values:
 313:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	- DWC_OTG_EP_SPEED_LOW
 314:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	- DWC_OTG_EP_SPEED_FULL
 315:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	- DWC_OTG_EP_SPEED_HIGH
 316:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 317:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned speed:2;
 318:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_EP_SPEED_LOW	0
 319:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_EP_SPEED_FULL	1
 320:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_EP_SPEED_HIGH	2
 321:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 322:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 323:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Endpoint type.
 324:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * One of the following values:
 325:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	- DWC_OTG_EP_TYPE_CONTROL: 0
 326:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	- DWC_OTG_EP_TYPE_ISOC: 1
 327:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	- DWC_OTG_EP_TYPE_BULK: 2
 328:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	- DWC_OTG_EP_TYPE_INTR: 3
 329:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 330:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned ep_type:2;
 331:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 332:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Max packet size in bytes */
 333:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned max_packet:11;
 334:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 335:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 336:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * PID for initial transaction.
 337:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0: DATA0,<br>
 338:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1: DATA2,<br>
 339:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 2: DATA1,<br>
 340:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 3: MDATA (non-Control EP),
 341:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	  SETUP (Control EP)
 342:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 343:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned data_pid_start:2;
 344:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_HC_PID_DATA0 0
 345:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_HC_PID_DATA2 1
 346:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_HC_PID_DATA1 2
 347:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_HC_PID_MDATA 3
 348:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_HC_PID_SETUP 3
 349:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 350:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of periodic transactions per (micro)frame */
 351:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned multi_count:2;
 352:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 353:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** @name Transfer State */
 354:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** @{ */
 355:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 356:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Pointer to the current transfer buffer position. */
 357:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t *xfer_buff;
 358:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 359:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * In Buffer DMA mode this buffer will be used
 360:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * if xfer_buff is not DWORD aligned.
 361:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 362:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_dma_t align_buff;
 363:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Total number of bytes to transfer. */
 364:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t xfer_len;
 365:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of bytes transferred so far. */
 366:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t xfer_count;
 367:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Packet count at start of transfer.*/
 368:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t start_pkt_count;
 369:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 370:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 371:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Flag to indicate whether the transfer has been started. Set to 1 if
 372:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * it has been started, 0 otherwise.
 373:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 374:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t xfer_started;
 375:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 376:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 377:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Set to 1 to indicate that a PING request should be issued on this
 378:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * channel. If 0, process normally.
 379:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 380:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t do_ping;
 381:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 382:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 383:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Set to 1 to indicate that the error count for this transaction is
 384:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * non-zero. Set to 0 if the error count is 0.
 385:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 386:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t error_state;
 387:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 388:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 389:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Set to 1 to indicate that this channel should be halted the next
 390:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * time a request is queued for the channel. This is necessary in
 391:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * slave mode if no request queue space is available when an attempt
 392:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * is made to halt the channel.
 393:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 394:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t halt_on_queue;
 395:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 396:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 397:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Set to 1 if the host channel has been halted, but the core is not
 398:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * finished flushing queued requests. Otherwise 0.
 399:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 400:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t halt_pending;
 401:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 402:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 403:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Reason for halting the host channel.
 404:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 405:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_halt_status_e halt_status;
 406:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 407:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/*
 408:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Split settings for the host channel
 409:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 410:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t do_split;		   /**< Enable split for the channel */
 411:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t complete_split;	   /**< Enable complete split */
 412:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t hub_addr;		   /**< Address of high speed hub */
 413:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 414:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t port_addr;		   /**< Port of the low/full speed device */
 415:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Split transaction position
 416:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * One of the following values:
 417:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	  - DWC_HCSPLIT_XACTPOS_MID
 418:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	  - DWC_HCSPLIT_XACTPOS_BEGIN
 419:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	  - DWC_HCSPLIT_XACTPOS_END
 420:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	  - DWC_HCSPLIT_XACTPOS_ALL */
 421:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t xact_pos;
 422:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 423:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Set when the host channel does a short read. */
 424:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t short_read;
 425:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 426:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 427:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Number of requests issued for this channel since it was assigned to
 428:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * the current transfer (not counting PINGs).
 429:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 430:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t requests;
 431:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 432:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 433:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Queue Head for the transfer being processed by this channel.
 434:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 435:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	struct dwc_otg_qh *qh;
 436:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 437:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** @} */
 438:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 439:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Entry in list of host channels. */
 440:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 DWC_CIRCLEQ_ENTRY(dwc_hc) hc_list_entry;
 441:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 442:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** @name Descriptor DMA support */
 443:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** @{ */
 444:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 445:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of Transfer Descriptors */
 446:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t ntd;
 447:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 448:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Descriptor List DMA address */
 449:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_dma_t desc_list_addr;
 450:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 451:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Scheduling micro-frame bitmap. */
 452:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t schinfo;
 453:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 454:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** @} */
 455:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } dwc_hc_t;
 456:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 457:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
 458:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * The following parameters may be specified when starting the module. These
 459:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * parameters define how the DWC_otg controller should be configured.
 460:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
 461:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** typedef struct dwc_otg_core_params {
 462:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t opt;
 463:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 464:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 465:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Specifies the OTG capabilities. The driver will automatically
 466:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * detect the value for this parameter if none is specified.
 467:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - HNP and SRP capable (default)
 468:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - SRP Only capable
 469:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 2 - No HNP/SRP capable
 470:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 471:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t otg_cap;
 472:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 473:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 474:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Specifies whether to use slave or DMA mode for accessing the data
 475:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * FIFOs. The driver will automatically detect the value for this
 476:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * parameter if none is specified.
 477:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - Slave
 478:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - DMA (default, if available)
 479:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 480:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t dma_enable;
 481:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 482:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 483:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * When DMA mode is enabled specifies whether to use address DMA or DMA Descritor mode for accessi
 484:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * FIFOs in device mode. The driver will automatically detect the value for this
 485:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * parameter if none is specified.
 486:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - address DMA
 487:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - DMA Descriptor(default, if available)
 488:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 489:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t dma_desc_enable;
 490:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** The DMA Burst size (applicable only for External DMA
 491:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Mode). 1, 4, 8 16, 32, 64, 128, 256 (default 32)
 492:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 493:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t dma_burst_size;	/* Translate this to GAHBCFG values */
 494:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 495:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 496:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Specifies the maximum speed of operation in host and device mode.
 497:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * The actual speed depends on the speed of the attached device and
 498:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * the value of phy_type. The actual speed depends on the speed of the
 499:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * attached device.
 500:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - High Speed (default)
 501:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Full Speed
 502:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 503:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t speed;
 504:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Specifies whether low power mode is supported when attached
 505:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	to a Full Speed or Low Speed device in host mode.
 506:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - Don't support low power mode (default)
 507:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Support low power mode
 508:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 509:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t host_support_fs_ls_low_power;
 510:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 511:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Specifies the PHY clock rate in low power mode when connected to a
 512:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Low Speed device in host mode. This parameter is applicable only if
 513:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * HOST_SUPPORT_FS_LS_LOW_POWER is enabled. If PHY_TYPE is set to FS
 514:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * then defaults to 6 MHZ otherwise 48 MHZ.
 515:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *
 516:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - 48 MHz
 517:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - 6 MHz
 518:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 519:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t host_ls_low_power_phy_clk;
 520:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 521:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 522:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - Use cC FIFO size parameters
 523:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Allow dynamic FIFO sizing (default)
 524:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 525:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t enable_dynamic_fifo;
 526:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 527:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Total number of 4-byte words in the data FIFO memory. This
 528:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * memory includes the Rx FIFO, non-periodic Tx FIFO, and periodic
 529:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Tx FIFOs.
 530:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 32 to 32768 (default 8192)
 531:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Note: The total FIFO memory depth in the FPGA configuration is 8192.
 532:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 533:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t data_fifo_size;
 534:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 535:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of 4-byte words in the Rx FIFO in device mode when dynamic
 536:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * FIFO sizing is enabled.
 537:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 16 to 32768 (default 1064)
 538:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 539:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t dev_rx_fifo_size;
 540:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 541:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of 4-byte words in the non-periodic Tx FIFO in device mode
 542:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * when dynamic FIFO sizing is enabled.
 543:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 16 to 32768 (default 1024)
 544:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 545:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t dev_nperio_tx_fifo_size;
 546:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 547:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of 4-byte words in each of the periodic Tx FIFOs in device
 548:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * mode when dynamic FIFO sizing is enabled.
 549:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 4 to 768 (default 256)
 550:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 551:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t dev_perio_tx_fifo_size[MAX_PERIO_FIFOS];
 552:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 553:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of 4-byte words in the Rx FIFO in host mode when dynamic
 554:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * FIFO sizing is enabled.
 555:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 16 to 32768 (default 1024)
 556:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 557:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t host_rx_fifo_size;
 558:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 559:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of 4-byte words in the non-periodic Tx FIFO in host mode
 560:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * when Dynamic FIFO sizing is enabled in the core.
 561:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 16 to 32768 (default 1024)
 562:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 563:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t host_nperio_tx_fifo_size;
 564:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 565:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of 4-byte words in the host periodic Tx FIFO when dynamic
 566:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * FIFO sizing is enabled.
 567:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 16 to 32768 (default 1024)
 568:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 569:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t host_perio_tx_fifo_size;
 570:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 571:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** The maximum transfer size supported in bytes.
 572:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 2047 to 65,535  (default 65,535)
 573:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 574:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t max_transfer_size;
 575:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 576:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** The maximum number of packets in a transfer.
 577:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 15 to 511  (default 511)
 578:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 579:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t max_packet_count;
 580:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 581:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** The number of host channel registers to use.
 582:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 to 16 (default 12)
 583:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Note: The FPGA configuration supports a maximum of 12 host channels.
 584:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 585:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t host_channels;
 586:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 587:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** The number of endpoints in addition to EP0 available for device
 588:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * mode operations.
 589:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 to 15 (default 6 IN and OUT)
 590:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Note: The FPGA configuration supports a maximum of 6 IN and OUT
 591:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * endpoints in addition to EP0.
 592:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 593:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t dev_endpoints;
 594:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 595:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		/**
 596:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		 * Specifies the type of PHY interface to use. By default, the driver
 597:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		 * will automatically detect the phy_type.
 598:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		 *
 599:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		 * 0 - Full Speed PHY
 600:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		 * 1 - UTMI+ (default)
 601:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		 * 2 - ULPI
 602:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		 */
 603:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t phy_type;
 604:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 605:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 606:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Specifies the UTMI+ Data Width. This parameter is
 607:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * applicable for a PHY_TYPE of UTMI+ or ULPI. (For a ULPI
 608:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * PHY_TYPE, this parameter indicates the data width between
 609:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * the MAC and the ULPI Wrapper.) Also, this parameter is
 610:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * applicable only if the OTG_HSPHY_WIDTH cC parameter was set
 611:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * to "8 and 16 bits", meaning that the core has been
 612:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * configured to work at either data path width.
 613:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *
 614:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 8 or 16 bits (default 16)
 615:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 616:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t phy_utmi_width;
 617:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 618:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 619:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Specifies whether the ULPI operates at double or single
 620:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * data rate. This parameter is only applicable if PHY_TYPE is
 621:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * ULPI.
 622:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *
 623:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - single data rate ULPI interface with 8 bit wide data
 624:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * bus (default)
 625:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - double data rate ULPI interface with 4 bit wide data
 626:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * bus
 627:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 628:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t phy_ulpi_ddr;
 629:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 630:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 631:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Specifies whether to use the internal or external supply to
 632:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * drive the vbus with a ULPI phy.
 633:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 634:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t phy_ulpi_ext_vbus;
 635:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 636:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 637:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Specifies whether to use the I2Cinterface for full speed PHY. This
 638:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * parameter is only applicable if PHY_TYPE is FS.
 639:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - No (default)
 640:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Yes
 641:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 642:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t i2c_enable;
 643:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 644:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t ulpi_fs_ls;
 645:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 646:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t ts_dline;
 647:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 648:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 649:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Specifies whether dedicated transmit FIFOs are
 650:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * enabled for non periodic IN endpoints in device mode
 651:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - No
 652:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Yes
 653:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 654:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t en_multiple_tx_fifo;
 655:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 656:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of 4-byte words in each of the Tx FIFOs in device
 657:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * mode when dynamic FIFO sizing is enabled.
 658:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 4 to 768 (default 256)
 659:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 660:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t dev_tx_fifo_size[MAX_TX_FIFOS];
 661:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 662:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Thresholding enable flag-
 663:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * bit 0 - enable non-ISO Tx thresholding
 664:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * bit 1 - enable ISO Tx thresholding
 665:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * bit 2 - enable Rx thresholding
 666:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 667:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t thr_ctl;
 668:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 669:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Thresholding length for Tx
 670:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	FIFOs in 32 bit DWORDs
 671:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 672:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t tx_thr_length;
 673:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 674:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Thresholding length for Rx
 675:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	FIFOs in 32 bit DWORDs
 676:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 677:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t rx_thr_length;
 678:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 679:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 680:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Specifies whether LPM (Link Power Management) support is enabled
 681:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 682:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t lpm_enable;
 683:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 684:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Per Transfer Interrupt
 685:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	mode enable flag
 686:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Enabled
 687:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - Disabled
 688:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 689:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t pti_enable;
 690:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 691:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Multi Processor Interrupt
 692:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	mode enable flag
 693:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Enabled
 694:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - Disabled
 695:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 696:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t mpi_enable;
 697:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 698:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** IS_USB Capability
 699:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Enabled
 700:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - Disabled
 701:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 702:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t ic_usb_cap;
 703:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 704:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** AHB Threshold Ratio
 705:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 2'b00 AHB Threshold = 	MAC Threshold
 706:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 2'b01 AHB Threshold = 1/2 	MAC Threshold
 707:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 2'b10 AHB Threshold = 1/4	MAC Threshold
 708:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 2'b11 AHB Threshold = 1/8	MAC Threshold
 709:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 710:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t ahb_thr_ratio;
 711:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 712:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** ADP Support
 713:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Enabled
 714:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - Disabled
 715:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 716:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t adp_supp_enable;
 717:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 718:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** HFIR Reload Control
 719:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - The HFIR cannot be reloaded dynamically.
 720:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Allow dynamic reloading of the HFIR register during runtime.
 721:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 722:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t reload_ctl;
 723:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 724:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Core Power down mode
 725:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - No Power Down is enabled
 726:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Reserved
 727:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 2 - Complete Power Down (Hibernation)
 728:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 729:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t power_down;
 730:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 731:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** OTG revision supported
 732:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - OTG 1.3 revision
 733:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - OTG 2.0 revision
 734:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 735:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t otg_ver;
 736:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 737:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } dwc_otg_core_params_t;
 738:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 739:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef DEBUG
 740:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** struct dwc_otg_core_if;
 741:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** typedef struct hc_xfer_info {
 742:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	struct dwc_otg_core_if *core_if;
 743:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_hc_t *hc;
 744:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } hc_xfer_info_t;
 745:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
 746:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /*
 747:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Device States
 748:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
 749:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** typedef enum dwc_otg_lx_state {
 750:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** On state */
 751:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_L0,
 752:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** LPM sleep state*/
 753:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_L1,
 754:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** USB suspend state*/
 755:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_L2,
 756:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Off state*/
 757:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_L3
 758:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } dwc_otg_lx_state_e;
 759:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 760:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** struct dwc_otg_global_regs_backup {
 761:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t gotgctl_local;
 762:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t gintmsk_local;
 763:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t gahbcfg_local;
 764:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t gusbcfg_local;
 765:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t grxfsiz_local;
 766:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t gnptxfsiz_local;
 767:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef CONFIG_USB_DWC_OTG_LPM
 768:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t glpmcfg_local;
 769:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
 770:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t gi2cctl_local;
 771:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t hptxfsiz_local;
 772:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t pcgcctl_local;
 773:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t gdfifocfg_local;
 774:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t dtxfsiz_local[MAX_EPS_CHANNELS];
 775:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t gpwrdn_local;
 776:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** };
 777:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 778:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** struct dwc_otg_host_regs_backup {
 779:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t hcfg_local;
 780:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t haintmsk_local;
 781:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t hcintmsk_local[MAX_EPS_CHANNELS];
 782:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t hprt0_local;
 783:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t hfir_local;
 784:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** };
 785:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 786:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** struct dwc_otg_dev_regs_backup {
 787:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t dcfg;
 788:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t dctl;
 789:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t daintmsk;
 790:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t diepmsk;
 791:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t doepmsk;
 792:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t diepctl[MAX_EPS_CHANNELS];
 793:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t dieptsiz[MAX_EPS_CHANNELS];
 794:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t diepdma[MAX_EPS_CHANNELS];
 795:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t doepfn[MAX_EPS_CHANNELS];
 796:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** };
 797:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
 798:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * The <code>dwc_otg_core_if</code> structure contains information needed to manage
 799:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * the DWC_otg controller acting in either host or device mode. It
 800:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * represents the programming view of the controller as a whole.
 801:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
 802:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** struct dwc_otg_core_if {
 803:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Parameters that define how the core should be configured.*/
 804:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_core_params_t *core_params;
 805:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 806:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Core Global registers starting at offset 000h. */
 807:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_core_global_regs_t *core_global_regs;
 808:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 809:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Device-specific information */
 810:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_dev_if_t *dev_if;
 811:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Host-specific information */
 812:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_host_if_t *host_if;
 813:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 814:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Value from SNPSID register */
 815:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t snpsid;
 816:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 817:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/*
 818:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Set to 1 if the core PHY interface bits in USBCFG have been
 819:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * initialized.
 820:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 821:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t phy_init_done;
 822:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 823:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/*
 824:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * SRP Success flag, set by srp success interrupt in FS I2C mode
 825:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 826:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t srp_success;
 827:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t srp_timer_started;
 828:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Timer for SRP. If it expires before SRP is successful
 829:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * clear the SRP. */
 830:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_timer_t *srp_timer;
 831:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 832:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef DWC_DEV_SRPCAP
 833:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/* This timer is needed to power on the hibernated host core if SRP is not
 834:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * initiated on connected SRP capable device for limited period of time
 835:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 836:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t pwron_timer_started;
 837:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_timer_t *pwron_timer;
 838:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
 839:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/* Common configuration information */
 840:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Power and Clock Gating Control Register */
 841:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	volatile uint32_t *pcgcctl;
 842:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_PCGCCTL_OFFSET 0xE00
 843:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 844:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Push/pop addresses for endpoints or host channels.*/
 845:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t *data_fifo[MAX_EPS_CHANNELS];
 846:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_DATA_FIFO_OFFSET 0x1000
 847:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_DATA_FIFO_SIZE 0x1000
 848:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 849:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Total RAM for FIFOs (Bytes) */
 850:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t total_fifo_size;
 851:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Size of Rx FIFO (Bytes) */
 852:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t rx_fifo_size;
 853:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Size of Non-periodic Tx FIFO (Bytes) */
 854:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t nperio_tx_fifo_size;
 855:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 856:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** 1 if DMA is enabled, 0 otherwise. */
 857:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t dma_enable;
 858:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 859:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** 1 if DMA descriptor is enabled, 0 otherwise. */
 860:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t dma_desc_enable;
 861:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 862:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** 1 if PTI Enhancement mode is enabled, 0 otherwise. */
 863:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t pti_enh_enable;
 864:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 865:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** 1 if MPI Enhancement mode is enabled, 0 otherwise. */
 866:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t multiproc_int_enable;
 867:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 868:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** 1 if dedicated Tx FIFOs are enabled, 0 otherwise. */
 869:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t en_multiple_tx_fifo;
 870:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 871:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Set to 1 if multiple packets of a high-bandwidth transfer is in
 872:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * process of being queued */
 873:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t queuing_high_bandwidth;
 874:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 875:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Hardware Configuration -- stored here for convenience.*/
 876:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hwcfg1_data_t hwcfg1;
 877:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hwcfg2_data_t hwcfg2;
 878:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hwcfg3_data_t hwcfg3;
 879:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hwcfg4_data_t hwcfg4;
 880:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 881:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Host and Device Configuration -- stored here for convenience.*/
 882:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hcfg_data_t hcfg;
 883:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dcfg_data_t dcfg;
 884:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 885:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** The operational State, during transations
 886:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * (a_host>>a_peripherial and b_device=>b_host) this may not
 887:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * match the core but allows the software to determine
 888:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * transitions.
 889:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 890:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t op_state;
 891:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 892:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 893:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Set to 1 if the HCD needs to be restarted on a session request
 894:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * interrupt. This is required if no connector ID status change has
 895:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * occurred since the HCD was last disconnected.
 896:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 897:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t restart_hcd_on_session_req;
 898:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 899:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** HCD callbacks */
 900:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** A-Device is a_host */
 901:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define A_HOST		(1)
 902:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** A-Device is a_suspend */
 903:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define A_SUSPEND	(2)
 904:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** A-Device is a_peripherial */
 905:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define A_PERIPHERAL	(3)
 906:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** B-Device is operating as a Peripheral. */
 907:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define B_PERIPHERAL	(4)
 908:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** B-Device is operating as a Host. */
 909:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define B_HOST		(5)
 910:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 911:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** HCD callbacks */
 912:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	struct dwc_otg_cil_callbacks *hcd_cb;
 913:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** PCD callbacks */
 914:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	struct dwc_otg_cil_callbacks *pcd_cb;
 915:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 916:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Device mode Periodic Tx FIFO Mask */
 917:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t p_tx_msk;
 918:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Device mode Periodic Tx FIFO Mask */
 919:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t tx_msk;
 920:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 921:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Workqueue object used for handling several interrupts */
 922:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_workq_t *wq_otg;
 923:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 924:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Timer object used for handling "Wakeup Detected" Interrupt */
 925:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_timer_t *wkp_timer;
 926:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 927:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef DEBUG
 928:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t start_hcchar_val[MAX_EPS_CHANNELS];
 929:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 930:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hc_xfer_info_t hc_xfer_info[MAX_EPS_CHANNELS];
 931:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_timer_t *hc_xfer_timer[MAX_EPS_CHANNELS];
 932:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 933:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t hfnum_7_samples;
 934:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint64_t hfnum_7_frrem_accum;
 935:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t hfnum_0_samples;
 936:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint64_t hfnum_0_frrem_accum;
 937:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t hfnum_other_samples;
 938:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint64_t hfnum_other_frrem_accum;
 939:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
 940:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 941:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef DWC_UTE_CFI
 942:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t pwron_rxfsiz;
 943:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t pwron_gnptxfsiz;
 944:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t pwron_txfsiz[15];
 945:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 946:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t init_rxfsiz;
 947:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t init_gnptxfsiz;
 948:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t init_txfsiz[15];
 949:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
 950:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 951:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Lx state of device */
 952:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_lx_state_e lx_state;
 953:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 954:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Saved Core Global registers */
 955:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	struct dwc_otg_global_regs_backup *gr_backup;
 956:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Saved Host registers */
 957:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	struct dwc_otg_host_regs_backup *hr_backup;
 958:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Saved Device registers */
 959:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	struct dwc_otg_dev_regs_backup *dr_backup;
 960:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 961:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Power Down Enable */
 962:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t power_down;
 963:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 964:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** ADP support Enable */
 965:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t adp_enable;
 966:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 967:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** ADP structure object */
 968:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_adp_t adp;
 969:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 970:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** hibernation/suspend flag */
 971:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int hibernation_suspend;
 972:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 973:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** OTG revision supported */
 974:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t otg_ver;
 975:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 976:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** OTG status flag used for HNP polling */
 977:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t otg_sts;
 978:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 979:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Pointer to either hcd->lock or pcd->lock */
 980:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_spinlock_t *lock;
 981:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** };
 982:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 983:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef DEBUG
 984:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /*
 985:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This function is called when transfer is timed out.
 986:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
 987:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void hc_xfer_timeout(void *ptr);
 988:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
 989:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 990:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /*
 991:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * The following functions are functions for works
 992:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * using during handling some interrupts
 993:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
 994:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void w_conn_id_status_change(void *p);
 995:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 996:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void w_wakeup_detected(void *p);
 997:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 998:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Saves global register values into system memory. */
 999:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int dwc_otg_save_global_regs(dwc_otg_core_if_t * core_if);
1000:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Saves device register values into system memory. */
1001:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int dwc_otg_save_dev_regs(dwc_otg_core_if_t * core_if);
1002:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Saves host register values into system memory. */
1003:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int dwc_otg_save_host_regs(dwc_otg_core_if_t * core_if);
1004:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Restore global register values. */
1005:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int dwc_otg_restore_global_regs(dwc_otg_core_if_t * core_if);
1006:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Restore host register values. */
1007:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int dwc_otg_restore_host_regs(dwc_otg_core_if_t * core_if, int reset);
1008:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Restore device register values. */
1009:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int dwc_otg_restore_dev_regs(dwc_otg_core_if_t * core_if,
1010:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				    int rem_wakeup);
1011:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int restore_lpm_i2c_regs(dwc_otg_core_if_t * core_if);
1012:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int restore_essential_regs(dwc_otg_core_if_t * core_if, int rmode,
1013:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				  int is_host);
1014:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1015:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int dwc_otg_host_hibernation_restore(dwc_otg_core_if_t * core_if,
1016:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					    int restore_mode, int reset);
1017:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int dwc_otg_device_hibernation_restore(dwc_otg_core_if_t * core_if,
1018:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					      int rem_wakeup, int reset);
1019:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1020:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /*
1021:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * The following functions support initialization of the CIL driver component
1022:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * and the DWC_otg controller.
1023:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1024:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_core_host_init(dwc_otg_core_if_t * _core_if);
1025:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_core_dev_init(dwc_otg_core_if_t * _core_if);
1026:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1027:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** @name Device CIL Functions
1028:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * The following functions support managing the DWC_otg controller in device
1029:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * mode.
1030:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1031:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**@{*/
1032:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_wakeup(dwc_otg_core_if_t * _core_if);
1033:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_read_setup_packet(dwc_otg_core_if_t * _core_if,
1034:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				      uint32_t * _dest);
1035:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern uint32_t dwc_otg_get_frame_number(dwc_otg_core_if_t * _core_if);
1036:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_ep0_activate(dwc_otg_core_if_t * _core_if, dwc_ep_t * _ep);
1037:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_ep_activate(dwc_otg_core_if_t * _core_if, dwc_ep_t * _ep);
1038:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_ep_deactivate(dwc_otg_core_if_t * _core_if, dwc_ep_t * _ep);
1039:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_ep_start_transfer(dwc_otg_core_if_t * _core_if,
1040:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				      dwc_ep_t * _ep);
1041:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_ep_start_zl_transfer(dwc_otg_core_if_t * _core_if,
1042:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					 dwc_ep_t * _ep);
1043:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_ep0_start_transfer(dwc_otg_core_if_t * _core_if,
1044:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				       dwc_ep_t * _ep);
1045:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_ep0_continue_transfer(dwc_otg_core_if_t * _core_if,
1046:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					  dwc_ep_t * _ep);
1047:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_ep_write_packet(dwc_otg_core_if_t * _core_if,
1048:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				    dwc_ep_t * _ep, int _dma);
1049:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_ep_set_stall(dwc_otg_core_if_t * _core_if, dwc_ep_t * _ep);
1050:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_ep_clear_stall(dwc_otg_core_if_t * _core_if,
1051:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   dwc_ep_t * _ep);
1052:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_enable_device_interrupts(dwc_otg_core_if_t * _core_if);
1053:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1054:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef DWC_EN_ISOC
1055:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_iso_ep_start_frm_transfer(dwc_otg_core_if_t * core_if,
1056:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					      dwc_ep_t * ep);
1057:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_iso_ep_start_buf_transfer(dwc_otg_core_if_t * core_if,
1058:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					      dwc_ep_t * ep);
1059:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif /* DWC_EN_ISOC */
1060:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**@}*/
1061:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1062:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** @name Host CIL Functions
1063:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * The following functions support managing the DWC_otg controller in host
1064:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * mode.
1065:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1066:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**@{*/
1067:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_hc_init(dwc_otg_core_if_t * _core_if, dwc_hc_t * _hc);
1068:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_hc_halt(dwc_otg_core_if_t * _core_if,
1069:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 			    dwc_hc_t * _hc, dwc_otg_halt_status_e _halt_status);
1070:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_hc_cleanup(dwc_otg_core_if_t * _core_if, dwc_hc_t * _hc);
1071:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_hc_start_transfer(dwc_otg_core_if_t * _core_if,
1072:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				      dwc_hc_t * _hc);
1073:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int dwc_otg_hc_continue_transfer(dwc_otg_core_if_t * _core_if,
1074:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					dwc_hc_t * _hc);
1075:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_hc_do_ping(dwc_otg_core_if_t * _core_if, dwc_hc_t * _hc);
1076:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_hc_write_packet(dwc_otg_core_if_t * _core_if,
1077:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				    dwc_hc_t * _hc);
1078:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_enable_host_interrupts(dwc_otg_core_if_t * _core_if);
1079:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_disable_host_interrupts(dwc_otg_core_if_t * _core_if);
1080:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1081:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_hc_start_transfer_ddma(dwc_otg_core_if_t * core_if,
1082:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					   dwc_hc_t * hc);
1083:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1084:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern uint32_t calc_frame_interval(dwc_otg_core_if_t * core_if);
1085:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1086:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef USE_IFX_DEV 
1087:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** int32_t dwc_otg_handle_disconnect_intr(dwc_otg_core_if_t * core_if);
1088:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
1089:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1090:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /* Macro used to clear one channel interrupt */
1091:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define clear_hc_int(_hc_regs_, _intr_) \
1092:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** do { \
1093:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hcint_data_t hcint_clear = {.d32 = 0}; \
1094:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hcint_clear.b._intr_ = 1; \
1095:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_WRITE_REG32(&(_hc_regs_)->hcint, hcint_clear.d32); \
1096:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } while (0)
1097:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1098:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1099:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1100:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /*
1101:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Macro used to disable one channel interrupt. Channel interrupts are
1102:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * disabled when the channel is halted or released by the interrupt handler.
1103:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * There is no need to handle further interrupts of that type until the
1104:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * channel is re-assigned. In fact, subsequent handling may cause crashes
1105:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * because the channel structures are cleaned up when the channel is released.
1106:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1107:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define disable_hc_int(_hc_regs_, _intr_) \
1108:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** do { \
1109:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hcintmsk_data_t hcintmsk = {.d32 = 0}; \
1110:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hcintmsk.b._intr_ = 1; \
1111:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_MODIFY_REG32(&(_hc_regs_)->hcintmsk, hcintmsk.d32, 0); \
1112:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } while (0)
1113:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1114:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1115:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This function Reads HPRT0 in preparation to modify. It keeps the
1116:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * WC bits 0 so that if they are read as 1, they won't clear when you
1117:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * write it back
1118:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1119:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline uint32_t dwc_otg_read_hprt0(dwc_otg_core_if_t * _core_if)
1120:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1121:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hprt0_data_t hprt0;
1122:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hprt0.d32 = DWC_READ_REG32(_core_if->host_if->hprt0);
1123:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hprt0.b.prtena = 0;
1124:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hprt0.b.prtconndet = 0;
1125:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hprt0.b.prtenchng = 0;
1126:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hprt0.b.prtovrcurrchng = 0;
1127:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	return hprt0.d32;
1128:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1129:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1130:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**@}*/
1131:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1132:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** @name Common CIL Functions
1133:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * The following functions support managing the DWC_otg controller in either
1134:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * device or host mode.
1135:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1136:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**@{*/
1137:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1138:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_read_packet(dwc_otg_core_if_t * core_if,
1139:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				uint8_t * dest, uint16_t bytes);
1140:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1141:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_flush_tx_fifo(dwc_otg_core_if_t * _core_if, const int _num);
1142:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_flush_rx_fifo(dwc_otg_core_if_t * _core_if);
1143:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_core_reset(dwc_otg_core_if_t * _core_if);
1144:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1145:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1146:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This function returns the Core Interrupt register.
1147:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1148:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline uint32_t dwc_otg_read_core_intr(dwc_otg_core_if_t * core_if)
1149:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1150:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	return (DWC_READ_REG32(&core_if->core_global_regs->gintsts) &
1151:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		DWC_READ_REG32(&core_if->core_global_regs->gintmsk));
1152:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1153:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1154:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1155:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This function returns the OTG Interrupt register.
1156:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1157:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline uint32_t dwc_otg_read_otg_intr(dwc_otg_core_if_t * core_if)
1158:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1159:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	return (DWC_READ_REG32(&core_if->core_global_regs->gotgint));
1160:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1161:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1162:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1163:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This function reads the Device All Endpoints Interrupt register and
1164:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * returns the IN endpoint interrupt bits.
1165:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1166:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline uint32_t dwc_otg_read_dev_all_in_ep_intr(dwc_otg_core_if_t *
1167:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 						       core_if)
1168:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1169:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1170:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t v;
1171:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1172:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->multiproc_int_enable) {
1173:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		v = DWC_READ_REG32(&core_if->dev_if->
1174:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   dev_global_regs->deachint) &
1175:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		    DWC_READ_REG32(&core_if->
1176:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   dev_if->dev_global_regs->deachintmsk);
1177:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	} else {
1178:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		v = DWC_READ_REG32(&core_if->dev_if->dev_global_regs->daint) &
1179:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		    DWC_READ_REG32(&core_if->dev_if->dev_global_regs->daintmsk);
1180:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1181:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	return (v & 0xffff);
1182:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1183:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1184:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1185:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This function reads the Device All Endpoints Interrupt register and
1186:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * returns the OUT endpoint interrupt bits.
1187:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1188:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline uint32_t dwc_otg_read_dev_all_out_ep_intr(dwc_otg_core_if_t *
1189:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 							core_if)
1190:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1191:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t v;
1192:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1193:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->multiproc_int_enable) {
1194:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		v = DWC_READ_REG32(&core_if->dev_if->
1195:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   dev_global_regs->deachint) &
1196:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		    DWC_READ_REG32(&core_if->
1197:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   dev_if->dev_global_regs->deachintmsk);
1198:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	} else {
1199:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		v = DWC_READ_REG32(&core_if->dev_if->dev_global_regs->daint) &
1200:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		    DWC_READ_REG32(&core_if->dev_if->dev_global_regs->daintmsk);
1201:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1202:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1203:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	return ((v & 0xffff0000) >> 16);
1204:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1205:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1206:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1207:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This function returns the Device IN EP Interrupt register
1208:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1209:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline uint32_t dwc_otg_read_dev_in_ep_intr(dwc_otg_core_if_t * core_if,
1210:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 						   dwc_ep_t * ep)
1211:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1212:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_dev_if_t *dev_if = core_if->dev_if;
1213:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t v, msk, emp;
1214:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1215:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->multiproc_int_enable) {
1216:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		msk =
1217:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		    DWC_READ_REG32(&dev_if->
1218:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   dev_global_regs->diepeachintmsk[ep->num]);
1219:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		emp =
1220:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		    DWC_READ_REG32(&dev_if->
1221:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   dev_global_regs->dtknqr4_fifoemptymsk);
1222:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		msk |= ((emp >> ep->num) & 0x1) << 7;
1223:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		v = DWC_READ_REG32(&dev_if->in_ep_regs[ep->num]->diepint) & msk;
1224:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	} else {
1225:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		msk = DWC_READ_REG32(&dev_if->dev_global_regs->diepmsk);
1226:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		emp =
1227:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		    DWC_READ_REG32(&dev_if->
1228:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   dev_global_regs->dtknqr4_fifoemptymsk);
1229:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		msk |= ((emp >> ep->num) & 0x1) << 7;
1230:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		v = DWC_READ_REG32(&dev_if->in_ep_regs[ep->num]->diepint) & msk;
1231:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1232:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1233:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	return v;
1234:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1235:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1236:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1237:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This function returns the Device OUT EP Interrupt register
1238:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1239:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline uint32_t dwc_otg_read_dev_out_ep_intr(dwc_otg_core_if_t *
1240:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 						    _core_if, dwc_ep_t * _ep)
1241:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1242:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_dev_if_t *dev_if = _core_if->dev_if;
1243:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t v;
1244:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	//doepmsk_data_t msk = {.d32 = 0 };
1245:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	doepmsk_data_t msk;
1246:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1247:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (_core_if->multiproc_int_enable) {
1248:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		msk.d32 =
1249:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		    DWC_READ_REG32(&dev_if->
1250:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   dev_global_regs->doepeachintmsk[_ep->num]);
1251:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		if (_core_if->pti_enh_enable) {
1252:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 			msk.b.pktdrpsts = 1;
1253:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		}
1254:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		v = DWC_READ_REG32(&dev_if->
1255:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   out_ep_regs[_ep->num]->doepint) & msk.d32;
1256:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	} else {
1257:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		msk.d32 = DWC_READ_REG32(&dev_if->dev_global_regs->doepmsk);
1258:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		if (_core_if->pti_enh_enable) {
1259:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 			msk.b.pktdrpsts = 1;
1260:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		}
1261:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		v = DWC_READ_REG32(&dev_if->
1262:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   out_ep_regs[_ep->num]->doepint) & msk.d32;
1263:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1264:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	return v;
1265:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1266:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1267:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1268:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This function returns the Host All Channel Interrupt register
1269:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1270:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline uint32_t dwc_otg_read_host_all_channels_intr(dwc_otg_core_if_t *
1271:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 							   _core_if)
1272:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1273:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	return (DWC_READ_REG32(&_core_if->host_if->host_global_regs->haint));
1274:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1275:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1276:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline uint32_t dwc_otg_read_host_channel_intr(dwc_otg_core_if_t *
1277:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 						      _core_if, dwc_hc_t * _hc)
1278:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1279:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	return (DWC_READ_REG32
1280:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		(&_core_if->host_if->hc_regs[_hc->hc_num]->hcint));
1281:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1282:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1283:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1284:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This function returns the mode of the operation, host or device.
1285:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
1286:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * @return 0 - Device Mode, 1 - Host Mode
1287:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1288:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline uint32_t dwc_otg_mode(dwc_otg_core_if_t * _core_if)
1289:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1290:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	return (DWC_READ_REG32(&_core_if->core_global_regs->gintsts) & 0x1);
1291:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1292:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1293:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**@}*/
1294:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1295:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1296:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * DWC_otg CIL callback structure. This structure allows the HCD and
1297:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * PCD to register functions used for starting and stopping the PCD
1298:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * and HCD for role change on for a DRD.
1299:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1300:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** typedef struct dwc_otg_cil_callbacks {
1301:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Start function for role change */
1302:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int (*start) (void *_p);
1303:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Stop Function for role change */
1304:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int (*stop) (void *_p);
1305:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Disconnect Function for role change */
1306:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int (*disconnect) (void *_p);
1307:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Resume/Remote wakeup Function */
1308:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int (*resume_wakeup) (void *_p);
1309:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Suspend function */
1310:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int (*suspend) (void *_p);
1311:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Session Start (SRP) */
1312:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int (*session_start) (void *_p);
1313:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef CONFIG_USB_DWC_OTG_LPM
1314:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Sleep (switch to L0 state) */
1315:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int (*sleep) (void *_p);
1316:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
1317:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Pointer passed to start() and stop() */
1318:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	void *p;
1319:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } dwc_otg_cil_callbacks_t;
1320:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1321:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_cil_register_pcd_callbacks(dwc_otg_core_if_t * _core_if,
1322:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					       dwc_otg_cil_callbacks_t * _cb,
1323:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					       void *_p);
1324:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_cil_register_hcd_callbacks(dwc_otg_core_if_t * _core_if,
1325:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					       dwc_otg_cil_callbacks_t * _cb,
1326:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					       void *_p);
1327:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1328:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** void dwc_otg_initiate_srp(dwc_otg_core_if_t * core_if);
1329:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1330:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** //////////////////////////////////////////////////////////////////////
1331:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Start the HCD.  Helper function for using the HCD callbacks.
1332:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
1333:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * @param core_if Programming view of DWC_otg controller.
1334:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1335:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline void cil_hcd_start(dwc_otg_core_if_t * core_if)
1336:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1337:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->hcd_cb && core_if->hcd_cb->start) {
1338:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		core_if->hcd_cb->start(core_if->hcd_cb->p);
1339:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1340:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1341:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1342:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Stop the HCD.  Helper function for using the HCD callbacks.
1343:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
1344:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * @param core_if Programming view of DWC_otg controller.
1345:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1346:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline void cil_hcd_stop(dwc_otg_core_if_t * core_if)
1347:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1348:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->hcd_cb && core_if->hcd_cb->stop) {
1349:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		core_if->hcd_cb->stop(core_if->hcd_cb->p);
1350:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1351:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1352:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1353:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Disconnect the HCD.  Helper function for using the HCD callbacks.
1354:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
1355:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * @param core_if Programming view of DWC_otg controller.
1356:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1357:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline void cil_hcd_disconnect(dwc_otg_core_if_t * core_if)
1358:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1359:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->hcd_cb && core_if->hcd_cb->disconnect) {
1360:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		core_if->hcd_cb->disconnect(core_if->hcd_cb->p);
1361:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1362:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1363:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1364:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Inform the HCD the a New Session has begun.  Helper function for
1365:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * using the HCD callbacks.
1366:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
1367:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * @param core_if Programming view of DWC_otg controller.
1368:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1369:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline void cil_hcd_session_start(dwc_otg_core_if_t * core_if)
1370:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1371:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->hcd_cb && core_if->hcd_cb->session_start) {
1372:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		core_if->hcd_cb->session_start(core_if->hcd_cb->p);
1373:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1374:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1375:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1376:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef CONFIG_USB_DWC_OTG_LPM
1377:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1378:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Inform the HCD about LPM sleep.
1379:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Helper function for using the HCD callbacks.
1380:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
1381:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * @param core_if Programming view of DWC_otg controller.
1382:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1383:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline void cil_hcd_sleep(dwc_otg_core_if_t * core_if)
1384:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1385:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->hcd_cb && core_if->hcd_cb->sleep) {
1386:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		core_if->hcd_cb->sleep(core_if->hcd_cb->p);
1387:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1388:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1389:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
1390:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1391:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Resume the HCD.  Helper function for using the HCD callbacks.
1392:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
1393:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * @param core_if Programming view of DWC_otg controller.
1394:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1395:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline void cil_hcd_resume(dwc_otg_core_if_t * core_if)
1396:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1397:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->hcd_cb && core_if->hcd_cb->resume_wakeup) {
1398:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		core_if->hcd_cb->resume_wakeup(core_if->hcd_cb->p);
1399:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1400:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1401:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1402:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Start the PCD.  Helper function for using the PCD callbacks.
1403:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
1404:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * @param core_if Programming view of DWC_otg controller.
1405:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1406:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline void cil_pcd_start(dwc_otg_core_if_t * core_if)
1407:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
  27              		.loc 1 1407 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
1408:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->pcd_cb && core_if->pcd_cb->start) {
  43              		.loc 1 1408 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a DB6E     		ldr	r3, [r3, #108]
  46 000c 002B     		cmp	r3, #0
  47 000e 0CD0     		beq	.L1
  48              		.loc 1 1408 0 is_stmt 0 discriminator 1
  49 0010 7B68     		ldr	r3, [r7, #4]
  50 0012 DB6E     		ldr	r3, [r3, #108]
  51 0014 1B68     		ldr	r3, [r3, #0]
  52 0016 002B     		cmp	r3, #0
  53 0018 07D0     		beq	.L1
1409:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		core_if->pcd_cb->start(core_if->pcd_cb->p);
  54              		.loc 1 1409 0 is_stmt 1
  55 001a 7B68     		ldr	r3, [r7, #4]
  56 001c DB6E     		ldr	r3, [r3, #108]
  57 001e 1B68     		ldr	r3, [r3, #0]
  58 0020 7A68     		ldr	r2, [r7, #4]
  59 0022 D26E     		ldr	r2, [r2, #108]
  60 0024 9269     		ldr	r2, [r2, #24]
  61 0026 1046     		mov	r0, r2
  62 0028 9847     		blx	r3
  63              	.L1:
1410:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1411:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
  64              		.loc 1 1411 0
  65 002a 07F10807 		add	r7, r7, #8
  66 002e BD46     		mov	sp, r7
  67 0030 80BD     		pop	{r7, pc}
  68              		.cfi_endproc
  69              	.LFE16:
  71 0032 00BF     		.section	.text.get_ep_from_handle,"ax",%progbits
  72              		.align	2
  73              		.thumb
  74              		.thumb_func
  76              	get_ep_from_handle:
  77              	.LFB20:
  78              		.file 2 "../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c"
   1:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /* ==========================================================================
   2:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * $File: //dwh/usb_iip/dev/software/otg/linux/drivers/dwc_otg_pcd.c $
   3:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * $Revision: #94 $
   4:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * $Date: 2010/11/29 $
   5:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * $Change: 1636033 $
   6:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  *
   7:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * Synopsys HS OTG Linux Software Driver and documentation (hereinafter,
   8:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * "Software") is an Unsupported proprietary work of Synopsys, Inc. unless
   9:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * otherwise expressly agreed to in writing between Synopsys and you.
  10:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  *
  11:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * The Software IS NOT an item of Licensed Software or Licensed Product under
  12:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * any End User Software License Agreement or Agreement for Licensed Product
  13:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * with Synopsys or any supplement thereto. You are permitted to use and
  14:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * redistribute this Software in source and binary forms, with or without
  15:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * modification, provided that redistributions of source code must retain this
  16:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * notice. You may not view, use, disclose, copy or distribute this file or
  17:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * any information contained herein except pursuant to this license grant from
  18:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * Synopsys. If you do not agree with this notice, including the disclaimer
  19:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * below, then you are not authorized to use the Software.
  20:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  *
  21:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * THIS SOFTWARE IS BEING DISTRIBUTED BY SYNOPSYS SOLELY ON AN "AS IS" BASIS
  22:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * ARE HEREBY DISCLAIMED. IN NO EVENT SHALL SYNOPSYS BE LIABLE FOR ANY DIRECT,
  25:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  26:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  28:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  29:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
  30:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
  31:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * DAMAGE.
  32:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * ========================================================================== */
  33:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
  34:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /*******************************************************************************
  35:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  Copyright (c) 2011, Infineon Technologies AG                                 **
  36:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  All rights reserved.                                                         **
  37:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****                                                                               **
  38:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  Redistribution and use in source and binary forms, with or without           **
  39:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  modification,are permitted provided that the following conditions are met:   **
  40:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****                                                                               **
  41:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  *Redistributions of source code must retain the above copyright notice,      **
  42:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  this list of conditions and the following disclaimer.                        **
  43:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  *Redistributions in binary form must reproduce the above copyright notice,   **
  44:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  this list of conditions and the following disclaimer in the documentation    **
  45:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  and/or other materials provided with the distribution.                       **
  46:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  *Neither the name of the copyright holders nor the names of its contributors **
  47:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  may be used to endorse or promote products derived from this software without**
  48:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  specific prior written permission.                                           **
  49:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****                                                                               **
  50:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  **
  51:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    **
  52:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   **
  53:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   **
  54:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         **
  55:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         **
  56:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    **
  57:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      **
  58:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       **
  59:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   **
  60:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  POSSIBILITY OF SUCH DAMAGE.                                                  **
  61:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****                                                                               **
  62:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  To improve the quality of the software, users are encouraged to share        **
  63:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  modifications, enhancements or bug fixes with Infineon Technologies AG       **
  64:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  dave@infineon.com).                                                          **
  65:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****                                                                               **
  66:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** ********************************************************************************
  67:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** **                                                                            **
  68:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** **                                                                            **
  69:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** ** PLATFORM : Infineon XMC4000 Series                                         **
  70:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** **                                                                            **
  71:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** ** COMPILER : Compiler Independent                                            **
  72:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** **                                                                            **
  73:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** ** AUTHOR : App Developer                                                     **
  74:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** **                                                                            **
  75:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** ** MAY BE CHANGED BY USER [yes/no]: Yes                                       **
  76:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** **                                                                            **
  77:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** ** MODIFICATION DATE : Apr 8, 2012                                           **
  78:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** **                                                                            **
  79:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** *******************************************************************************/
  80:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
  81:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /*******************************************************************************
  82:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** **                       Author(s) Identity                                   **
  83:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** ********************************************************************************
  84:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** **                                                                            **
  85:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** ** Initials    Name                                                           **
  86:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** ** ---------------------------------------------------------------------------**
  87:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** ** CM          App Developer                                                  **
  88:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** *******************************************************************************/
  89:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
  90:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
  91:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /** @file
  92:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * This file implements PCD Core. All code in this file is portable and doesn't
  93:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * use any OS specific functions.
  94:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * PCD Core provides Interface, defined in <code><dwc_otg_pcd_if.h></code>
  95:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * header file, which can be used to implement OS specific PCD interface.
  96:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  *
  97:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * An important function of the PCD is managing interrupts generated
  98:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * by the DWC_otg controller. The implementation of the DWC_otg device
  99:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * mode interrupt service routines is in dwc_otg_pcd_intr.c.
 100:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  *
 101:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * @todo Add Device Mode test modes (Test J mode, Test K mode, etc).
 102:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * @todo Does it work when the request size is greater than DEPTSIZ
 103:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * transfer size
 104:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  *
 105:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
 106:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #include "../type_CM.h"
 107:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #ifndef DWC_HOST_ONLY
 108:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #include "dwc_otg_pcd.h"
 109:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 110:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #ifdef DWC_UTE_CFI
 111:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #include "dwc_otg_cfi.h"
 112:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 113:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** extern int init_cfi(cfiobject_t * cfiobj);
 114:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #endif
 115:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 116:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
 117:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * Choose endpoint from ep arrays using usb_ep structure.
 118:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
 119:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** static dwc_otg_pcd_ep_t *get_ep_from_handle(dwc_otg_pcd_t * pcd, void *handle)
 120:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
  79              		.loc 2 120 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 16
  82              		@ frame_needed = 1, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84 0000 80B4     		push	{r7}
  85              	.LCFI3:
  86              		.cfi_def_cfa_offset 4
  87              		.cfi_offset 7, -4
  88 0002 85B0     		sub	sp, sp, #20
  89              	.LCFI4:
  90              		.cfi_def_cfa_offset 24
  91 0004 00AF     		add	r7, sp, #0
  92              	.LCFI5:
  93              		.cfi_def_cfa_register 7
  94 0006 7860     		str	r0, [r7, #4]
  95 0008 3960     		str	r1, [r7, #0]
 121:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	int i;
 122:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (pcd->ep0.priv == handle) {
  96              		.loc 2 122 0
  97 000a 7B68     		ldr	r3, [r7, #4]
  98 000c 5A6E     		ldr	r2, [r3, #100]
  99 000e 3B68     		ldr	r3, [r7, #0]
 100 0010 9A42     		cmp	r2, r3
 101 0012 03D1     		bne	.L4
 123:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		return &pcd->ep0;
 102              		.loc 2 123 0
 103 0014 7B68     		ldr	r3, [r7, #4]
 104 0016 03F12403 		add	r3, r3, #36
 105 001a 44E0     		b	.L5
 106              	.L4:
 124:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
 125:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	for (i = 0; i < MAX_EPS_CHANNELS - 1; i++) {
 107              		.loc 2 125 0
 108 001c 4FF00003 		mov	r3, #0
 109 0020 FB60     		str	r3, [r7, #12]
 110 0022 3BE0     		b	.L6
 111              	.L9:
 126:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (pcd->in_ep[i].priv == handle)
 112              		.loc 2 126 0
 113 0024 7968     		ldr	r1, [r7, #4]
 114 0026 FA68     		ldr	r2, [r7, #12]
 115 0028 1346     		mov	r3, r2
 116 002a 4FEA0313 		lsl	r3, r3, #4
 117 002e 9B18     		adds	r3, r3, r2
 118 0030 4FEA8303 		lsl	r3, r3, #2
 119 0034 CB18     		adds	r3, r1, r3
 120 0036 03F1A803 		add	r3, r3, #168
 121 003a 1A68     		ldr	r2, [r3, #0]
 122 003c 3B68     		ldr	r3, [r7, #0]
 123 003e 9A42     		cmp	r2, r3
 124 0040 0BD1     		bne	.L7
 127:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			return &pcd->in_ep[i];
 125              		.loc 2 127 0
 126 0042 FA68     		ldr	r2, [r7, #12]
 127 0044 1346     		mov	r3, r2
 128 0046 4FEA0313 		lsl	r3, r3, #4
 129 004a 9B18     		adds	r3, r3, r2
 130 004c 4FEA8303 		lsl	r3, r3, #2
 131 0050 03F16803 		add	r3, r3, #104
 132 0054 7A68     		ldr	r2, [r7, #4]
 133 0056 D318     		adds	r3, r2, r3
 134 0058 25E0     		b	.L5
 135              	.L7:
 128:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (pcd->out_ep[i].priv == handle)
 136              		.loc 2 128 0
 137 005a 7968     		ldr	r1, [r7, #4]
 138 005c FA68     		ldr	r2, [r7, #12]
 139 005e 1346     		mov	r3, r2
 140 0060 4FEA0313 		lsl	r3, r3, #4
 141 0064 9B18     		adds	r3, r3, r2
 142 0066 4FEA8303 		lsl	r3, r3, #2
 143 006a CB18     		adds	r3, r1, r3
 144 006c 03F52173 		add	r3, r3, #644
 145 0070 1A68     		ldr	r2, [r3, #0]
 146 0072 3B68     		ldr	r3, [r7, #0]
 147 0074 9A42     		cmp	r2, r3
 148 0076 0DD1     		bne	.L8
 129:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			return &pcd->out_ep[i];
 149              		.loc 2 129 0
 150 0078 FA68     		ldr	r2, [r7, #12]
 151 007a 1346     		mov	r3, r2
 152 007c 4FEA0313 		lsl	r3, r3, #4
 153 0080 9B18     		adds	r3, r3, r2
 154 0082 4FEA8303 		lsl	r3, r3, #2
 155 0086 03F51073 		add	r3, r3, #576
 156 008a 7A68     		ldr	r2, [r7, #4]
 157 008c D318     		adds	r3, r2, r3
 158 008e 03F10403 		add	r3, r3, #4
 159 0092 08E0     		b	.L5
 160              	.L8:
 125:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	for (i = 0; i < MAX_EPS_CHANNELS - 1; i++) {
 161              		.loc 2 125 0
 162 0094 FB68     		ldr	r3, [r7, #12]
 163 0096 03F10103 		add	r3, r3, #1
 164 009a FB60     		str	r3, [r7, #12]
 165              	.L6:
 125:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	for (i = 0; i < MAX_EPS_CHANNELS - 1; i++) {
 166              		.loc 2 125 0 is_stmt 0 discriminator 1
 167 009c FB68     		ldr	r3, [r7, #12]
 168 009e 062B     		cmp	r3, #6
 169 00a0 C0DD     		ble	.L9
 130:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
 131:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 132:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return NULL;
 170              		.loc 2 132 0 is_stmt 1
 171 00a2 4FF00003 		mov	r3, #0
 172              	.L5:
 133:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 173              		.loc 2 133 0
 174 00a6 1846     		mov	r0, r3
 175 00a8 07F11407 		add	r7, r7, #20
 176 00ac BD46     		mov	sp, r7
 177 00ae 80BC     		pop	{r7}
 178 00b0 7047     		bx	lr
 179              		.cfi_endproc
 180              	.LFE20:
 182 00b2 00BF     		.section	.text.dwc_otg_request_done,"ax",%progbits
 183              		.align	2
 184              		.global	dwc_otg_request_done
 185              		.thumb
 186              		.thumb_func
 188              	dwc_otg_request_done:
 189              	.LFB21:
 134:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 135:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
 136:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * This function completes a request.  It call's the request call back.
 137:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
 138:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** void dwc_otg_request_done(dwc_otg_pcd_ep_t * ep, dwc_otg_pcd_request_t * req,
 139:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			  int32_t status)
 140:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 190              		.loc 2 140 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 24
 193              		@ frame_needed = 1, uses_anonymous_args = 0
 194 0000 90B5     		push	{r4, r7, lr}
 195              	.LCFI6:
 196              		.cfi_def_cfa_offset 12
 197              		.cfi_offset 4, -12
 198              		.cfi_offset 7, -8
 199              		.cfi_offset 14, -4
 200 0002 89B0     		sub	sp, sp, #36
 201              	.LCFI7:
 202              		.cfi_def_cfa_offset 48
 203 0004 02AF     		add	r7, sp, #8
 204              	.LCFI8:
 205              		.cfi_def_cfa 7, 40
 206 0006 F860     		str	r0, [r7, #12]
 207 0008 B960     		str	r1, [r7, #8]
 208 000a 7A60     		str	r2, [r7, #4]
 141:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	unsigned stopped = ep->stopped;
 209              		.loc 2 141 0
 210 000c FB68     		ldr	r3, [r7, #12]
 211 000e 1B7B     		ldrb	r3, [r3, #12]
 212 0010 C3F30003 		ubfx	r3, r3, #0, #1
 213 0014 DBB2     		uxtb	r3, r3
 214 0016 7B61     		str	r3, [r7, #20]
 142:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 143:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_DEBUGPL(DBG_PCDV, "%s(%p)\n", __func__, ep);
 144:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_CIRCLEQ_REMOVE_INIT(&ep->queue, req, queue_entry);
 215              		.loc 2 144 0
 216 0018 BB68     		ldr	r3, [r7, #8]
 217 001a 9A69     		ldr	r2, [r3, #24]
 218 001c FB68     		ldr	r3, [r7, #12]
 219 001e 03F10403 		add	r3, r3, #4
 220 0022 9A42     		cmp	r2, r3
 221 0024 04D1     		bne	.L11
 222              		.loc 2 144 0 is_stmt 0 discriminator 1
 223 0026 BB68     		ldr	r3, [r7, #8]
 224 0028 DA69     		ldr	r2, [r3, #28]
 225 002a FB68     		ldr	r3, [r7, #12]
 226 002c 9A60     		str	r2, [r3, #8]
 227 002e 04E0     		b	.L12
 228              	.L11:
 229              		.loc 2 144 0 discriminator 2
 230 0030 BB68     		ldr	r3, [r7, #8]
 231 0032 9B69     		ldr	r3, [r3, #24]
 232 0034 BA68     		ldr	r2, [r7, #8]
 233 0036 D269     		ldr	r2, [r2, #28]
 234 0038 DA61     		str	r2, [r3, #28]
 235              	.L12:
 236              		.loc 2 144 0 discriminator 3
 237 003a BB68     		ldr	r3, [r7, #8]
 238 003c DA69     		ldr	r2, [r3, #28]
 239 003e FB68     		ldr	r3, [r7, #12]
 240 0040 03F10403 		add	r3, r3, #4
 241 0044 9A42     		cmp	r2, r3
 242 0046 04D1     		bne	.L13
 243              		.loc 2 144 0 discriminator 4
 244 0048 BB68     		ldr	r3, [r7, #8]
 245 004a 9A69     		ldr	r2, [r3, #24]
 246 004c FB68     		ldr	r3, [r7, #12]
 247 004e 5A60     		str	r2, [r3, #4]
 248 0050 04E0     		b	.L14
 249              	.L13:
 250              		.loc 2 144 0 discriminator 5
 251 0052 BB68     		ldr	r3, [r7, #8]
 252 0054 DB69     		ldr	r3, [r3, #28]
 253 0056 BA68     		ldr	r2, [r7, #8]
 254 0058 9269     		ldr	r2, [r2, #24]
 255 005a 9A61     		str	r2, [r3, #24]
 256              	.L14:
 257              		.loc 2 144 0 discriminator 6
 258 005c BB68     		ldr	r3, [r7, #8]
 259 005e 4FF00002 		mov	r2, #0
 260 0062 9A61     		str	r2, [r3, #24]
 261 0064 BB68     		ldr	r3, [r7, #8]
 262 0066 4FF00002 		mov	r2, #0
 263 006a DA61     		str	r2, [r3, #28]
 145:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 146:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* don't modify queue heads during completion callback */
 147:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->stopped = 1;
 264              		.loc 2 147 0 is_stmt 1 discriminator 6
 265 006c FA68     		ldr	r2, [r7, #12]
 266 006e 137B     		ldrb	r3, [r2, #12]
 267 0070 43F00103 		orr	r3, r3, #1
 268 0074 1373     		strb	r3, [r2, #12]
 148:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* spin_unlock/spin_lock now done in fops->complete() */
 149:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->pcd->fops->complete(ep->pcd, ep->priv, req->priv, status,
 269              		.loc 2 149 0 discriminator 6
 270 0076 FB68     		ldr	r3, [r7, #12]
 271 0078 DB6B     		ldr	r3, [r3, #60]
 272 007a 1B68     		ldr	r3, [r3, #0]
 273 007c DC68     		ldr	r4, [r3, #12]
 274 007e FB68     		ldr	r3, [r7, #12]
 275 0080 D96B     		ldr	r1, [r3, #60]
 276 0082 FB68     		ldr	r3, [r7, #12]
 277 0084 1A6C     		ldr	r2, [r3, #64]
 278 0086 BB68     		ldr	r3, [r7, #8]
 279 0088 1B68     		ldr	r3, [r3, #0]
 150:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				req->actual);
 280              		.loc 2 150 0 discriminator 6
 281 008a B868     		ldr	r0, [r7, #8]
 149:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->pcd->fops->complete(ep->pcd, ep->priv, req->priv, status,
 282              		.loc 2 149 0 discriminator 6
 283 008c 0069     		ldr	r0, [r0, #16]
 284 008e 0090     		str	r0, [sp, #0]
 285 0090 0846     		mov	r0, r1
 286 0092 1146     		mov	r1, r2
 287 0094 1A46     		mov	r2, r3
 288 0096 7B68     		ldr	r3, [r7, #4]
 289 0098 A047     		blx	r4
 151:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 152:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (ep->pcd->request_pending > 0) {
 290              		.loc 2 152 0 discriminator 6
 291 009a FB68     		ldr	r3, [r7, #12]
 292 009c DB6B     		ldr	r3, [r3, #60]
 293 009e 1B69     		ldr	r3, [r3, #16]
 294 00a0 002B     		cmp	r3, #0
 295 00a2 05D0     		beq	.L15
 153:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		--ep->pcd->request_pending;
 296              		.loc 2 153 0
 297 00a4 FB68     		ldr	r3, [r7, #12]
 298 00a6 DB6B     		ldr	r3, [r3, #60]
 299 00a8 1A69     		ldr	r2, [r3, #16]
 300 00aa 02F1FF32 		add	r2, r2, #-1
 301 00ae 1A61     		str	r2, [r3, #16]
 302              	.L15:
 154:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
 155:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 156:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->stopped = stopped;
 303              		.loc 2 156 0
 304 00b0 7B69     		ldr	r3, [r7, #20]
 305 00b2 DBB2     		uxtb	r3, r3
 306 00b4 03F00103 		and	r3, r3, #1
 307 00b8 D9B2     		uxtb	r1, r3
 308 00ba FA68     		ldr	r2, [r7, #12]
 309 00bc 137B     		ldrb	r3, [r2, #12]
 310 00be 61F30003 		bfi	r3, r1, #0, #1
 311 00c2 1373     		strb	r3, [r2, #12]
 157:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_FREE(req);
 312              		.loc 2 157 0
 313 00c4 4FF00000 		mov	r0, #0
 314 00c8 B968     		ldr	r1, [r7, #8]
 315 00ca FFF7FEFF 		bl	__DWC_FREE
 158:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 316              		.loc 2 158 0
 317 00ce 07F11C07 		add	r7, r7, #28
 318 00d2 BD46     		mov	sp, r7
 319 00d4 90BD     		pop	{r4, r7, pc}
 320              		.cfi_endproc
 321              	.LFE21:
 323 00d6 00BF     		.section	.text.dwc_otg_request_nuke,"ax",%progbits
 324              		.align	2
 325              		.global	dwc_otg_request_nuke
 326              		.thumb
 327              		.thumb_func
 329              	dwc_otg_request_nuke:
 330              	.LFB22:
 159:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 160:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
 161:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * This function terminates all the requsts in the EP request queue.
 162:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
 163:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** void dwc_otg_request_nuke(dwc_otg_pcd_ep_t * ep)
 164:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 331              		.loc 2 164 0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 16
 334              		@ frame_needed = 1, uses_anonymous_args = 0
 335 0000 80B5     		push	{r7, lr}
 336              	.LCFI9:
 337              		.cfi_def_cfa_offset 8
 338              		.cfi_offset 7, -8
 339              		.cfi_offset 14, -4
 340 0002 84B0     		sub	sp, sp, #16
 341              	.LCFI10:
 342              		.cfi_def_cfa_offset 24
 343 0004 00AF     		add	r7, sp, #0
 344              	.LCFI11:
 345              		.cfi_def_cfa_register 7
 346 0006 7860     		str	r0, [r7, #4]
 165:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_pcd_request_t *req;
 166:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 167:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->stopped = 1;
 347              		.loc 2 167 0
 348 0008 7A68     		ldr	r2, [r7, #4]
 349 000a 137B     		ldrb	r3, [r2, #12]
 350 000c 43F00103 		orr	r3, r3, #1
 351 0010 1373     		strb	r3, [r2, #12]
 168:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 169:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* called with irqs blocked?? */
 170:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	while (!DWC_CIRCLEQ_EMPTY(&ep->queue)) {
 352              		.loc 2 170 0
 353 0012 0AE0     		b	.L17
 354              	.L18:
 171:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		req = DWC_CIRCLEQ_FIRST(&ep->queue);
 355              		.loc 2 171 0
 356 0014 7B68     		ldr	r3, [r7, #4]
 357 0016 5B68     		ldr	r3, [r3, #4]
 358 0018 FB60     		str	r3, [r7, #12]
 172:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwc_otg_request_done(ep, req, -DWC_E_SHUTDOWN);
 359              		.loc 2 172 0
 360 001a 7868     		ldr	r0, [r7, #4]
 361 001c F968     		ldr	r1, [r7, #12]
 362 001e 4FF60E42 		movw	r2, #64526
 363 0022 CFF6FF72 		movt	r2, 65535
 364 0026 FFF7FEFF 		bl	dwc_otg_request_done
 365              	.L17:
 170:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	while (!DWC_CIRCLEQ_EMPTY(&ep->queue)) {
 366              		.loc 2 170 0 discriminator 1
 367 002a 7B68     		ldr	r3, [r7, #4]
 368 002c 5A68     		ldr	r2, [r3, #4]
 369 002e 7B68     		ldr	r3, [r7, #4]
 370 0030 03F10403 		add	r3, r3, #4
 371 0034 9A42     		cmp	r2, r3
 372 0036 EDD1     		bne	.L18
 173:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
 174:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 373              		.loc 2 174 0
 374 0038 07F11007 		add	r7, r7, #16
 375 003c BD46     		mov	sp, r7
 376 003e 80BD     		pop	{r7, pc}
 377              		.cfi_endproc
 378              	.LFE22:
 380              		.section	.text.dwc_otg_pcd_start,"ax",%progbits
 381              		.align	2
 382              		.global	dwc_otg_pcd_start
 383              		.thumb
 384              		.thumb_func
 386              	dwc_otg_pcd_start:
 387              	.LFB23:
 175:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 176:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** void dwc_otg_pcd_start(dwc_otg_pcd_t * pcd,
 177:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		       const struct dwc_otg_pcd_function_ops *fops)
 178:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 388              		.loc 2 178 0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 8
 391              		@ frame_needed = 1, uses_anonymous_args = 0
 392              		@ link register save eliminated.
 393 0000 80B4     		push	{r7}
 394              	.LCFI12:
 395              		.cfi_def_cfa_offset 4
 396              		.cfi_offset 7, -4
 397 0002 83B0     		sub	sp, sp, #12
 398              	.LCFI13:
 399              		.cfi_def_cfa_offset 16
 400 0004 00AF     		add	r7, sp, #0
 401              	.LCFI14:
 402              		.cfi_def_cfa_register 7
 403 0006 7860     		str	r0, [r7, #4]
 404 0008 3960     		str	r1, [r7, #0]
 179:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pcd->fops = fops;
 405              		.loc 2 179 0
 406 000a 7B68     		ldr	r3, [r7, #4]
 407 000c 3A68     		ldr	r2, [r7, #0]
 408 000e 1A60     		str	r2, [r3, #0]
 180:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 409              		.loc 2 180 0
 410 0010 07F10C07 		add	r7, r7, #12
 411 0014 BD46     		mov	sp, r7
 412 0016 80BC     		pop	{r7}
 413 0018 7047     		bx	lr
 414              		.cfi_endproc
 415              	.LFE23:
 417 001a 00BF     		.section	.text.dwc_otg_pcd_start_cb,"ax",%progbits
 418              		.align	2
 419              		.thumb
 420              		.thumb_func
 422              	dwc_otg_pcd_start_cb:
 423              	.LFB24:
 181:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 182:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
 183:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * PCD Callback function for initializing the PCD when switching to
 184:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * device mode.
 185:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  *
 186:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * @param p void pointer to the <code>dwc_otg_pcd_t</code>
 187:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
 188:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** static int dwc_otg_pcd_start_cb(void *p)
 189:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 424              		.loc 2 189 0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 16
 427              		@ frame_needed = 1, uses_anonymous_args = 0
 428 0000 80B5     		push	{r7, lr}
 429              	.LCFI15:
 430              		.cfi_def_cfa_offset 8
 431              		.cfi_offset 7, -8
 432              		.cfi_offset 14, -4
 433 0002 84B0     		sub	sp, sp, #16
 434              	.LCFI16:
 435              		.cfi_def_cfa_offset 24
 436 0004 00AF     		add	r7, sp, #0
 437              	.LCFI17:
 438              		.cfi_def_cfa_register 7
 439 0006 7860     		str	r0, [r7, #4]
 190:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_pcd_t *pcd = (dwc_otg_pcd_t *) p;
 440              		.loc 2 190 0
 441 0008 7B68     		ldr	r3, [r7, #4]
 442 000a FB60     		str	r3, [r7, #12]
 191:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_core_if_t *core_if = GET_CORE_IF(pcd);
 443              		.loc 2 191 0
 444 000c FB68     		ldr	r3, [r7, #12]
 445 000e 9B68     		ldr	r3, [r3, #8]
 446 0010 BB60     		str	r3, [r7, #8]
 192:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 193:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/*
 194:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	 * Initialized the Core for Device mode.
 195:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	 */
 196:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (dwc_otg_is_device_mode(core_if)) {
 447              		.loc 2 196 0
 448 0012 B868     		ldr	r0, [r7, #8]
 449 0014 FFF7FEFF 		bl	dwc_otg_is_device_mode
 450 0018 0346     		mov	r3, r0
 451 001a 002B     		cmp	r3, #0
 452 001c 08D0     		beq	.L21
 197:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwc_otg_core_dev_init(core_if);
 453              		.loc 2 197 0
 454 001e B868     		ldr	r0, [r7, #8]
 455 0020 FFF7FEFF 		bl	dwc_otg_core_dev_init
 198:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		/* Set core_if's lock pointer to the pcd->lock */
 199:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		core_if->lock = pcd->lock;
 456              		.loc 2 199 0
 457 0024 FB68     		ldr	r3, [r7, #12]
 458 0026 D3F82024 		ldr	r2, [r3, #1056]
 459 002a BB68     		ldr	r3, [r7, #8]
 460 002c C3F8CC20 		str	r2, [r3, #204]
 461              	.L21:
 200:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
 201:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return 1;
 462              		.loc 2 201 0
 463 0030 4FF00103 		mov	r3, #1
 202:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 464              		.loc 2 202 0
 465 0034 1846     		mov	r0, r3
 466 0036 07F11007 		add	r7, r7, #16
 467 003a BD46     		mov	sp, r7
 468 003c 80BD     		pop	{r7, pc}
 469              		.cfi_endproc
 470              	.LFE24:
 472 003e 00BF     		.section	.text.dwc_otg_pcd_resume_cb,"ax",%progbits
 473              		.align	2
 474              		.thumb
 475              		.thumb_func
 477              	dwc_otg_pcd_resume_cb:
 478              	.LFB25:
 203:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 204:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /** CFI-specific buffer allocation function for EP */
 205:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #ifdef DWC_UTE_CFI
 206:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** uint8_t *cfiw_ep_alloc_buffer(dwc_otg_pcd_t * pcd, void *pep, dwc_dma_t * addr,
 207:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			      size_t buflen, int flags)
 208:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 209:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_pcd_ep_t *ep;
 210:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep = get_ep_from_handle(pcd, pep);
 211:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (!ep) {
 212:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_WARN("bad ep\n");
 213:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		return -DWC_E_INVALID;
 214:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
 215:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 216:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return pcd->cfi->ops.ep_alloc_buf(pcd->cfi, pcd, ep, addr, buflen,
 217:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					  flags);
 218:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 219:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #else
 220:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** uint8_t *cfiw_ep_alloc_buffer(dwc_otg_pcd_t * pcd, void *pep, dwc_dma_t * addr,
 221:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			      size_t buflen, int flags);
 222:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #endif
 223:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 224:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
 225:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * PCD Callback function for notifying the PCD when resuming from
 226:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * suspend.
 227:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  *
 228:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * @param p void pointer to the <code>dwc_otg_pcd_t</code>
 229:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
 230:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** static int dwc_otg_pcd_resume_cb(void *p)
 231:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 479              		.loc 2 231 0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 16
 482              		@ frame_needed = 1, uses_anonymous_args = 0
 483 0000 80B5     		push	{r7, lr}
 484              	.LCFI18:
 485              		.cfi_def_cfa_offset 8
 486              		.cfi_offset 7, -8
 487              		.cfi_offset 14, -4
 488 0002 84B0     		sub	sp, sp, #16
 489              	.LCFI19:
 490              		.cfi_def_cfa_offset 24
 491 0004 00AF     		add	r7, sp, #0
 492              	.LCFI20:
 493              		.cfi_def_cfa_register 7
 494 0006 7860     		str	r0, [r7, #4]
 232:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_pcd_t *pcd = (dwc_otg_pcd_t *) p;
 495              		.loc 2 232 0
 496 0008 7B68     		ldr	r3, [r7, #4]
 497 000a FB60     		str	r3, [r7, #12]
 233:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 234:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (pcd->fops->resume) {
 498              		.loc 2 234 0
 499 000c FB68     		ldr	r3, [r7, #12]
 500 000e 1B68     		ldr	r3, [r3, #0]
 501 0010 DB69     		ldr	r3, [r3, #28]
 502 0012 002B     		cmp	r3, #0
 503 0014 04D0     		beq	.L24
 235:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		pcd->fops->resume(pcd);
 504              		.loc 2 235 0
 505 0016 FB68     		ldr	r3, [r7, #12]
 506 0018 1B68     		ldr	r3, [r3, #0]
 507 001a DB69     		ldr	r3, [r3, #28]
 508 001c F868     		ldr	r0, [r7, #12]
 509 001e 9847     		blx	r3
 510              	.L24:
 236:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
 237:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 238:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* Stop the SRP timeout timer. */
 239:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if ((GET_CORE_IF(pcd)->core_params->phy_type != DWC_PHY_TYPE_PARAM_FS)
 511              		.loc 2 239 0
 512 0020 FB68     		ldr	r3, [r7, #12]
 513 0022 9B68     		ldr	r3, [r3, #8]
 514 0024 1B68     		ldr	r3, [r3, #0]
 515 0026 D3F88830 		ldr	r3, [r3, #136]
 516 002a 002B     		cmp	r3, #0
 517 002c 06D1     		bne	.L25
 240:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	    || (!GET_CORE_IF(pcd)->core_params->i2c_enable)) {
 518              		.loc 2 240 0
 519 002e FB68     		ldr	r3, [r7, #12]
 520 0030 9B68     		ldr	r3, [r3, #8]
 521 0032 1B68     		ldr	r3, [r3, #0]
 522 0034 D3F89830 		ldr	r3, [r3, #152]
 523 0038 002B     		cmp	r3, #0
 524 003a 0FD1     		bne	.L26
 525              	.L25:
 241:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (GET_CORE_IF(pcd)->srp_timer_started) {
 526              		.loc 2 241 0
 527 003c FB68     		ldr	r3, [r7, #12]
 528 003e 9B68     		ldr	r3, [r3, #8]
 529 0040 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 530 0042 002B     		cmp	r3, #0
 531 0044 0AD0     		beq	.L26
 242:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			GET_CORE_IF(pcd)->srp_timer_started = 0;
 532              		.loc 2 242 0
 533 0046 FB68     		ldr	r3, [r7, #12]
 534 0048 9B68     		ldr	r3, [r3, #8]
 535 004a 4FF00002 		mov	r2, #0
 536 004e 9A75     		strb	r2, [r3, #22]
 243:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_TIMER_CANCEL(GET_CORE_IF(pcd)->srp_timer);
 537              		.loc 2 243 0
 538 0050 FB68     		ldr	r3, [r7, #12]
 539 0052 9B68     		ldr	r3, [r3, #8]
 540 0054 9B69     		ldr	r3, [r3, #24]
 541 0056 1846     		mov	r0, r3
 542 0058 FFF7FEFF 		bl	DWC_TIMER_CANCEL
 543              	.L26:
 244:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
 245:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
 246:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return 1;
 544              		.loc 2 246 0
 545 005c 4FF00103 		mov	r3, #1
 247:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 546              		.loc 2 247 0
 547 0060 1846     		mov	r0, r3
 548 0062 07F11007 		add	r7, r7, #16
 549 0066 BD46     		mov	sp, r7
 550 0068 80BD     		pop	{r7, pc}
 551              		.cfi_endproc
 552              	.LFE25:
 554 006a 00BF     		.section	.text.dwc_otg_pcd_suspend_cb,"ax",%progbits
 555              		.align	2
 556              		.thumb
 557              		.thumb_func
 559              	dwc_otg_pcd_suspend_cb:
 560              	.LFB26:
 248:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 249:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
 250:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * PCD Callback function for notifying the PCD device is suspended.
 251:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  *
 252:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * @param p void pointer to the <code>dwc_otg_pcd_t</code>
 253:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
 254:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** static int dwc_otg_pcd_suspend_cb(void *p)
 255:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 561              		.loc 2 255 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 16
 564              		@ frame_needed = 1, uses_anonymous_args = 0
 565 0000 80B5     		push	{r7, lr}
 566              	.LCFI21:
 567              		.cfi_def_cfa_offset 8
 568              		.cfi_offset 7, -8
 569              		.cfi_offset 14, -4
 570 0002 84B0     		sub	sp, sp, #16
 571              	.LCFI22:
 572              		.cfi_def_cfa_offset 24
 573 0004 00AF     		add	r7, sp, #0
 574              	.LCFI23:
 575              		.cfi_def_cfa_register 7
 576 0006 7860     		str	r0, [r7, #4]
 256:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_pcd_t *pcd = (dwc_otg_pcd_t *) p;
 577              		.loc 2 256 0
 578 0008 7B68     		ldr	r3, [r7, #4]
 579 000a FB60     		str	r3, [r7, #12]
 257:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 258:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (pcd->fops->suspend) {
 580              		.loc 2 258 0
 581 000c FB68     		ldr	r3, [r7, #12]
 582 000e 1B68     		ldr	r3, [r3, #0]
 583 0010 5B69     		ldr	r3, [r3, #20]
 584 0012 002B     		cmp	r3, #0
 585 0014 10D0     		beq	.L29
 259:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_SPINUNLOCK(pcd->lock);
 586              		.loc 2 259 0
 587 0016 FB68     		ldr	r3, [r7, #12]
 588 0018 D3F82034 		ldr	r3, [r3, #1056]
 589 001c 1846     		mov	r0, r3
 590 001e FFF7FEFF 		bl	DWC_SPINUNLOCK
 260:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		pcd->fops->suspend(pcd);
 591              		.loc 2 260 0
 592 0022 FB68     		ldr	r3, [r7, #12]
 593 0024 1B68     		ldr	r3, [r3, #0]
 594 0026 5B69     		ldr	r3, [r3, #20]
 595 0028 F868     		ldr	r0, [r7, #12]
 596 002a 9847     		blx	r3
 261:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_SPINLOCK(pcd->lock);
 597              		.loc 2 261 0
 598 002c FB68     		ldr	r3, [r7, #12]
 599 002e D3F82034 		ldr	r3, [r3, #1056]
 600 0032 1846     		mov	r0, r3
 601 0034 FFF7FEFF 		bl	DWC_SPINLOCK
 602              	.L29:
 262:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
 263:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 264:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return 1;
 603              		.loc 2 264 0
 604 0038 4FF00103 		mov	r3, #1
 265:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 605              		.loc 2 265 0
 606 003c 1846     		mov	r0, r3
 607 003e 07F11007 		add	r7, r7, #16
 608 0042 BD46     		mov	sp, r7
 609 0044 80BD     		pop	{r7, pc}
 610              		.cfi_endproc
 611              	.LFE26:
 613 0046 00BF     		.section	.text.dwc_otg_pcd_stop_cb,"ax",%progbits
 614              		.align	2
 615              		.thumb
 616              		.thumb_func
 618              	dwc_otg_pcd_stop_cb:
 619              	.LFB27:
 266:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 267:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
 268:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * PCD Callback function for stopping the PCD when switching to Host
 269:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * mode.
 270:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  *
 271:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * @param p void pointer to the <code>dwc_otg_pcd_t</code>
 272:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
 273:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** static int dwc_otg_pcd_stop_cb(void *p)
 274:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 620              		.loc 2 274 0
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 16
 623              		@ frame_needed = 1, uses_anonymous_args = 0
 624 0000 80B5     		push	{r7, lr}
 625              	.LCFI24:
 626              		.cfi_def_cfa_offset 8
 627              		.cfi_offset 7, -8
 628              		.cfi_offset 14, -4
 629 0002 84B0     		sub	sp, sp, #16
 630              	.LCFI25:
 631              		.cfi_def_cfa_offset 24
 632 0004 00AF     		add	r7, sp, #0
 633              	.LCFI26:
 634              		.cfi_def_cfa_register 7
 635 0006 7860     		str	r0, [r7, #4]
 275:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_pcd_t *pcd = (dwc_otg_pcd_t *) p;
 636              		.loc 2 275 0
 637 0008 7B68     		ldr	r3, [r7, #4]
 638 000a FB60     		str	r3, [r7, #12]
 276:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	extern void dwc_otg_pcd_stop(dwc_otg_pcd_t * _pcd);
 277:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 278:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_pcd_stop(pcd);
 639              		.loc 2 278 0
 640 000c F868     		ldr	r0, [r7, #12]
 641 000e FFF7FEFF 		bl	dwc_otg_pcd_stop
 279:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return 1;
 642              		.loc 2 279 0
 643 0012 4FF00103 		mov	r3, #1
 280:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 644              		.loc 2 280 0
 645 0016 1846     		mov	r0, r3
 646 0018 07F11007 		add	r7, r7, #16
 647 001c BD46     		mov	sp, r7
 648 001e 80BD     		pop	{r7, pc}
 649              		.cfi_endproc
 650              	.LFE27:
 652              		.data
 653              		.align	2
 656              	pcd_callbacks:
 657 0000 00000000 		.word	dwc_otg_pcd_start_cb
 658 0004 00000000 		.word	dwc_otg_pcd_stop_cb
 659 0008 00000000 		.space	4
 660 000c 00000000 		.word	dwc_otg_pcd_resume_cb
 661 0010 00000000 		.word	dwc_otg_pcd_suspend_cb
 662 0014 00000000 		.space	4
 663 0018 00000000 		.word	0
 664              		.section	.text.dwc_otg_ep_alloc_desc_chain,"ax",%progbits
 665              		.align	2
 666              		.global	dwc_otg_ep_alloc_desc_chain
 667              		.thumb
 668              		.thumb_func
 670              	dwc_otg_ep_alloc_desc_chain:
 671              	.LFB28:
 281:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 282:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
 283:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * PCD Callback structure for handling mode switching.
 284:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
 285:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** static dwc_otg_cil_callbacks_t pcd_callbacks = {
 286:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	.start = dwc_otg_pcd_start_cb,
 287:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	.stop = dwc_otg_pcd_stop_cb,
 288:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	.suspend = dwc_otg_pcd_suspend_cb,
 289:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	.resume_wakeup = dwc_otg_pcd_resume_cb,
 290:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	.p = 0,			/* Set at registration */
 291:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** };
 292:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 293:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
 294:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * This function allocates a DMA Descriptor chain for the Endpoint
 295:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * buffer to be used for a transfer to/from the specified endpoint.
 296:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
 297:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** dwc_otg_dev_dma_desc_t *dwc_otg_ep_alloc_desc_chain(dwc_dma_t * dma_desc_addr,
 298:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						    uint32_t count)
 299:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 672              		.loc 2 299 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 8
 675              		@ frame_needed = 1, uses_anonymous_args = 0
 676 0000 80B5     		push	{r7, lr}
 677              	.LCFI27:
 678              		.cfi_def_cfa_offset 8
 679              		.cfi_offset 7, -8
 680              		.cfi_offset 14, -4
 681 0002 82B0     		sub	sp, sp, #8
 682              	.LCFI28:
 683              		.cfi_def_cfa_offset 16
 684 0004 00AF     		add	r7, sp, #0
 685              	.LCFI29:
 686              		.cfi_def_cfa_register 7
 687 0006 7860     		str	r0, [r7, #4]
 688 0008 3960     		str	r1, [r7, #0]
 300:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 301:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return DWC_DMA_ALLOC(count * sizeof(dwc_otg_dev_dma_desc_t),
 689              		.loc 2 301 0
 690 000a 3B68     		ldr	r3, [r7, #0]
 691 000c 4FEAC303 		lsl	r3, r3, #3
 692 0010 4FF00000 		mov	r0, #0
 693 0014 1946     		mov	r1, r3
 694 0016 7A68     		ldr	r2, [r7, #4]
 695 0018 FFF7FEFF 		bl	__DWC_DMA_ALLOC
 696 001c 0346     		mov	r3, r0
 302:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			     dma_desc_addr);
 303:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 697              		.loc 2 303 0
 698 001e 1846     		mov	r0, r3
 699 0020 07F10807 		add	r7, r7, #8
 700 0024 BD46     		mov	sp, r7
 701 0026 80BD     		pop	{r7, pc}
 702              		.cfi_endproc
 703              	.LFE28:
 705              		.section	.text.dwc_otg_ep_free_desc_chain,"ax",%progbits
 706              		.align	2
 707              		.global	dwc_otg_ep_free_desc_chain
 708              		.thumb
 709              		.thumb_func
 711              	dwc_otg_ep_free_desc_chain:
 712              	.LFB29:
 304:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 305:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
 306:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * This function frees a DMA Descriptor chain that was allocated by ep_alloc_desc.
 307:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
 308:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** void dwc_otg_ep_free_desc_chain(dwc_otg_dev_dma_desc_t * desc_addr,
 309:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				uint32_t dma_desc_addr, uint32_t count)
 310:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 713              		.loc 2 310 0
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 16
 716              		@ frame_needed = 1, uses_anonymous_args = 0
 717 0000 80B5     		push	{r7, lr}
 718              	.LCFI30:
 719              		.cfi_def_cfa_offset 8
 720              		.cfi_offset 7, -8
 721              		.cfi_offset 14, -4
 722 0002 84B0     		sub	sp, sp, #16
 723              	.LCFI31:
 724              		.cfi_def_cfa_offset 24
 725 0004 00AF     		add	r7, sp, #0
 726              	.LCFI32:
 727              		.cfi_def_cfa_register 7
 728 0006 F860     		str	r0, [r7, #12]
 729 0008 B960     		str	r1, [r7, #8]
 730 000a 7A60     		str	r2, [r7, #4]
 311:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_DMA_FREE(count * sizeof(dwc_otg_dev_dma_desc_t), desc_addr,
 731              		.loc 2 311 0
 732 000c 7B68     		ldr	r3, [r7, #4]
 733 000e 4FEAC303 		lsl	r3, r3, #3
 734 0012 4FF00000 		mov	r0, #0
 735 0016 1946     		mov	r1, r3
 736 0018 FA68     		ldr	r2, [r7, #12]
 737 001a BB68     		ldr	r3, [r7, #8]
 738 001c FFF7FEFF 		bl	__DWC_DMA_FREE
 312:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		     dma_desc_addr);
 313:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 739              		.loc 2 313 0
 740 0020 07F11007 		add	r7, r7, #16
 741 0024 BD46     		mov	sp, r7
 742 0026 80BD     		pop	{r7, pc}
 743              		.cfi_endproc
 744              	.LFE29:
 746              		.section	.text.dwc_otg_pcd_init_ep,"ax",%progbits
 747              		.align	2
 748              		.thumb
 749              		.thumb_func
 751              	dwc_otg_pcd_init_ep:
 752              	.LFB30:
 314:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 315:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #ifdef DWC_EN_ISOC
 316:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 317:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
 318:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * This function initializes a descriptor chain for Isochronous transfer
 319:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  *
 320:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * @param core_if Programming view of DWC_otg controller.
 321:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * @param dwc_ep The EP to start the transfer on.
 322:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  *
 323:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
 324:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** void dwc_otg_iso_ep_start_ddma_transfer(dwc_otg_core_if_t * core_if,
 325:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					dwc_ep_t * dwc_ep)
 326:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 327:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 328:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dsts_data_t dsts = {.d32 = 0 };
 329:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	depctl_data_t depctl = {.d32 = 0 };
 330:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	volatile uint32_t *addr;
 331:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	int i, j;
 332:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	uint32_t len;
 333:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 334:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (dwc_ep->is_in)
 335:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwc_ep->desc_cnt = dwc_ep->buf_proc_intrvl / dwc_ep->bInterval;
 336:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	else
 337:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwc_ep->desc_cnt =
 338:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    dwc_ep->buf_proc_intrvl * dwc_ep->pkt_per_frm /
 339:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    dwc_ep->bInterval;
 340:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 341:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/** Allocate descriptors for double buffering */
 342:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_ep->iso_desc_addr =
 343:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	    dwc_otg_ep_alloc_desc_chain(&dwc_ep->iso_dma_desc_addr,
 344:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					dwc_ep->desc_cnt * 2);
 345:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (dwc_ep->desc_addr) {
 346:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_WARN("%s, can't allocate DMA descriptor chain\n", __func__);
 347:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		return;
 348:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
 349:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 350:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dsts.d32 = DWC_READ_REG32(&core_if->dev_if->dev_global_regs->dsts);
 351:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 352:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/** ISO OUT EP */
 353:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (dwc_ep->is_in == 0) {
 354:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dev_dma_desc_sts_t sts = {.d32 = 0 };
 355:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwc_otg_dev_dma_desc_t *dma_desc = dwc_ep->iso_desc_addr;
 356:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dma_addr_t dma_ad;
 357:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		uint32_t data_per_desc;
 358:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwc_otg_dev_out_ep_regs_t *out_regs =
 359:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    core_if->dev_if->out_ep_regs[dwc_ep->num];
 360:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		int offset;
 361:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 362:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		addr = &core_if->dev_if->out_ep_regs[dwc_ep->num]->doepctl;
 363:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dma_ad = (dma_addr_t) DWC_READ_REG32(&(out_regs->doepdma));
 364:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 365:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		/** Buffer 0 descriptors setup */
 366:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dma_ad = dwc_ep->dma_addr0;
 367:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 368:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		sts.b_iso_out.bs = BS_HOST_READY;
 369:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		sts.b_iso_out.rxsts = 0;
 370:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		sts.b_iso_out.l = 0;
 371:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		sts.b_iso_out.sp = 0;
 372:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		sts.b_iso_out.ioc = 0;
 373:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		sts.b_iso_out.pid = 0;
 374:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		sts.b_iso_out.framenum = 0;
 375:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 376:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		offset = 0;
 377:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		for (i = 0; i < dwc_ep->desc_cnt - dwc_ep->pkt_per_frm;
 378:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		     i += dwc_ep->pkt_per_frm) {
 379:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 380:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			for (j = 0; j < dwc_ep->pkt_per_frm; ++j) {
 381:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				uint32_t len = (j + 1) * dwc_ep->maxpacket;
 382:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				if (len > dwc_ep->data_per_frame)
 383:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					data_per_desc =
 384:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					    dwc_ep->data_per_frame -
 385:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					    j * dwc_ep->maxpacket;
 386:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				else
 387:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					data_per_desc = dwc_ep->maxpacket;
 388:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				len = data_per_desc % 4;
 389:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				if (len)
 390:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					data_per_desc += 4 - len;
 391:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 392:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				sts.b_iso_out.rxbytes = data_per_desc;
 393:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dma_desc->buf = dma_ad;
 394:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dma_desc->status.d32 = sts.d32;
 395:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 396:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				offset += data_per_desc;
 397:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dma_desc++;
 398:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dma_ad += data_per_desc;
 399:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			}
 400:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
 401:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 402:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		for (j = 0; j < dwc_ep->pkt_per_frm - 1; ++j) {
 403:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			uint32_t len = (j + 1) * dwc_ep->maxpacket;
 404:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			if (len > dwc_ep->data_per_frame)
 405:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				data_per_desc =
 406:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				    dwc_ep->data_per_frame -
 407:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				    j * dwc_ep->maxpacket;
 408:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			else
 409:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				data_per_desc = dwc_ep->maxpacket;
 410:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			len = data_per_desc % 4;
 411:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			if (len)
 412:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				data_per_desc += 4 - len;
 413:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			sts.b_iso_out.rxbytes = data_per_desc;
 414:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dma_desc->buf = dma_ad;
 415:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dma_desc->status.d32 = sts.d32;
 416:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 417:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			offset += data_per_desc;
 418:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dma_desc++;
 419:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dma_ad += data_per_desc;
 420:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
 421:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 422:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		sts.b_iso_out.ioc = 1;
 423:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		len = (j + 1) * dwc_ep->maxpacket;
 424:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (len > dwc_ep->data_per_frame)
 425:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			data_per_desc =
 426:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			    dwc_ep->data_per_frame - j * dwc_ep->maxpacket;
 427:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		else
 428:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			data_per_desc = dwc_ep->maxpacket;
 429:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		len = data_per_desc % 4;
 430:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (len)
 431:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			data_per_desc += 4 - len;
 432:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		sts.b_iso_out.rxbytes = data_per_desc;
 433:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 434:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dma_desc->buf = dma_ad;
 435:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dma_desc->status.d32 = sts.d32;
 436:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dma_desc++;
 437:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 438:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		/** Buffer 1 descriptors setup */
 439:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		sts.b_iso_out.ioc = 0;
 440:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dma_ad = dwc_ep->dma_addr1;
 441:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 442:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		offset = 0;
 443:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		for (i = 0; i < dwc_ep->desc_cnt - dwc_ep->pkt_per_frm;
 444:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		     i += dwc_ep->pkt_per_frm) {
 445:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			for (j = 0; j < dwc_ep->pkt_per_frm; ++j) {
 446:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				uint32_t len = (j + 1) * dwc_ep->maxpacket;
 447:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				if (len > dwc_ep->data_per_frame)
 448:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					data_per_desc =
 449:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					    dwc_ep->data_per_frame -
 450:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					    j * dwc_ep->maxpacket;
 451:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				else
 452:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					data_per_desc = dwc_ep->maxpacket;
 453:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				len = data_per_desc % 4;
 454:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				if (len)
 455:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					data_per_desc += 4 - len;
 456:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 457:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				data_per_desc =
 458:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				    sts.b_iso_out.rxbytes = data_per_desc;
 459:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dma_desc->buf = dma_ad;
 460:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dma_desc->status.d32 = sts.d32;
 461:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 462:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				offset += data_per_desc;
 463:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dma_desc++;
 464:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dma_ad += data_per_desc;
 465:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			}
 466:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
 467:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		for (j = 0; j < dwc_ep->pkt_per_frm - 1; ++j) {
 468:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			data_per_desc =
 469:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			    ((j + 1) * dwc_ep->maxpacket >
 470:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			     dwc_ep->data_per_frame) ? dwc_ep->data_per_frame -
 471:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			    j * dwc_ep->maxpacket : dwc_ep->maxpacket;
 472:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			data_per_desc +=
 473:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			    (data_per_desc % 4) ? (4 - data_per_desc % 4) : 0;
 474:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			sts.b_iso_out.rxbytes = data_per_desc;
 475:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dma_desc->buf = dma_ad;
 476:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dma_desc->status.d32 = sts.d32;
 477:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 478:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			offset += data_per_desc;
 479:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dma_desc++;
 480:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dma_ad += data_per_desc;
 481:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
 482:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 483:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		sts.b_iso_out.ioc = 1;
 484:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		sts.b_iso_out.l = 1;
 485:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		data_per_desc =
 486:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    ((j + 1) * dwc_ep->maxpacket >
 487:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		     dwc_ep->data_per_frame) ? dwc_ep->data_per_frame -
 488:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    j * dwc_ep->maxpacket : dwc_ep->maxpacket;
 489:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		data_per_desc +=
 490:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    (data_per_desc % 4) ? (4 - data_per_desc % 4) : 0;
 491:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		sts.b_iso_out.rxbytes = data_per_desc;
 492:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 493:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dma_desc->buf = dma_ad;
 494:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dma_desc->status.d32 = sts.d32;
 495:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 496:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwc_ep->next_frame = 0;
 497:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 498:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		/** Write dma_ad into DOEPDMA register */
 499:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_WRITE_REG32(&(out_regs->doepdma),
 500:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				(uint32_t) dwc_ep->iso_dma_desc_addr);
 501:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 502:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
 503:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/** ISO IN EP */
 504:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	else {
 505:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dev_dma_desc_sts_t sts = {.d32 = 0 };
 506:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwc_otg_dev_dma_desc_t *dma_desc = dwc_ep->iso_desc_addr;
 507:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dma_addr_t dma_ad;
 508:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwc_otg_dev_in_ep_regs_t *in_regs =
 509:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    core_if->dev_if->in_ep_regs[dwc_ep->num];
 510:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		unsigned int frmnumber;
 511:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		fifosize_data_t txfifosize, rxfifosize;
 512:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 513:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		txfifosize.d32 =
 514:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    DWC_READ_REG32(&core_if->dev_if->
 515:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				   in_ep_regs[dwc_ep->num]->dtxfsts);
 516:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		rxfifosize.d32 =
 517:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    DWC_READ_REG32(&core_if->core_global_regs->grxfsiz);
 518:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 519:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		addr = &core_if->dev_if->in_ep_regs[dwc_ep->num]->diepctl;
 520:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 521:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dma_ad = dwc_ep->dma_addr0;
 522:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 523:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dsts.d32 =
 524:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    DWC_READ_REG32(&core_if->dev_if->dev_global_regs->dsts);
 525:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 526:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		sts.b_iso_in.bs = BS_HOST_READY;
 527:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		sts.b_iso_in.txsts = 0;
 528:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		sts.b_iso_in.sp =
 529:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    (dwc_ep->data_per_frame % dwc_ep->maxpacket) ? 1 : 0;
 530:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		sts.b_iso_in.ioc = 0;
 531:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		sts.b_iso_in.pid = dwc_ep->pkt_per_frm;
 532:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 533:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		frmnumber = dwc_ep->next_frame;
 534:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 535:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		sts.b_iso_in.framenum = frmnumber;
 536:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		sts.b_iso_in.txbytes = dwc_ep->data_per_frame;
 537:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		sts.b_iso_in.l = 0;
 538:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 539:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		/** Buffer 0 descriptors setup */
 540:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		for (i = 0; i < dwc_ep->desc_cnt - 1; i++) {
 541:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dma_desc->buf = dma_ad;
 542:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dma_desc->status.d32 = sts.d32;
 543:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dma_desc++;
 544:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 545:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dma_ad += dwc_ep->data_per_frame;
 546:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			sts.b_iso_in.framenum += dwc_ep->bInterval;
 547:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
 548:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 549:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		sts.b_iso_in.ioc = 1;
 550:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dma_desc->buf = dma_ad;
 551:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dma_desc->status.d32 = sts.d32;
 552:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		++dma_desc;
 553:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 554:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		/** Buffer 1 descriptors setup */
 555:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		sts.b_iso_in.ioc = 0;
 556:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dma_ad = dwc_ep->dma_addr1;
 557:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 558:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		for (i = 0; i < dwc_ep->desc_cnt - dwc_ep->pkt_per_frm;
 559:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		     i += dwc_ep->pkt_per_frm) {
 560:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dma_desc->buf = dma_ad;
 561:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dma_desc->status.d32 = sts.d32;
 562:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dma_desc++;
 563:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 564:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dma_ad += dwc_ep->data_per_frame;
 565:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			sts.b_iso_in.framenum += dwc_ep->bInterval;
 566:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 567:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			sts.b_iso_in.ioc = 0;
 568:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
 569:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		sts.b_iso_in.ioc = 1;
 570:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		sts.b_iso_in.l = 1;
 571:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 572:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dma_desc->buf = dma_ad;
 573:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dma_desc->status.d32 = sts.d32;
 574:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 575:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwc_ep->next_frame = sts.b_iso_in.framenum + dwc_ep->bInterval;
 576:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 577:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		/** Write dma_ad into diepdma register */
 578:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_WRITE_REG32(&(in_regs->diepdma),
 579:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				(uint32_t) dwc_ep->iso_dma_desc_addr);
 580:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
 581:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/** Enable endpoint, clear nak  */
 582:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	depctl.d32 = 0;
 583:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	depctl.b.epena = 1;
 584:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	depctl.b.usbactep = 1;
 585:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	depctl.b.cnak = 1;
 586:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 587:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_MODIFY_REG32(addr, depctl.d32, depctl.d32);
 588:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	depctl.d32 = DWC_READ_REG32(addr);
 589:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 590:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 591:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
 592:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * This function initializes a descriptor chain for Isochronous transfer
 593:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  *
 594:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * @param core_if Programming view of DWC_otg controller.
 595:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * @param ep The EP to start the transfer on.
 596:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  *
 597:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
 598:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** void dwc_otg_iso_ep_start_buf_transfer(dwc_otg_core_if_t * core_if,
 599:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				       dwc_ep_t * ep)
 600:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 601:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	depctl_data_t depctl = {.d32 = 0 };
 602:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	volatile uint32_t *addr;
 603:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 604:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (ep->is_in) {
 605:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		addr = &core_if->dev_if->in_ep_regs[ep->num]->diepctl;
 606:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	} else {
 607:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		addr = &core_if->dev_if->out_ep_regs[ep->num]->doepctl;
 608:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
 609:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 610:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (core_if->dma_enable == 0 || core_if->dma_desc_enable != 0) {
 611:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		return;
 612:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	} else {
 613:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		deptsiz_data_t deptsiz = {.d32 = 0 };
 614:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 615:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		ep->xfer_len =
 616:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    ep->data_per_frame * ep->buf_proc_intrvl / ep->bInterval;
 617:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		ep->pkt_cnt =
 618:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    (ep->xfer_len - 1 + ep->maxpacket) / ep->maxpacket;
 619:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		ep->xfer_count = 0;
 620:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		ep->xfer_buff =
 621:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    (ep->proc_buf_num) ? ep->xfer_buff1 : ep->xfer_buff0;
 622:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		ep->dma_addr =
 623:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    (ep->proc_buf_num) ? ep->dma_addr1 : ep->dma_addr0;
 624:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 625:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (ep->is_in) {
 626:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			/* Program the transfer size and packet count
 627:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			 *      as follows: xfersize = N * maxpacket +
 628:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			 *      short_packet pktcnt = N + (short_packet
 629:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			 *      exist ? 1 : 0) 
 630:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			 */
 631:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			deptsiz.b.mc = ep->pkt_per_frm;
 632:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			deptsiz.b.xfersize = ep->xfer_len;
 633:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			deptsiz.b.pktcnt =
 634:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			    (ep->xfer_len - 1 + ep->maxpacket) / ep->maxpacket;
 635:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_WRITE_REG32(&core_if->dev_if->
 636:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					in_ep_regs[ep->num]->dieptsiz,
 637:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					deptsiz.d32);
 638:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 639:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			/* Write the DMA register */
 640:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_WRITE_REG32(&
 641:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					(core_if->dev_if->
 642:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					 in_ep_regs[ep->num]->diepdma),
 643:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					(uint32_t) ep->dma_addr);
 644:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 645:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		} else {
 646:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			deptsiz.b.pktcnt =
 647:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			    (ep->xfer_len + (ep->maxpacket - 1)) /
 648:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			    ep->maxpacket;
 649:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			deptsiz.b.xfersize = deptsiz.b.pktcnt * ep->maxpacket;
 650:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 651:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_WRITE_REG32(&core_if->dev_if->
 652:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					out_ep_regs[ep->num]->doeptsiz,
 653:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					deptsiz.d32);
 654:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 655:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			/* Write the DMA register */
 656:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_WRITE_REG32(&
 657:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					(core_if->dev_if->
 658:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					 out_ep_regs[ep->num]->doepdma),
 659:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					(uint32_t) ep->dma_addr);
 660:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 661:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
 662:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		/** Enable endpoint, clear nak  */
 663:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		depctl.d32 = 0;
 664:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		depctl.b.epena = 1;
 665:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		depctl.b.cnak = 1;
 666:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 667:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_MODIFY_REG32(addr, depctl.d32, depctl.d32);
 668:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
 669:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 670:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 671:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
 672:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * This function does the setup for a data transfer for an EP and
 673:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * starts the transfer. For an IN transfer, the packets will be
 674:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * loaded into the appropriate Tx FIFO in the ISR. For OUT transfers,
 675:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * the packets are unloaded from the Rx FIFO in the ISR.
 676:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  *
 677:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * @param core_if Programming view of DWC_otg controller.
 678:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * @param ep The EP to start the transfer on.
 679:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
 680:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 681:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** static void dwc_otg_iso_ep_start_transfer(dwc_otg_core_if_t * core_if,
 682:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					  dwc_ep_t * ep)
 683:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 684:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (core_if->dma_enable) {
 685:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (core_if->dma_desc_enable) {
 686:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			if (ep->is_in) {
 687:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				ep->desc_cnt = ep->pkt_cnt / ep->pkt_per_frm;
 688:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			} else {
 689:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				ep->desc_cnt = ep->pkt_cnt;
 690:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			}
 691:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dwc_otg_iso_ep_start_ddma_transfer(core_if, ep);
 692:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		} else {
 693:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			if (core_if->pti_enh_enable) {
 694:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dwc_otg_iso_ep_start_buf_transfer(core_if, ep);
 695:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			} else {
 696:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				ep->cur_pkt_addr =
 697:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				    (ep->proc_buf_num) ? ep->
 698:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				    xfer_buff1 : ep->xfer_buff0;
 699:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				ep->cur_pkt_dma_addr =
 700:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				    (ep->proc_buf_num) ? ep->
 701:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				    dma_addr1 : ep->dma_addr0;
 702:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dwc_otg_iso_ep_start_frm_transfer(core_if, ep);
 703:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			}
 704:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
 705:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	} else {
 706:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		ep->cur_pkt_addr =
 707:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    (ep->proc_buf_num) ? ep->xfer_buff1 : ep->xfer_buff0;
 708:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		ep->cur_pkt_dma_addr =
 709:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    (ep->proc_buf_num) ? ep->dma_addr1 : ep->dma_addr0;
 710:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwc_otg_iso_ep_start_frm_transfer(core_if, ep);
 711:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
 712:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 713:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 714:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
 715:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * This function stops transfer for an EP and
 716:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * resets the ep's variables. 
 717:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  *
 718:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * @param core_if Programming view of DWC_otg controller.
 719:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * @param ep The EP to start the transfer on.
 720:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
 721:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 722:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** void dwc_otg_iso_ep_stop_transfer(dwc_otg_core_if_t * core_if, dwc_ep_t * ep)
 723:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 724:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	depctl_data_t depctl = {.d32 = 0 };
 725:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	volatile uint32_t *addr;
 726:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 727:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (ep->is_in == 1) {
 728:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		addr = &core_if->dev_if->in_ep_regs[ep->num]->diepctl;
 729:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	} else {
 730:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		addr = &core_if->dev_if->out_ep_regs[ep->num]->doepctl;
 731:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
 732:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 733:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* disable the ep */
 734:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	depctl.d32 = DWC_READ_REG32(addr);
 735:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 736:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	depctl.b.epdis = 1;
 737:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	depctl.b.snak = 1;
 738:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 739:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_WRITE_REG32(addr, depctl.d32);
 740:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 741:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (core_if->dma_desc_enable &&
 742:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	    ep->iso_desc_addr && ep->iso_dma_desc_addr) {
 743:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwc_otg_ep_free_desc_chain(ep->iso_desc_addr,
 744:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					   ep->iso_dma_desc_addr,
 745:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					   ep->desc_cnt * 2);
 746:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
 747:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 748:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* reset varibales */
 749:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->dma_addr0 = 0;
 750:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->dma_addr1 = 0;
 751:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->xfer_buff0 = 0;
 752:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->xfer_buff1 = 0;
 753:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->data_per_frame = 0;
 754:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->data_pattern_frame = 0;
 755:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->sync_frame = 0;
 756:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->buf_proc_intrvl = 0;
 757:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->bInterval = 0;
 758:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->proc_buf_num = 0;
 759:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->pkt_per_frm = 0;
 760:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->pkt_per_frm = 0;
 761:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->desc_cnt = 0;
 762:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->iso_desc_addr = 0;
 763:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->iso_dma_desc_addr = 0;
 764:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 765:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 766:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** int dwc_otg_pcd_iso_ep_start(dwc_otg_pcd_t * pcd, void *ep_handle,
 767:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			     uint8_t * buf0, uint8_t * buf1, dwc_dma_t dma0,
 768:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			     dwc_dma_t dma1, int sync_frame, int dp_frame,
 769:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			     int data_per_frame, int start_frame,
 770:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			     int buf_proc_intrvl, void *req_handle,
 771:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			     int atomic_alloc)
 772:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 773:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_pcd_ep_t *ep;
 774:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_irqflags_t flags = 0;
 775:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_ep_t *dwc_ep;
 776:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	int32_t frm_data;
 777:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dsts_data_t dsts;
 778:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_core_if_t *core_if;
 779:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 780:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep = get_ep_from_handle(pcd, ep_handle);
 781:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 782:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (!ep || !ep->desc || ep->dwc_ep.num == 0) {
 783:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_WARN("bad ep\n");
 784:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		return -DWC_E_INVALID;
 785:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
 786:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 787:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_SPINLOCK_IRQSAVE(pcd->lock, &flags);
 788:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	core_if = GET_CORE_IF(pcd);
 789:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_ep = &ep->dwc_ep;
 790:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 791:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (ep->iso_req_handle) {
 792:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_WARN("ISO request in progress\n");
 793:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
 794:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 795:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_ep->dma_addr0 = dma0;
 796:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_ep->dma_addr1 = dma1;
 797:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 798:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_ep->xfer_buff0 = buf0;
 799:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_ep->xfer_buff1 = buf1;
 800:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 801:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_ep->data_per_frame = data_per_frame;
 802:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 803:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/** @todo - pattern data support is to be implemented in the future */
 804:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_ep->data_pattern_frame = dp_frame;
 805:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_ep->sync_frame = sync_frame;
 806:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 807:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_ep->buf_proc_intrvl = buf_proc_intrvl;
 808:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 809:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_ep->bInterval = 1 << (ep->desc->bInterval - 1);
 810:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 811:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_ep->proc_buf_num = 0;
 812:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 813:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_ep->pkt_per_frm = 0;
 814:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	frm_data = ep->dwc_ep.data_per_frame;
 815:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	while (frm_data > 0) {
 816:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwc_ep->pkt_per_frm++;
 817:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		frm_data -= ep->dwc_ep.maxpacket;
 818:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
 819:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 820:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dsts.d32 = DWC_READ_REG32(&core_if->dev_if->dev_global_regs->dsts);
 821:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 822:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (start_frame == -1) {
 823:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwc_ep->next_frame = dsts.b.soffn + 1;
 824:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (dwc_ep->bInterval != 1) {
 825:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dwc_ep->next_frame =
 826:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			    dwc_ep->next_frame + (dwc_ep->bInterval - 1 -
 827:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						  dwc_ep->next_frame %
 828:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						  dwc_ep->bInterval);
 829:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
 830:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	} else {
 831:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwc_ep->next_frame = start_frame;
 832:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
 833:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 834:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (!core_if->pti_enh_enable) {
 835:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwc_ep->pkt_cnt =
 836:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    dwc_ep->buf_proc_intrvl * dwc_ep->pkt_per_frm /
 837:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    dwc_ep->bInterval;
 838:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	} else {
 839:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwc_ep->pkt_cnt =
 840:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    (dwc_ep->data_per_frame *
 841:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		     (dwc_ep->buf_proc_intrvl / dwc_ep->bInterval)
 842:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		     - 1 + dwc_ep->maxpacket) / dwc_ep->maxpacket;
 843:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
 844:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 845:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (core_if->dma_desc_enable) {
 846:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwc_ep->desc_cnt =
 847:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    dwc_ep->buf_proc_intrvl * dwc_ep->pkt_per_frm /
 848:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    dwc_ep->bInterval;
 849:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
 850:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 851:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (atomic_alloc) {
 852:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwc_ep->pkt_info =
 853:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    DWC_ALLOC_ATOMIC(sizeof(iso_pkt_info_t) * dwc_ep->pkt_cnt);
 854:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	} else {
 855:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwc_ep->pkt_info =
 856:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    DWC_ALLOC(sizeof(iso_pkt_info_t) * dwc_ep->pkt_cnt);
 857:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
 858:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (!dwc_ep->pkt_info) {
 859:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_SPINUNLOCK_IRQRESTORE(pcd->lock, flags);
 860:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		return -DWC_E_NO_MEMORY;
 861:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
 862:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (core_if->pti_enh_enable) {
 863:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwc_memset(dwc_ep->pkt_info, 0,
 864:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			   sizeof(iso_pkt_info_t) * dwc_ep->pkt_cnt);
 865:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
 866:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 867:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_ep->cur_pkt = 0;
 868:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->iso_req_handle = req_handle;
 869:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 870:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_SPINUNLOCK_IRQRESTORE(pcd->lock, flags);
 871:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_iso_ep_start_transfer(core_if, dwc_ep);
 872:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return 0;
 873:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 874:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 875:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** int dwc_otg_pcd_iso_ep_stop(dwc_otg_pcd_t * pcd, void *ep_handle,
 876:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			    void *req_handle)
 877:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 878:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_irqflags_t flags = 0;
 879:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_pcd_ep_t *ep;
 880:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_ep_t *dwc_ep;
 881:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 882:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep = get_ep_from_handle(pcd, ep_handle);
 883:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (!ep || !ep->desc || ep->dwc_ep.num == 0) {
 884:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_WARN("bad ep\n");
 885:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		return -DWC_E_INVALID;
 886:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
 887:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_ep = &ep->dwc_ep;
 888:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 889:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_iso_ep_stop_transfer(GET_CORE_IF(pcd), dwc_ep);
 890:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 891:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_FREE(dwc_ep->pkt_info);
 892:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_SPINLOCK_IRQSAVE(pcd->lock, &flags);
 893:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (ep->iso_req_handle != req_handle) {
 894:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_SPINUNLOCK_IRQRESTORE(pcd->lock, flags);
 895:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		return -DWC_E_INVALID;
 896:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
 897:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 898:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_SPINUNLOCK_IRQRESTORE(pcd->lock, flags);
 899:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 900:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->iso_req_handle = 0;
 901:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return 0;
 902:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 903:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 904:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
 905:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * This function is used for perodical data exchnage between PCD and gadget drivers.
 906:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * for Isochronous EPs
 907:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  *
 908:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  *	- Every time a sync period completes this function is called to
 909:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  *	  perform data exchange between PCD and gadget
 910:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
 911:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** void dwc_otg_iso_buffer_done(dwc_otg_pcd_t * pcd, dwc_otg_pcd_ep_t * ep,
 912:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			     void *req_handle)
 913:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 914:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	int i;
 915:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_ep_t *dwc_ep;
 916:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 917:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_ep = &ep->dwc_ep;
 918:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 919:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_SPINUNLOCK(ep->pcd->lock);
 920:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pcd->fops->isoc_complete(pcd, ep->priv, ep->iso_req_handle,
 921:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				 dwc_ep->proc_buf_num ^ 0x1);
 922:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_SPINLOCK(ep->pcd->lock);
 923:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 924:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	for (i = 0; i < dwc_ep->pkt_cnt; ++i) {
 925:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwc_ep->pkt_info[i].status = 0;
 926:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwc_ep->pkt_info[i].offset = 0;
 927:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwc_ep->pkt_info[i].length = 0;
 928:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
 929:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 930:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 931:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** int dwc_otg_pcd_get_iso_packet_count(dwc_otg_pcd_t * pcd, void *ep_handle,
 932:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				     void *iso_req_handle)
 933:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 934:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_pcd_ep_t *ep;
 935:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_ep_t *dwc_ep;
 936:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 937:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep = get_ep_from_handle(pcd, ep_handle);
 938:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (!ep->desc || ep->dwc_ep.num == 0) {
 939:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_WARN("bad ep\n");
 940:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		return -DWC_E_INVALID;
 941:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
 942:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_ep = &ep->dwc_ep;
 943:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 944:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return dwc_ep->pkt_cnt;
 945:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 946:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 947:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** void dwc_otg_pcd_get_iso_packet_params(dwc_otg_pcd_t * pcd, void *ep_handle,
 948:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				       void *iso_req_handle, int packet,
 949:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				       int *status, int *actual, int *offset)
 950:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 951:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_pcd_ep_t *ep;
 952:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_ep_t *dwc_ep;
 953:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 954:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep = get_ep_from_handle(pcd, ep_handle);
 955:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (!ep)
 956:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_WARN("bad ep\n");
 957:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 958:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_ep = &ep->dwc_ep;
 959:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 960:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	*status = dwc_ep->pkt_info[packet].status;
 961:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	*actual = dwc_ep->pkt_info[packet].length;
 962:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	*offset = dwc_ep->pkt_info[packet].offset;
 963:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 964:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 965:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #endif /* DWC_EN_ISOC */
 966:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 967:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** static void dwc_otg_pcd_init_ep(dwc_otg_pcd_t * pcd, dwc_otg_pcd_ep_t * pcd_ep,
 968:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				uint32_t is_in, uint32_t ep_num)
 969:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 753              		.loc 2 969 0
 754              		.cfi_startproc
 755              		@ args = 0, pretend = 0, frame = 16
 756              		@ frame_needed = 1, uses_anonymous_args = 0
 757              		@ link register save eliminated.
 758 0000 80B4     		push	{r7}
 759              	.LCFI33:
 760              		.cfi_def_cfa_offset 4
 761              		.cfi_offset 7, -4
 762 0002 85B0     		sub	sp, sp, #20
 763              	.LCFI34:
 764              		.cfi_def_cfa_offset 24
 765 0004 00AF     		add	r7, sp, #0
 766              	.LCFI35:
 767              		.cfi_def_cfa_register 7
 768 0006 F860     		str	r0, [r7, #12]
 769 0008 B960     		str	r1, [r7, #8]
 770 000a 7A60     		str	r2, [r7, #4]
 771 000c 3B60     		str	r3, [r7, #0]
 970:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* Init EP structure */
 971:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pcd_ep->desc = 0;
 772              		.loc 2 971 0
 773 000e BB68     		ldr	r3, [r7, #8]
 774 0010 4FF00002 		mov	r2, #0
 775 0014 1A60     		str	r2, [r3, #0]
 972:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pcd_ep->pcd = pcd;
 776              		.loc 2 972 0
 777 0016 BB68     		ldr	r3, [r7, #8]
 778 0018 FA68     		ldr	r2, [r7, #12]
 779 001a DA63     		str	r2, [r3, #60]
 973:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pcd_ep->stopped = 1;
 780              		.loc 2 973 0
 781 001c BA68     		ldr	r2, [r7, #8]
 782 001e 137B     		ldrb	r3, [r2, #12]
 783 0020 43F00103 		orr	r3, r3, #1
 784 0024 1373     		strb	r3, [r2, #12]
 974:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pcd_ep->queue_sof = 0;
 785              		.loc 2 974 0
 786 0026 BA68     		ldr	r2, [r7, #8]
 787 0028 137B     		ldrb	r3, [r2, #12]
 788 002a 6FF3C303 		bfc	r3, #3, #1
 789 002e 1373     		strb	r3, [r2, #12]
 975:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 976:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* Init DWC ep structure */
 977:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pcd_ep->dwc_ep.is_in = is_in;
 790              		.loc 2 977 0
 791 0030 7B68     		ldr	r3, [r7, #4]
 792 0032 DBB2     		uxtb	r3, r3
 793 0034 03F00103 		and	r3, r3, #1
 794 0038 D9B2     		uxtb	r1, r3
 795 003a BA68     		ldr	r2, [r7, #8]
 796 003c 537C     		ldrb	r3, [r2, #17]
 797 003e 61F30003 		bfi	r3, r1, #0, #1
 798 0042 5374     		strb	r3, [r2, #17]
 978:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pcd_ep->dwc_ep.num = ep_num;
 799              		.loc 2 978 0
 800 0044 3B68     		ldr	r3, [r7, #0]
 801 0046 DAB2     		uxtb	r2, r3
 802 0048 BB68     		ldr	r3, [r7, #8]
 803 004a 1A74     		strb	r2, [r3, #16]
 979:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pcd_ep->dwc_ep.active = 0;
 804              		.loc 2 979 0
 805 004c BA68     		ldr	r2, [r7, #8]
 806 004e 537C     		ldrb	r3, [r2, #17]
 807 0050 6FF34103 		bfc	r3, #1, #1
 808 0054 5374     		strb	r3, [r2, #17]
 980:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pcd_ep->dwc_ep.tx_fifo_num = 0;
 809              		.loc 2 980 0
 810 0056 BA68     		ldr	r2, [r7, #8]
 811 0058 537C     		ldrb	r3, [r2, #17]
 812 005a 6FF38503 		bfc	r3, #2, #4
 813 005e 5374     		strb	r3, [r2, #17]
 981:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* Control until ep is actvated */
 982:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pcd_ep->dwc_ep.type = DWC_OTG_EP_TYPE_CONTROL;
 814              		.loc 2 982 0
 815 0060 BA68     		ldr	r2, [r7, #8]
 816 0062 537C     		ldrb	r3, [r2, #17]
 817 0064 6FF38713 		bfc	r3, #6, #2
 818 0068 5374     		strb	r3, [r2, #17]
 983:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pcd_ep->dwc_ep.maxpacket = MAX_PACKET_SIZE;
 819              		.loc 2 983 0
 820 006a BB68     		ldr	r3, [r7, #8]
 821 006c 9A7C     		ldrb	r2, [r3, #18]
 822 006e 02F00302 		and	r2, r2, #3
 823 0072 9A74     		strb	r2, [r3, #18]
 824 0074 DA7C     		ldrb	r2, [r3, #19]
 825 0076 22F01F02 		bic	r2, r2, #31
 826 007a 42F01002 		orr	r2, r2, #16
 827 007e DA74     		strb	r2, [r3, #19]
 984:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pcd_ep->dwc_ep.dma_addr = 0;
 828              		.loc 2 984 0
 829 0080 BB68     		ldr	r3, [r7, #8]
 830 0082 4FF00002 		mov	r2, #0
 831 0086 9A61     		str	r2, [r3, #24]
 985:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pcd_ep->dwc_ep.start_xfer_buff = 0;
 832              		.loc 2 985 0
 833 0088 BB68     		ldr	r3, [r7, #8]
 834 008a 4FF00002 		mov	r2, #0
 835 008e 5A62     		str	r2, [r3, #36]
 986:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pcd_ep->dwc_ep.xfer_buff = 0;
 836              		.loc 2 986 0
 837 0090 BB68     		ldr	r3, [r7, #8]
 838 0092 4FF00002 		mov	r2, #0
 839 0096 9A62     		str	r2, [r3, #40]
 987:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pcd_ep->dwc_ep.xfer_len = 0;
 840              		.loc 2 987 0
 841 0098 BA68     		ldr	r2, [r7, #8]
 842 009a D36A     		ldr	r3, [r2, #44]
 843 009c 6FF31203 		bfc	r3, #0, #19
 844 00a0 D362     		str	r3, [r2, #44]
 988:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pcd_ep->dwc_ep.xfer_count = 0;
 845              		.loc 2 988 0
 846 00a2 BA68     		ldr	r2, [r7, #8]
 847 00a4 136B     		ldr	r3, [r2, #48]
 848 00a6 6FF31203 		bfc	r3, #0, #19
 849 00aa 1363     		str	r3, [r2, #48]
 989:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pcd_ep->dwc_ep.sent_zlp = 0;
 850              		.loc 2 989 0
 851 00ac BA68     		ldr	r2, [r7, #8]
 852 00ae 92F83230 		ldrb	r3, [r2, #50]
 853 00b2 6FF3C303 		bfc	r3, #3, #1
 854 00b6 82F83230 		strb	r3, [r2, #50]
 990:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pcd_ep->dwc_ep.total_len = 0;
 855              		.loc 2 990 0
 856 00ba BB68     		ldr	r3, [r7, #8]
 857 00bc 4FF00002 		mov	r2, #0
 858 00c0 9A86     		strh	r2, [r3, #52]	@ movhi
 859 00c2 93F83620 		ldrb	r2, [r3, #54]
 860 00c6 22F00702 		bic	r2, r2, #7
 861 00ca 83F83620 		strb	r2, [r3, #54]
 991:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pcd_ep->dwc_ep.desc_addr = 0;
 862              		.loc 2 991 0
 863 00ce BB68     		ldr	r3, [r7, #8]
 864 00d0 4FF00002 		mov	r2, #0
 865 00d4 1A62     		str	r2, [r3, #32]
 992:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pcd_ep->dwc_ep.dma_desc_addr = 0;
 866              		.loc 2 992 0
 867 00d6 BB68     		ldr	r3, [r7, #8]
 868 00d8 4FF00002 		mov	r2, #0
 869 00dc DA61     		str	r2, [r3, #28]
 993:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_CIRCLEQ_INIT(&pcd_ep->queue);
 870              		.loc 2 993 0
 871 00de BB68     		ldr	r3, [r7, #8]
 872 00e0 03F10402 		add	r2, r3, #4
 873 00e4 BB68     		ldr	r3, [r7, #8]
 874 00e6 5A60     		str	r2, [r3, #4]
 875 00e8 BB68     		ldr	r3, [r7, #8]
 876 00ea 03F10402 		add	r2, r3, #4
 877 00ee BB68     		ldr	r3, [r7, #8]
 878 00f0 9A60     		str	r2, [r3, #8]
 994:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 879              		.loc 2 994 0
 880 00f2 07F11407 		add	r7, r7, #20
 881 00f6 BD46     		mov	sp, r7
 882 00f8 80BC     		pop	{r7}
 883 00fa 7047     		bx	lr
 884              		.cfi_endproc
 885              	.LFE30:
 887              		.section	.text.dwc_otg_pcd_reinit,"ax",%progbits
 888              		.align	2
 889              		.thumb
 890              		.thumb_func
 892              	dwc_otg_pcd_reinit:
 893              	.LFB31:
 995:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
 996:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
 997:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * Initialize ep's
 998:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
 999:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** static void dwc_otg_pcd_reinit(dwc_otg_pcd_t * pcd)
1000:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 894              		.loc 2 1000 0
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 48
 897              		@ frame_needed = 1, uses_anonymous_args = 0
 898 0000 80B5     		push	{r7, lr}
 899              	.LCFI36:
 900              		.cfi_def_cfa_offset 8
 901              		.cfi_offset 7, -8
 902              		.cfi_offset 14, -4
 903 0002 8CB0     		sub	sp, sp, #48
 904              	.LCFI37:
 905              		.cfi_def_cfa_offset 56
 906 0004 00AF     		add	r7, sp, #0
 907              	.LCFI38:
 908              		.cfi_def_cfa_register 7
 909 0006 7860     		str	r0, [r7, #4]
1001:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	int i;
1002:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	uint32_t hwcfg1;
1003:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_pcd_ep_t *ep;
1004:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	int in_ep_cntr, out_ep_cntr;
1005:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	uint32_t num_in_eps = (GET_CORE_IF(pcd))->dev_if->num_in_eps;
 910              		.loc 2 1005 0
 911 0008 7B68     		ldr	r3, [r7, #4]
 912 000a 9B68     		ldr	r3, [r3, #8]
 913 000c 9B68     		ldr	r3, [r3, #8]
 914 000e 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 915 0012 FB61     		str	r3, [r7, #28]
1006:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	uint32_t num_out_eps = (GET_CORE_IF(pcd))->dev_if->num_out_eps;
 916              		.loc 2 1006 0
 917 0014 7B68     		ldr	r3, [r7, #4]
 918 0016 9B68     		ldr	r3, [r3, #8]
 919 0018 9B68     		ldr	r3, [r3, #8]
 920 001a 93F84630 		ldrb	r3, [r3, #70]	@ zero_extendqisi2
 921 001e BB61     		str	r3, [r7, #24]
1007:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1008:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/**
1009:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	 * Initialize the EP0 structure.
1010:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	 */
1011:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep = &pcd->ep0;
 922              		.loc 2 1011 0
 923 0020 7B68     		ldr	r3, [r7, #4]
 924 0022 03F12403 		add	r3, r3, #36
 925 0026 7B61     		str	r3, [r7, #20]
1012:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_pcd_init_ep(pcd, ep, 0, 0);
 926              		.loc 2 1012 0
 927 0028 7868     		ldr	r0, [r7, #4]
 928 002a 7969     		ldr	r1, [r7, #20]
 929 002c 4FF00002 		mov	r2, #0
 930 0030 4FF00003 		mov	r3, #0
 931 0034 FFF7FEFF 		bl	dwc_otg_pcd_init_ep
1013:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1014:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	in_ep_cntr = 0;
 932              		.loc 2 1014 0
 933 0038 4FF00003 		mov	r3, #0
 934 003c 7B62     		str	r3, [r7, #36]
1015:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	hwcfg1 = (GET_CORE_IF(pcd))->hwcfg1.d32 >> 3;
 935              		.loc 2 1015 0
 936 003e 7B68     		ldr	r3, [r7, #4]
 937 0040 9B68     		ldr	r3, [r3, #8]
 938 0042 DB6C     		ldr	r3, [r3, #76]
 939 0044 4FEAD303 		lsr	r3, r3, #3
 940 0048 BB62     		str	r3, [r7, #40]
1016:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	for (i = 1; in_ep_cntr < num_in_eps; i++) {
 941              		.loc 2 1016 0
 942 004a 4FF00103 		mov	r3, #1
 943 004e FB62     		str	r3, [r7, #44]
 944 0050 2DE0     		b	.L38
 945              	.L40:
1017:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if ((hwcfg1 & 0x1) == 0) {
 946              		.loc 2 1017 0
 947 0052 BB6A     		ldr	r3, [r7, #40]
 948 0054 03F00103 		and	r3, r3, #1
 949 0058 002B     		cmp	r3, #0
 950 005a 20D1     		bne	.L39
 951              	.LBB2:
1018:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dwc_otg_pcd_ep_t *ep = &pcd->in_ep[in_ep_cntr];
 952              		.loc 2 1018 0
 953 005c 7A6A     		ldr	r2, [r7, #36]
 954 005e 1346     		mov	r3, r2
 955 0060 4FEA0313 		lsl	r3, r3, #4
 956 0064 9B18     		adds	r3, r3, r2
 957 0066 4FEA8303 		lsl	r3, r3, #2
 958 006a 03F16803 		add	r3, r3, #104
 959 006e 7A68     		ldr	r2, [r7, #4]
 960 0070 D318     		adds	r3, r2, r3
 961 0072 3B61     		str	r3, [r7, #16]
1019:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			in_ep_cntr++;
 962              		.loc 2 1019 0
 963 0074 7B6A     		ldr	r3, [r7, #36]
 964 0076 03F10103 		add	r3, r3, #1
 965 007a 7B62     		str	r3, [r7, #36]
1020:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			/**
1021:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			 * @todo NGS: Add direction to EP, based on contents
1022:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			 * of HWCFG1.  Need a copy of HWCFG1 in pcd structure?
1023:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			 * sprintf(";r
1024:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			 */
1025:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dwc_otg_pcd_init_ep(pcd, ep, 1 /* IN */ , i);
 966              		.loc 2 1025 0
 967 007c FB6A     		ldr	r3, [r7, #44]
 968 007e 7868     		ldr	r0, [r7, #4]
 969 0080 3969     		ldr	r1, [r7, #16]
 970 0082 4FF00102 		mov	r2, #1
 971 0086 FFF7FEFF 		bl	dwc_otg_pcd_init_ep
1026:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1027:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_CIRCLEQ_INIT(&ep->queue);
 972              		.loc 2 1027 0
 973 008a 3B69     		ldr	r3, [r7, #16]
 974 008c 03F10402 		add	r2, r3, #4
 975 0090 3B69     		ldr	r3, [r7, #16]
 976 0092 5A60     		str	r2, [r3, #4]
 977 0094 3B69     		ldr	r3, [r7, #16]
 978 0096 03F10402 		add	r2, r3, #4
 979 009a 3B69     		ldr	r3, [r7, #16]
 980 009c 9A60     		str	r2, [r3, #8]
 981              	.L39:
 982              	.LBE2:
1028:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
1029:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		hwcfg1 >>= 2;
 983              		.loc 2 1029 0
 984 009e BB6A     		ldr	r3, [r7, #40]
 985 00a0 4FEA9303 		lsr	r3, r3, #2
 986 00a4 BB62     		str	r3, [r7, #40]
1016:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	for (i = 1; in_ep_cntr < num_in_eps; i++) {
 987              		.loc 2 1016 0
 988 00a6 FB6A     		ldr	r3, [r7, #44]
 989 00a8 03F10103 		add	r3, r3, #1
 990 00ac FB62     		str	r3, [r7, #44]
 991              	.L38:
1016:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	for (i = 1; in_ep_cntr < num_in_eps; i++) {
 992              		.loc 2 1016 0 is_stmt 0 discriminator 1
 993 00ae 7A6A     		ldr	r2, [r7, #36]
 994 00b0 FB69     		ldr	r3, [r7, #28]
 995 00b2 9A42     		cmp	r2, r3
 996 00b4 CDD3     		bcc	.L40
1030:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1031:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1032:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	out_ep_cntr = 0;
 997              		.loc 2 1032 0 is_stmt 1
 998 00b6 4FF00003 		mov	r3, #0
 999 00ba 3B62     		str	r3, [r7, #32]
1033:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	hwcfg1 = (GET_CORE_IF(pcd))->hwcfg1.d32 >> 2;
 1000              		.loc 2 1033 0
 1001 00bc 7B68     		ldr	r3, [r7, #4]
 1002 00be 9B68     		ldr	r3, [r3, #8]
 1003 00c0 DB6C     		ldr	r3, [r3, #76]
 1004 00c2 4FEA9303 		lsr	r3, r3, #2
 1005 00c6 BB62     		str	r3, [r7, #40]
1034:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	for (i = 1; out_ep_cntr < num_out_eps; i++) {
 1006              		.loc 2 1034 0
 1007 00c8 4FF00103 		mov	r3, #1
 1008 00cc FB62     		str	r3, [r7, #44]
 1009 00ce 2FE0     		b	.L41
 1010              	.L43:
1035:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if ((hwcfg1 & 0x1) == 0) {
 1011              		.loc 2 1035 0
 1012 00d0 BB6A     		ldr	r3, [r7, #40]
 1013 00d2 03F00103 		and	r3, r3, #1
 1014 00d6 002B     		cmp	r3, #0
 1015 00d8 22D1     		bne	.L42
 1016              	.LBB3:
1036:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dwc_otg_pcd_ep_t *ep = &pcd->out_ep[out_ep_cntr];
 1017              		.loc 2 1036 0
 1018 00da 3A6A     		ldr	r2, [r7, #32]
 1019 00dc 1346     		mov	r3, r2
 1020 00de 4FEA0313 		lsl	r3, r3, #4
 1021 00e2 9B18     		adds	r3, r3, r2
 1022 00e4 4FEA8303 		lsl	r3, r3, #2
 1023 00e8 03F51073 		add	r3, r3, #576
 1024 00ec 7A68     		ldr	r2, [r7, #4]
 1025 00ee D318     		adds	r3, r2, r3
 1026 00f0 03F10403 		add	r3, r3, #4
 1027 00f4 FB60     		str	r3, [r7, #12]
1037:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			out_ep_cntr++;
 1028              		.loc 2 1037 0
 1029 00f6 3B6A     		ldr	r3, [r7, #32]
 1030 00f8 03F10103 		add	r3, r3, #1
 1031 00fc 3B62     		str	r3, [r7, #32]
1038:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			/**
1039:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			 * @todo NGS: Add direction to EP, based on contents
1040:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			 * of HWCFG1.  Need a copy of HWCFG1 in pcd structure?
1041:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			 * sprintf(";r
1042:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			 */
1043:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dwc_otg_pcd_init_ep(pcd, ep, 0 /* OUT */ , i);
 1032              		.loc 2 1043 0
 1033 00fe FB6A     		ldr	r3, [r7, #44]
 1034 0100 7868     		ldr	r0, [r7, #4]
 1035 0102 F968     		ldr	r1, [r7, #12]
 1036 0104 4FF00002 		mov	r2, #0
 1037 0108 FFF7FEFF 		bl	dwc_otg_pcd_init_ep
1044:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_CIRCLEQ_INIT(&ep->queue);
 1038              		.loc 2 1044 0
 1039 010c FB68     		ldr	r3, [r7, #12]
 1040 010e 03F10402 		add	r2, r3, #4
 1041 0112 FB68     		ldr	r3, [r7, #12]
 1042 0114 5A60     		str	r2, [r3, #4]
 1043 0116 FB68     		ldr	r3, [r7, #12]
 1044 0118 03F10402 		add	r2, r3, #4
 1045 011c FB68     		ldr	r3, [r7, #12]
 1046 011e 9A60     		str	r2, [r3, #8]
 1047              	.L42:
 1048              	.LBE3:
1045:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
1046:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		hwcfg1 >>= 2;
 1049              		.loc 2 1046 0
 1050 0120 BB6A     		ldr	r3, [r7, #40]
 1051 0122 4FEA9303 		lsr	r3, r3, #2
 1052 0126 BB62     		str	r3, [r7, #40]
1034:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	for (i = 1; out_ep_cntr < num_out_eps; i++) {
 1053              		.loc 2 1034 0
 1054 0128 FB6A     		ldr	r3, [r7, #44]
 1055 012a 03F10103 		add	r3, r3, #1
 1056 012e FB62     		str	r3, [r7, #44]
 1057              	.L41:
1034:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	for (i = 1; out_ep_cntr < num_out_eps; i++) {
 1058              		.loc 2 1034 0 is_stmt 0 discriminator 1
 1059 0130 3A6A     		ldr	r2, [r7, #32]
 1060 0132 BB69     		ldr	r3, [r7, #24]
 1061 0134 9A42     		cmp	r2, r3
 1062 0136 CBD3     		bcc	.L43
1047:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1048:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1049:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pcd->ep0state = EP0_DISCONNECT;
 1063              		.loc 2 1049 0 is_stmt 1
 1064 0138 7B68     		ldr	r3, [r7, #4]
 1065 013a 4FF00002 		mov	r2, #0
 1066 013e 1A73     		strb	r2, [r3, #12]
1050:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pcd->ep0.dwc_ep.maxpacket = MAX_EP0_SIZE;
 1067              		.loc 2 1050 0
 1068 0140 7B68     		ldr	r3, [r7, #4]
 1069 0142 93F83620 		ldrb	r2, [r3, #54]
 1070 0146 02F00302 		and	r2, r2, #3
 1071 014a 83F83620 		strb	r2, [r3, #54]
 1072 014e 93F83720 		ldrb	r2, [r3, #55]
 1073 0152 22F01F02 		bic	r2, r2, #31
 1074 0156 42F00102 		orr	r2, r2, #1
 1075 015a 83F83720 		strb	r2, [r3, #55]
1051:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pcd->ep0.dwc_ep.type = DWC_OTG_EP_TYPE_CONTROL;
 1076              		.loc 2 1051 0
 1077 015e 7A68     		ldr	r2, [r7, #4]
 1078 0160 92F83530 		ldrb	r3, [r2, #53]
 1079 0164 6FF38713 		bfc	r3, #6, #2
 1080 0168 82F83530 		strb	r3, [r2, #53]
1052:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 1081              		.loc 2 1052 0
 1082 016c 07F13007 		add	r7, r7, #48
 1083 0170 BD46     		mov	sp, r7
 1084 0172 80BD     		pop	{r7, pc}
 1085              		.cfi_endproc
 1086              	.LFE31:
 1088              		.section	.text.srp_timeout,"ax",%progbits
 1089              		.align	2
 1090              		.thumb
 1091              		.thumb_func
 1093              	srp_timeout:
 1094              	.LFB32:
1053:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1054:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
1055:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * This function is called when the SRP timer expires. The SRP should
1056:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * complete within 6 seconds.
1057:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
1058:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** static void srp_timeout(void *ptr)
1059:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 1095              		.loc 2 1059 0
 1096              		.cfi_startproc
 1097              		@ args = 0, pretend = 0, frame = 24
 1098              		@ frame_needed = 1, uses_anonymous_args = 0
 1099 0000 80B5     		push	{r7, lr}
 1100              	.LCFI39:
 1101              		.cfi_def_cfa_offset 8
 1102              		.cfi_offset 7, -8
 1103              		.cfi_offset 14, -4
 1104 0002 86B0     		sub	sp, sp, #24
 1105              	.LCFI40:
 1106              		.cfi_def_cfa_offset 32
 1107 0004 00AF     		add	r7, sp, #0
 1108              	.LCFI41:
 1109              		.cfi_def_cfa_register 7
 1110 0006 7860     		str	r0, [r7, #4]
1060:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	gotgctl_data_t gotgctl;
1061:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_core_if_t *core_if = (dwc_otg_core_if_t *) ptr;
 1111              		.loc 2 1061 0
 1112 0008 7B68     		ldr	r3, [r7, #4]
 1113 000a 7B61     		str	r3, [r7, #20]
1062:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	volatile uint32_t *addr = &core_if->core_global_regs->gotgctl;
 1114              		.loc 2 1062 0
 1115 000c 7B69     		ldr	r3, [r7, #20]
 1116 000e 5B68     		ldr	r3, [r3, #4]
 1117 0010 3B61     		str	r3, [r7, #16]
1063:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1064:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	gotgctl.d32 = DWC_READ_REG32(addr);
 1118              		.loc 2 1064 0
 1119 0012 3869     		ldr	r0, [r7, #16]
 1120 0014 FFF7FEFF 		bl	DWC_READ_REG32
 1121 0018 0346     		mov	r3, r0
 1122 001a FB60     		str	r3, [r7, #12]
1065:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1066:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	core_if->srp_timer_started = 0;
 1123              		.loc 2 1066 0
 1124 001c 7B69     		ldr	r3, [r7, #20]
 1125 001e 4FF00002 		mov	r2, #0
 1126 0022 9A75     		strb	r2, [r3, #22]
1067:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1068:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if ((core_if->core_params->phy_type == DWC_PHY_TYPE_PARAM_FS) &&
 1127              		.loc 2 1068 0
 1128 0024 7B69     		ldr	r3, [r7, #20]
 1129 0026 1B68     		ldr	r3, [r3, #0]
 1130 0028 D3F88830 		ldr	r3, [r3, #136]
 1131 002c 002B     		cmp	r3, #0
 1132 002e 40D1     		bne	.L45
1069:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	    (core_if->core_params->i2c_enable)) {
 1133              		.loc 2 1069 0 discriminator 1
 1134 0030 7B69     		ldr	r3, [r7, #20]
 1135 0032 1B68     		ldr	r3, [r3, #0]
 1136 0034 D3F89830 		ldr	r3, [r3, #152]
1068:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if ((core_if->core_params->phy_type == DWC_PHY_TYPE_PARAM_FS) &&
 1137              		.loc 2 1068 0 discriminator 1
 1138 0038 002B     		cmp	r3, #0
 1139 003a 3AD0     		beq	.L45
1070:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_PRINTF("SRP Timeout\n");
1071:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1072:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if ((core_if->srp_success) && (gotgctl.b.bsesvld)) {
 1140              		.loc 2 1072 0
 1141 003c 7B69     		ldr	r3, [r7, #20]
 1142 003e 5B7D     		ldrb	r3, [r3, #21]	@ zero_extendqisi2
 1143 0040 002B     		cmp	r3, #0
 1144 0042 2CD0     		beq	.L46
 1145              		.loc 2 1072 0 is_stmt 0 discriminator 1
 1146 0044 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1147 0046 03F00803 		and	r3, r3, #8
 1148 004a DBB2     		uxtb	r3, r3
 1149 004c 002B     		cmp	r3, #0
 1150 004e 26D0     		beq	.L46
1073:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			if (core_if->pcd_cb && core_if->pcd_cb->resume_wakeup) {
 1151              		.loc 2 1073 0 is_stmt 1
 1152 0050 7B69     		ldr	r3, [r7, #20]
 1153 0052 DB6E     		ldr	r3, [r3, #108]
 1154 0054 002B     		cmp	r3, #0
 1155 0056 0CD0     		beq	.L47
 1156              		.loc 2 1073 0 is_stmt 0 discriminator 1
 1157 0058 7B69     		ldr	r3, [r7, #20]
 1158 005a DB6E     		ldr	r3, [r3, #108]
 1159 005c DB68     		ldr	r3, [r3, #12]
 1160 005e 002B     		cmp	r3, #0
 1161 0060 07D0     		beq	.L47
1074:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				core_if->pcd_cb->resume_wakeup(core_if->pcd_cb->p);
 1162              		.loc 2 1074 0 is_stmt 1
 1163 0062 7B69     		ldr	r3, [r7, #20]
 1164 0064 DB6E     		ldr	r3, [r3, #108]
 1165 0066 DB68     		ldr	r3, [r3, #12]
 1166 0068 7A69     		ldr	r2, [r7, #20]
 1167 006a D26E     		ldr	r2, [r2, #108]
 1168 006c 9269     		ldr	r2, [r2, #24]
 1169 006e 1046     		mov	r0, r2
 1170 0070 9847     		blx	r3
 1171              	.L47:
1075:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			}
1076:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1077:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			/* Clear Session Request */
1078:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			gotgctl.d32 = 0;
 1172              		.loc 2 1078 0
 1173 0072 4FF00003 		mov	r3, #0
 1174 0076 FB60     		str	r3, [r7, #12]
1079:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			gotgctl.b.sesreq = 1;
 1175              		.loc 2 1079 0
 1176 0078 FB68     		ldr	r3, [r7, #12]
 1177 007a 43F00203 		orr	r3, r3, #2
 1178 007e FB60     		str	r3, [r7, #12]
1080:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_MODIFY_REG32(&core_if->core_global_regs->gotgctl,
 1179              		.loc 2 1080 0
 1180 0080 7B69     		ldr	r3, [r7, #20]
 1181 0082 5B68     		ldr	r3, [r3, #4]
 1182 0084 1A46     		mov	r2, r3
 1183 0086 FB68     		ldr	r3, [r7, #12]
 1184 0088 1046     		mov	r0, r2
 1185 008a 1946     		mov	r1, r3
 1186 008c 4FF00002 		mov	r2, #0
 1187 0090 FFF7FEFF 		bl	DWC_MODIFY_REG32
1081:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					 gotgctl.d32, 0);
1082:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1083:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			core_if->srp_success = 0;
 1188              		.loc 2 1083 0
 1189 0094 7B69     		ldr	r3, [r7, #20]
 1190 0096 4FF00002 		mov	r2, #0
 1191 009a 5A75     		strb	r2, [r3, #21]
1072:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if ((core_if->srp_success) && (gotgctl.b.bsesvld)) {
 1192              		.loc 2 1072 0
 1193 009c 18E0     		b	.L49
 1194              	.L46:
1084:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		} else {
1085:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			__DWC_ERROR("Device not connected/responding\n");
1086:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			gotgctl.b.sesreq = 0;
 1195              		.loc 2 1086 0
 1196 009e FB68     		ldr	r3, [r7, #12]
 1197 00a0 6FF34103 		bfc	r3, #1, #1
 1198 00a4 FB60     		str	r3, [r7, #12]
1087:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_WRITE_REG32(addr, gotgctl.d32);
 1199              		.loc 2 1087 0
 1200 00a6 FB68     		ldr	r3, [r7, #12]
 1201 00a8 3869     		ldr	r0, [r7, #16]
 1202 00aa 1946     		mov	r1, r3
 1203 00ac FFF7FEFF 		bl	DWC_WRITE_REG32
1072:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if ((core_if->srp_success) && (gotgctl.b.bsesvld)) {
 1204              		.loc 2 1072 0
 1205 00b0 0EE0     		b	.L49
 1206              	.L45:
1088:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
1089:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	} else if (gotgctl.b.sesreq) {
 1207              		.loc 2 1089 0
 1208 00b2 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1209 00b4 03F00203 		and	r3, r3, #2
 1210 00b8 DBB2     		uxtb	r3, r3
 1211 00ba 002B     		cmp	r3, #0
 1212 00bc 08D0     		beq	.L49
1090:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_PRINTF("SRP Timeout\n");
1091:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1092:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		__DWC_ERROR("Device not connected/responding\n");
1093:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		gotgctl.b.sesreq = 0;
 1213              		.loc 2 1093 0
 1214 00be FB68     		ldr	r3, [r7, #12]
 1215 00c0 6FF34103 		bfc	r3, #1, #1
 1216 00c4 FB60     		str	r3, [r7, #12]
1094:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_WRITE_REG32(addr, gotgctl.d32);
 1217              		.loc 2 1094 0
 1218 00c6 FB68     		ldr	r3, [r7, #12]
 1219 00c8 3869     		ldr	r0, [r7, #16]
 1220 00ca 1946     		mov	r1, r3
 1221 00cc FFF7FEFF 		bl	DWC_WRITE_REG32
 1222              	.L49:
1095:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	} else {
1096:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_PRINTF(" SRP GOTGCTL=%0x\n", gotgctl.d32);
1097:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1098:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1099:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (core_if->adp_enable) {
 1223              		.loc 2 1099 0
 1224 00d0 7B69     		ldr	r3, [r7, #20]
 1225 00d2 D3F89430 		ldr	r3, [r3, #148]
 1226 00d6 002B     		cmp	r3, #0
 1227 00d8 40D0     		beq	.L44
1100:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (gotgctl.b.bsesvld == 0) {
 1228              		.loc 2 1100 0
 1229 00da BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1230 00dc 03F00803 		and	r3, r3, #8
 1231 00e0 DBB2     		uxtb	r3, r3
 1232 00e2 002B     		cmp	r3, #0
 1233 00e4 2CD1     		bne	.L51
 1234              	.LBB4:
1101:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			gpwrdn_data_t gpwrdn = {.d32 = 0 };
 1235              		.loc 2 1101 0
 1236 00e6 4FF00003 		mov	r3, #0
 1237 00ea BB60     		str	r3, [r7, #8]
1102:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1103:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			/* Power off the core */
1104:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			if (core_if->power_down == 2) {
 1238              		.loc 2 1104 0
 1239 00ec 7B69     		ldr	r3, [r7, #20]
 1240 00ee D3F89030 		ldr	r3, [r3, #144]
 1241 00f2 022B     		cmp	r3, #2
 1242 00f4 0ED1     		bne	.L52
1105:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				gpwrdn.b.pwrdnswtch = 1;
 1243              		.loc 2 1105 0
 1244 00f6 BB68     		ldr	r3, [r7, #8]
 1245 00f8 43F02003 		orr	r3, r3, #32
 1246 00fc BB60     		str	r3, [r7, #8]
1106:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				DWC_MODIFY_REG32(&core_if->core_global_regs->
 1247              		.loc 2 1106 0
 1248 00fe 7B69     		ldr	r3, [r7, #20]
 1249 0100 5B68     		ldr	r3, [r3, #4]
 1250 0102 03F15802 		add	r2, r3, #88
 1251 0106 BB68     		ldr	r3, [r7, #8]
 1252 0108 1046     		mov	r0, r2
 1253 010a 1946     		mov	r1, r3
 1254 010c 4FF00002 		mov	r2, #0
 1255 0110 FFF7FEFF 		bl	DWC_MODIFY_REG32
 1256              	.L52:
1107:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						 gpwrdn, gpwrdn.d32, 0);
1108:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			}
1109:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1110:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			gpwrdn.d32 = 0;
 1257              		.loc 2 1110 0
 1258 0114 4FF00003 		mov	r3, #0
 1259 0118 BB60     		str	r3, [r7, #8]
1111:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			gpwrdn.b.pmuactv = 1;
 1260              		.loc 2 1111 0
 1261 011a BB68     		ldr	r3, [r7, #8]
 1262 011c 43F00203 		orr	r3, r3, #2
 1263 0120 BB60     		str	r3, [r7, #8]
1112:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, 0, gpwrdn.d32);
 1264              		.loc 2 1112 0
 1265 0122 7B69     		ldr	r3, [r7, #20]
 1266 0124 5B68     		ldr	r3, [r3, #4]
 1267 0126 03F15802 		add	r2, r3, #88
 1268 012a BB68     		ldr	r3, [r7, #8]
 1269 012c 1046     		mov	r0, r2
 1270 012e 4FF00001 		mov	r1, #0
 1271 0132 1A46     		mov	r2, r3
 1272 0134 FFF7FEFF 		bl	DWC_MODIFY_REG32
1113:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						
1114:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dwc_otg_adp_probe_start(core_if);
 1273              		.loc 2 1114 0
 1274 0138 7869     		ldr	r0, [r7, #20]
 1275 013a FFF7FEFF 		bl	dwc_otg_adp_probe_start
 1276 013e 0DE0     		b	.L44
 1277              	.L51:
 1278              	.LBE4:
1115:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		} else {
1116:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			core_if->op_state = B_PERIPHERAL;
 1279              		.loc 2 1116 0
 1280 0140 7B69     		ldr	r3, [r7, #20]
 1281 0142 4FF00402 		mov	r2, #4
 1282 0146 83F86420 		strb	r2, [r3, #100]
1117:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dwc_otg_core_init(core_if);
 1283              		.loc 2 1117 0
 1284 014a 7869     		ldr	r0, [r7, #20]
 1285 014c FFF7FEFF 		bl	dwc_otg_core_init
1118:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dwc_otg_enable_global_interrupts(core_if);
 1286              		.loc 2 1118 0
 1287 0150 7869     		ldr	r0, [r7, #20]
 1288 0152 FFF7FEFF 		bl	dwc_otg_enable_global_interrupts
1119:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			cil_pcd_start(core_if);
 1289              		.loc 2 1119 0
 1290 0156 7869     		ldr	r0, [r7, #20]
 1291 0158 FFF7FEFF 		bl	cil_pcd_start
 1292              	.L44:
1120:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
1121:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1122:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 1293              		.loc 2 1122 0
 1294 015c 07F11807 		add	r7, r7, #24
 1295 0160 BD46     		mov	sp, r7
 1296 0162 80BD     		pop	{r7, pc}
 1297              		.cfi_endproc
 1298              	.LFE32:
 1300              		.section	.text.start_xfer_tasklet_func,"ax",%progbits
 1301              		.align	2
 1302              		.thumb
 1303              		.thumb_func
 1305              	start_xfer_tasklet_func:
 1306              	.LFB33:
1123:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1124:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
1125:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * Tasklet
1126:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  *
1127:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
1128:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** extern void start_next_request(dwc_otg_pcd_ep_t * ep);
1129:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1130:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** static void start_xfer_tasklet_func(void *data)
1131:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 1307              		.loc 2 1131 0
 1308              		.cfi_startproc
 1309              		@ args = 0, pretend = 0, frame = 24
 1310              		@ frame_needed = 1, uses_anonymous_args = 0
 1311 0000 80B5     		push	{r7, lr}
 1312              	.LCFI42:
 1313              		.cfi_def_cfa_offset 8
 1314              		.cfi_offset 7, -8
 1315              		.cfi_offset 14, -4
 1316 0002 86B0     		sub	sp, sp, #24
 1317              	.LCFI43:
 1318              		.cfi_def_cfa_offset 32
 1319 0004 00AF     		add	r7, sp, #0
 1320              	.LCFI44:
 1321              		.cfi_def_cfa_register 7
 1322 0006 7860     		str	r0, [r7, #4]
1132:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_pcd_t *pcd = (dwc_otg_pcd_t *) data;
 1323              		.loc 2 1132 0
 1324 0008 7B68     		ldr	r3, [r7, #4]
 1325 000a 3B61     		str	r3, [r7, #16]
1133:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_core_if_t *core_if = GET_CORE_IF(pcd);
 1326              		.loc 2 1133 0
 1327 000c 3B69     		ldr	r3, [r7, #16]
 1328 000e 9B68     		ldr	r3, [r3, #8]
 1329 0010 FB60     		str	r3, [r7, #12]
1134:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1135:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	int i;
1136:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #ifndef	USE_IFX_DEV
1137:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	depctl_data_t diepctl;
1138:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1139:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_DEBUGPL(DBG_PCDV, "Start xfer tasklet\n");
1140:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1141:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	diepctl.d32 = DWC_READ_REG32(&core_if->dev_if->in_ep_regs[0]->diepctl);
1142:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #endif
1143:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (pcd->ep0.queue_sof) {
 1330              		.loc 2 1143 0
 1331 0012 3B69     		ldr	r3, [r7, #16]
 1332 0014 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 1333 0018 03F00803 		and	r3, r3, #8
 1334 001c DBB2     		uxtb	r3, r3
 1335 001e 002B     		cmp	r3, #0
 1336 0020 0CD0     		beq	.L54
1144:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		pcd->ep0.queue_sof = 0;
 1337              		.loc 2 1144 0
 1338 0022 3A69     		ldr	r2, [r7, #16]
 1339 0024 92F83030 		ldrb	r3, [r2, #48]
 1340 0028 6FF3C303 		bfc	r3, #3, #1
 1341 002c 82F83030 		strb	r3, [r2, #48]
1145:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		start_next_request(&pcd->ep0);
 1342              		.loc 2 1145 0
 1343 0030 3B69     		ldr	r3, [r7, #16]
 1344 0032 03F12403 		add	r3, r3, #36
 1345 0036 1846     		mov	r0, r3
 1346 0038 FFF7FEFF 		bl	start_next_request
 1347              	.L54:
1146:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		// break;
1147:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1148:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1149:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	for (i = 0; i < core_if->dev_if->num_in_eps; i++) {
 1348              		.loc 2 1149 0
 1349 003c 4FF00003 		mov	r3, #0
 1350 0040 7B61     		str	r3, [r7, #20]
 1351 0042 31E0     		b	.L55
 1352              	.L57:
1150:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #ifndef	USE_IFX_DEV
1151:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		depctl_data_t diepctl;
1152:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1153:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		diepctl.d32 =
1154:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    DWC_READ_REG32(&core_if->dev_if->in_ep_regs[i]->diepctl);
1155:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #endif
1156:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (pcd->in_ep[i].queue_sof) {
 1353              		.loc 2 1156 0
 1354 0044 3969     		ldr	r1, [r7, #16]
 1355 0046 7A69     		ldr	r2, [r7, #20]
 1356 0048 1346     		mov	r3, r2
 1357 004a 4FEA0313 		lsl	r3, r3, #4
 1358 004e 9B18     		adds	r3, r3, r2
 1359 0050 4FEA8303 		lsl	r3, r3, #2
 1360 0054 CB18     		adds	r3, r1, r3
 1361 0056 03F17003 		add	r3, r3, #112
 1362 005a 1B79     		ldrb	r3, [r3, #4]
 1363 005c C3F3C003 		ubfx	r3, r3, #3, #1
 1364 0060 DBB2     		uxtb	r3, r3
 1365 0062 002B     		cmp	r3, #0
 1366 0064 1CD0     		beq	.L56
1157:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			pcd->in_ep[i].queue_sof = 0;
 1367              		.loc 2 1157 0
 1368 0066 3969     		ldr	r1, [r7, #16]
 1369 0068 7A69     		ldr	r2, [r7, #20]
 1370 006a 1346     		mov	r3, r2
 1371 006c 4FEA0313 		lsl	r3, r3, #4
 1372 0070 9B18     		adds	r3, r3, r2
 1373 0072 4FEA8303 		lsl	r3, r3, #2
 1374 0076 CB18     		adds	r3, r1, r3
 1375 0078 03F17002 		add	r2, r3, #112
 1376 007c 1379     		ldrb	r3, [r2, #4]
 1377 007e 6FF3C303 		bfc	r3, #3, #1
 1378 0082 1371     		strb	r3, [r2, #4]
1158:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			start_next_request(&pcd->in_ep[i]);
 1379              		.loc 2 1158 0
 1380 0084 7A69     		ldr	r2, [r7, #20]
 1381 0086 1346     		mov	r3, r2
 1382 0088 4FEA0313 		lsl	r3, r3, #4
 1383 008c 9B18     		adds	r3, r3, r2
 1384 008e 4FEA8303 		lsl	r3, r3, #2
 1385 0092 03F16803 		add	r3, r3, #104
 1386 0096 3A69     		ldr	r2, [r7, #16]
 1387 0098 D318     		adds	r3, r2, r3
 1388 009a 1846     		mov	r0, r3
 1389 009c FFF7FEFF 		bl	start_next_request
 1390              	.L56:
1149:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	for (i = 0; i < core_if->dev_if->num_in_eps; i++) {
 1391              		.loc 2 1149 0
 1392 00a0 7B69     		ldr	r3, [r7, #20]
 1393 00a2 03F10103 		add	r3, r3, #1
 1394 00a6 7B61     		str	r3, [r7, #20]
 1395              	.L55:
1149:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	for (i = 0; i < core_if->dev_if->num_in_eps; i++) {
 1396              		.loc 2 1149 0 is_stmt 0 discriminator 1
 1397 00a8 FB68     		ldr	r3, [r7, #12]
 1398 00aa 9B68     		ldr	r3, [r3, #8]
 1399 00ac 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 1400 00b0 1A46     		mov	r2, r3
 1401 00b2 7B69     		ldr	r3, [r7, #20]
 1402 00b4 9A42     		cmp	r2, r3
 1403 00b6 C5DC     		bgt	.L57
1159:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			// break;
1160:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
1161:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1162:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1163:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return;
 1404              		.loc 2 1163 0 is_stmt 1
 1405 00b8 00BF     		nop
1164:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 1406              		.loc 2 1164 0
 1407 00ba 07F11807 		add	r7, r7, #24
 1408 00be BD46     		mov	sp, r7
 1409 00c0 80BD     		pop	{r7, pc}
 1410              		.cfi_endproc
 1411              	.LFE33:
 1413 00c2 00BF     		.section	.rodata
 1414              		.align	2
 1415              	.LC0:
 1416 0000 78666572 		.ascii	"xfer_tasklet\000"
 1416      5F746173 
 1416      6B6C6574 
 1416      00
 1417 000d 000000   		.align	2
 1418              	.LC1:
 1419 0010 74657374 		.ascii	"test_mode_tasklet\000"
 1419      5F6D6F64 
 1419      655F7461 
 1419      736B6C65 
 1419      7400
 1420 0022 0000     		.align	2
 1421              	.LC2:
 1422 0024 53525020 		.ascii	"SRP TIMER\000"
 1422      54494D45 
 1422      5200
 1423 002e 0000     		.section	.text.dwc_otg_pcd_init,"ax",%progbits
 1424              		.align	2
 1425              		.global	dwc_otg_pcd_init
 1426              		.thumb
 1427              		.thumb_func
 1429              	dwc_otg_pcd_init:
 1430              	.LFB34:
1165:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1166:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
1167:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * This function initialized the PCD portion of the driver.
1168:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  *
1169:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
1170:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** dwc_otg_pcd_t *dwc_otg_pcd_init(dwc_otg_core_if_t * core_if)
1171:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 1431              		.loc 2 1171 0
 1432              		.cfi_startproc
 1433              		@ args = 0, pretend = 0, frame = 16
 1434              		@ frame_needed = 1, uses_anonymous_args = 0
 1435 0000 80B5     		push	{r7, lr}
 1436              	.LCFI45:
 1437              		.cfi_def_cfa_offset 8
 1438              		.cfi_offset 7, -8
 1439              		.cfi_offset 14, -4
 1440 0002 84B0     		sub	sp, sp, #16
 1441              	.LCFI46:
 1442              		.cfi_def_cfa_offset 24
 1443 0004 00AF     		add	r7, sp, #0
 1444              	.LCFI47:
 1445              		.cfi_def_cfa_register 7
 1446 0006 7860     		str	r0, [r7, #4]
1172:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_pcd_t *pcd = NULL;
 1447              		.loc 2 1172 0
 1448 0008 4FF00003 		mov	r3, #0
 1449 000c FB60     		str	r3, [r7, #12]
1173:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_dev_if_t *dev_if;
1174:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1175:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/*
1176:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	 * Allocate PCD structure
1177:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	 */
1178:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pcd = DWC_ALLOC(sizeof(dwc_otg_pcd_t));
 1450              		.loc 2 1178 0
 1451 000e 4FF00000 		mov	r0, #0
 1452 0012 4FF48661 		mov	r1, #1072
 1453 0016 FFF7FEFF 		bl	__DWC_ALLOC
 1454 001a F860     		str	r0, [r7, #12]
1179:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1180:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (pcd == NULL) {
 1455              		.loc 2 1180 0
 1456 001c FB68     		ldr	r3, [r7, #12]
 1457 001e 002B     		cmp	r3, #0
 1458 0020 02D1     		bne	.L60
1181:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		return NULL;
 1459              		.loc 2 1181 0
 1460 0022 4FF00003 		mov	r3, #0
 1461 0026 7FE1     		b	.L61
 1462              	.L60:
1182:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1183:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1184:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pcd->lock = DWC_SPINLOCK_ALLOC();
 1463              		.loc 2 1184 0
 1464 0028 FFF7FEFF 		bl	DWC_SPINLOCK_ALLOC
 1465 002c 0246     		mov	r2, r0
 1466 002e FB68     		ldr	r3, [r7, #12]
 1467 0030 C3F82024 		str	r2, [r3, #1056]
1185:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (!pcd->lock) {
 1468              		.loc 2 1185 0
 1469 0034 FB68     		ldr	r3, [r7, #12]
 1470 0036 D3F82034 		ldr	r3, [r3, #1056]
 1471 003a 002B     		cmp	r3, #0
 1472 003c 07D1     		bne	.L62
1186:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_ERROR("Could not allocate lock for pcd");
1187:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_FREE(pcd);
 1473              		.loc 2 1187 0
 1474 003e 4FF00000 		mov	r0, #0
 1475 0042 F968     		ldr	r1, [r7, #12]
 1476 0044 FFF7FEFF 		bl	__DWC_FREE
1188:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		return NULL;
 1477              		.loc 2 1188 0
 1478 0048 4FF00003 		mov	r3, #0
 1479 004c 6CE1     		b	.L61
 1480              	.L62:
1189:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1190:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* Set core_if's lock pointer to hcd->lock */
1191:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	core_if->lock = pcd->lock;
 1481              		.loc 2 1191 0
 1482 004e FB68     		ldr	r3, [r7, #12]
 1483 0050 D3F82024 		ldr	r2, [r3, #1056]
 1484 0054 7B68     		ldr	r3, [r7, #4]
 1485 0056 C3F8CC20 		str	r2, [r3, #204]
1192:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pcd->core_if = core_if;
 1486              		.loc 2 1192 0
 1487 005a FB68     		ldr	r3, [r7, #12]
 1488 005c 7A68     		ldr	r2, [r7, #4]
 1489 005e 9A60     		str	r2, [r3, #8]
1193:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1194:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dev_if = core_if->dev_if;
 1490              		.loc 2 1194 0
 1491 0060 7B68     		ldr	r3, [r7, #4]
 1492 0062 9B68     		ldr	r3, [r3, #8]
 1493 0064 BB60     		str	r3, [r7, #8]
1195:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1196:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (core_if->hwcfg4.b.ded_fifo_en) {
1197:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_PRINTF("Dedicated Tx FIFOs mode\n");
1198:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	} else {
1199:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_PRINTF("Shared Tx FIFO mode\n");
1200:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1201:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1202:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/*
1203:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	 * Initialized the Core for Device mode.
1204:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	 */
1205:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (dwc_otg_is_device_mode(core_if)) {
 1494              		.loc 2 1205 0
 1495 0066 7868     		ldr	r0, [r7, #4]
 1496 0068 FFF7FEFF 		bl	dwc_otg_is_device_mode
 1497 006c 0346     		mov	r3, r0
 1498 006e 002B     		cmp	r3, #0
 1499 0070 02D0     		beq	.L63
1206:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwc_otg_core_dev_init(core_if);
 1500              		.loc 2 1206 0
 1501 0072 7868     		ldr	r0, [r7, #4]
 1502 0074 FFF7FEFF 		bl	dwc_otg_core_dev_init
 1503              	.L63:
1207:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1208:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1209:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/*
1210:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	 * Register the PCD Callbacks.
1211:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	 */
1212:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_cil_register_pcd_callbacks(core_if, &pcd_callbacks, pcd);
 1504              		.loc 2 1212 0
 1505 0078 7868     		ldr	r0, [r7, #4]
 1506 007a 40F20001 		movw	r1, #:lower16:pcd_callbacks
 1507 007e C0F20001 		movt	r1, #:upper16:pcd_callbacks
 1508 0082 FA68     		ldr	r2, [r7, #12]
 1509 0084 FFF7FEFF 		bl	dwc_otg_cil_register_pcd_callbacks
1213:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1214:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/*
1215:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	 * Initialize the DMA buffer for SETUP packets
1216:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	 */
1217:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (GET_CORE_IF(pcd)->dma_enable) {
 1510              		.loc 2 1217 0
 1511 0088 FB68     		ldr	r3, [r7, #12]
 1512 008a 9B68     		ldr	r3, [r3, #8]
 1513 008c 93F84630 		ldrb	r3, [r3, #70]	@ zero_extendqisi2
 1514 0090 002B     		cmp	r3, #0
 1515 0092 00F0E880 		beq	.L64
1218:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		pcd->setup_pkt =
1219:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    DWC_DMA_ALLOC(sizeof(*pcd->setup_pkt) * 5,
 1516              		.loc 2 1219 0
 1517 0096 FB68     		ldr	r3, [r7, #12]
 1518 0098 03F11803 		add	r3, r3, #24
 1519 009c 4FF00000 		mov	r0, #0
 1520 00a0 4FF02801 		mov	r1, #40
 1521 00a4 1A46     		mov	r2, r3
 1522 00a6 FFF7FEFF 		bl	__DWC_DMA_ALLOC
 1523 00aa 0246     		mov	r2, r0
1218:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		pcd->setup_pkt =
 1524              		.loc 2 1218 0
 1525 00ac FB68     		ldr	r3, [r7, #12]
 1526 00ae 5A61     		str	r2, [r3, #20]
1220:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				  &pcd->setup_pkt_dma_handle);
1221:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (pcd->setup_pkt == NULL) {
 1527              		.loc 2 1221 0
 1528 00b0 FB68     		ldr	r3, [r7, #12]
 1529 00b2 5B69     		ldr	r3, [r3, #20]
 1530 00b4 002B     		cmp	r3, #0
 1531 00b6 07D1     		bne	.L65
1222:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_FREE(pcd);
 1532              		.loc 2 1222 0
 1533 00b8 4FF00000 		mov	r0, #0
 1534 00bc F968     		ldr	r1, [r7, #12]
 1535 00be FFF7FEFF 		bl	__DWC_FREE
1223:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			return NULL;
 1536              		.loc 2 1223 0
 1537 00c2 4FF00003 		mov	r3, #0
 1538 00c6 2FE1     		b	.L61
 1539              	.L65:
1224:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
1225:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1226:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		pcd->status_buf =
1227:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    DWC_DMA_ALLOC(sizeof(uint16_t),
 1540              		.loc 2 1227 0
 1541 00c8 FB68     		ldr	r3, [r7, #12]
 1542 00ca 03F12003 		add	r3, r3, #32
 1543 00ce 4FF00000 		mov	r0, #0
 1544 00d2 4FF00201 		mov	r1, #2
 1545 00d6 1A46     		mov	r2, r3
 1546 00d8 FFF7FEFF 		bl	__DWC_DMA_ALLOC
 1547 00dc 0246     		mov	r2, r0
1226:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		pcd->status_buf =
 1548              		.loc 2 1226 0
 1549 00de FB68     		ldr	r3, [r7, #12]
 1550 00e0 DA61     		str	r2, [r3, #28]
1228:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				  &pcd->status_buf_dma_handle);
1229:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (pcd->status_buf == NULL) {
 1551              		.loc 2 1229 0
 1552 00e2 FB68     		ldr	r3, [r7, #12]
 1553 00e4 DB69     		ldr	r3, [r3, #28]
 1554 00e6 002B     		cmp	r3, #0
 1555 00e8 11D1     		bne	.L66
1230:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_DMA_FREE(sizeof(*pcd->setup_pkt) * 5,
 1556              		.loc 2 1230 0
 1557 00ea FB68     		ldr	r3, [r7, #12]
 1558 00ec 5A69     		ldr	r2, [r3, #20]
 1559 00ee FB68     		ldr	r3, [r7, #12]
 1560 00f0 9B69     		ldr	r3, [r3, #24]
 1561 00f2 4FF00000 		mov	r0, #0
 1562 00f6 4FF02801 		mov	r1, #40
 1563 00fa FFF7FEFF 		bl	__DWC_DMA_FREE
1231:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				     pcd->setup_pkt, pcd->setup_pkt_dma_handle);
1232:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_FREE(pcd);
 1564              		.loc 2 1232 0
 1565 00fe 4FF00000 		mov	r0, #0
 1566 0102 F968     		ldr	r1, [r7, #12]
 1567 0104 FFF7FEFF 		bl	__DWC_FREE
1233:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			return NULL;
 1568              		.loc 2 1233 0
 1569 0108 4FF00003 		mov	r3, #0
 1570 010c 0CE1     		b	.L61
 1571              	.L66:
1234:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
1235:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1236:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (GET_CORE_IF(pcd)->dma_desc_enable) {
 1572              		.loc 2 1236 0
 1573 010e FB68     		ldr	r3, [r7, #12]
 1574 0110 9B68     		ldr	r3, [r3, #8]
 1575 0112 93F84730 		ldrb	r3, [r3, #71]	@ zero_extendqisi2
 1576 0116 002B     		cmp	r3, #0
 1577 0118 00F0D680 		beq	.L67
1237:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dev_if->setup_desc_addr[0] =
1238:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			    dwc_otg_ep_alloc_desc_chain(&dev_if->
 1578              		.loc 2 1238 0
 1579 011c BB68     		ldr	r3, [r7, #8]
 1580 011e 03F19003 		add	r3, r3, #144
 1581 0122 1846     		mov	r0, r3
 1582 0124 4FF00101 		mov	r1, #1
 1583 0128 FFF7FEFF 		bl	dwc_otg_ep_alloc_desc_chain
 1584 012c 0246     		mov	r2, r0
1237:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dev_if->setup_desc_addr[0] =
 1585              		.loc 2 1237 0
 1586 012e BB68     		ldr	r3, [r7, #8]
 1587 0130 C3F89820 		str	r2, [r3, #152]
1239:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 							dma_setup_desc_addr[0],
1240:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 							1);
1241:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dev_if->setup_desc_addr[1] =
1242:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			    dwc_otg_ep_alloc_desc_chain(&dev_if->
 1588              		.loc 2 1242 0
 1589 0134 BB68     		ldr	r3, [r7, #8]
 1590 0136 03F19403 		add	r3, r3, #148
 1591 013a 1846     		mov	r0, r3
 1592 013c 4FF00101 		mov	r1, #1
 1593 0140 FFF7FEFF 		bl	dwc_otg_ep_alloc_desc_chain
 1594 0144 0246     		mov	r2, r0
1241:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dev_if->setup_desc_addr[1] =
 1595              		.loc 2 1241 0
 1596 0146 BB68     		ldr	r3, [r7, #8]
 1597 0148 C3F89C20 		str	r2, [r3, #156]
1243:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 							dma_setup_desc_addr[1],
1244:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 							1);
1245:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dev_if->in_desc_addr =
1246:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			    dwc_otg_ep_alloc_desc_chain(&dev_if->
 1598              		.loc 2 1246 0
 1599 014c BB68     		ldr	r3, [r7, #8]
 1600 014e 03F1A803 		add	r3, r3, #168
 1601 0152 1846     		mov	r0, r3
 1602 0154 4FF00101 		mov	r1, #1
 1603 0158 FFF7FEFF 		bl	dwc_otg_ep_alloc_desc_chain
 1604 015c 0246     		mov	r2, r0
1245:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dev_if->in_desc_addr =
 1605              		.loc 2 1245 0
 1606 015e BB68     		ldr	r3, [r7, #8]
 1607 0160 C3F8AC20 		str	r2, [r3, #172]
1247:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 							dma_in_desc_addr, 1);
1248:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dev_if->out_desc_addr =
1249:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			    dwc_otg_ep_alloc_desc_chain(&dev_if->
 1608              		.loc 2 1249 0
 1609 0164 BB68     		ldr	r3, [r7, #8]
 1610 0166 03F1B003 		add	r3, r3, #176
 1611 016a 1846     		mov	r0, r3
 1612 016c 4FF00101 		mov	r1, #1
 1613 0170 FFF7FEFF 		bl	dwc_otg_ep_alloc_desc_chain
 1614 0174 0246     		mov	r2, r0
1248:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dev_if->out_desc_addr =
 1615              		.loc 2 1248 0
 1616 0176 BB68     		ldr	r3, [r7, #8]
 1617 0178 C3F8B420 		str	r2, [r3, #180]
1250:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 							dma_out_desc_addr, 1);
1251:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1252:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			if (dev_if->setup_desc_addr[0] == 0
 1618              		.loc 2 1252 0
 1619 017c BB68     		ldr	r3, [r7, #8]
 1620 017e D3F89830 		ldr	r3, [r3, #152]
 1621 0182 002B     		cmp	r3, #0
 1622 0184 0FD0     		beq	.L68
1253:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			    || dev_if->setup_desc_addr[1] == 0
 1623              		.loc 2 1253 0
 1624 0186 BB68     		ldr	r3, [r7, #8]
 1625 0188 D3F89C30 		ldr	r3, [r3, #156]
 1626 018c 002B     		cmp	r3, #0
 1627 018e 0AD0     		beq	.L68
1254:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			    || dev_if->in_desc_addr == 0
 1628              		.loc 2 1254 0
 1629 0190 BB68     		ldr	r3, [r7, #8]
 1630 0192 D3F8AC30 		ldr	r3, [r3, #172]
 1631 0196 002B     		cmp	r3, #0
 1632 0198 05D0     		beq	.L68
1255:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			    || dev_if->out_desc_addr == 0) {
 1633              		.loc 2 1255 0
 1634 019a BB68     		ldr	r3, [r7, #8]
 1635 019c D3F8B430 		ldr	r3, [r3, #180]
 1636 01a0 002B     		cmp	r3, #0
 1637 01a2 40F09180 		bne	.L67
 1638              	.L68:
1256:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1257:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				if (dev_if->out_desc_addr)
 1639              		.loc 2 1257 0
 1640 01a6 BB68     		ldr	r3, [r7, #8]
 1641 01a8 D3F8B430 		ldr	r3, [r3, #180]
 1642 01ac 002B     		cmp	r3, #0
 1643 01ae 0BD0     		beq	.L69
1258:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					dwc_otg_ep_free_desc_chain(dev_if->
 1644              		.loc 2 1258 0
 1645 01b0 BB68     		ldr	r3, [r7, #8]
 1646 01b2 D3F8B420 		ldr	r2, [r3, #180]
1259:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 								   out_desc_addr,
1260:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 								   dev_if->
 1647              		.loc 2 1260 0
 1648 01b6 BB68     		ldr	r3, [r7, #8]
1258:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					dwc_otg_ep_free_desc_chain(dev_if->
 1649              		.loc 2 1258 0
 1650 01b8 D3F8B030 		ldr	r3, [r3, #176]
 1651 01bc 1046     		mov	r0, r2
 1652 01be 1946     		mov	r1, r3
 1653 01c0 4FF00102 		mov	r2, #1
 1654 01c4 FFF7FEFF 		bl	dwc_otg_ep_free_desc_chain
 1655              	.L69:
1261:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 								   dma_out_desc_addr,
1262:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 								   1);
1263:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				if (dev_if->in_desc_addr)
 1656              		.loc 2 1263 0
 1657 01c8 BB68     		ldr	r3, [r7, #8]
 1658 01ca D3F8AC30 		ldr	r3, [r3, #172]
 1659 01ce 002B     		cmp	r3, #0
 1660 01d0 0BD0     		beq	.L70
1264:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					dwc_otg_ep_free_desc_chain(dev_if->
 1661              		.loc 2 1264 0
 1662 01d2 BB68     		ldr	r3, [r7, #8]
 1663 01d4 D3F8AC20 		ldr	r2, [r3, #172]
1265:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 								   in_desc_addr,
1266:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 								   dev_if->
 1664              		.loc 2 1266 0
 1665 01d8 BB68     		ldr	r3, [r7, #8]
1264:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					dwc_otg_ep_free_desc_chain(dev_if->
 1666              		.loc 2 1264 0
 1667 01da D3F8A830 		ldr	r3, [r3, #168]
 1668 01de 1046     		mov	r0, r2
 1669 01e0 1946     		mov	r1, r3
 1670 01e2 4FF00102 		mov	r2, #1
 1671 01e6 FFF7FEFF 		bl	dwc_otg_ep_free_desc_chain
 1672              	.L70:
1267:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 								   dma_in_desc_addr,
1268:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 								   1);
1269:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				if (dev_if->setup_desc_addr[1])
 1673              		.loc 2 1269 0
 1674 01ea BB68     		ldr	r3, [r7, #8]
 1675 01ec D3F89C30 		ldr	r3, [r3, #156]
 1676 01f0 002B     		cmp	r3, #0
 1677 01f2 0BD0     		beq	.L71
1270:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					dwc_otg_ep_free_desc_chain(dev_if->
 1678              		.loc 2 1270 0
 1679 01f4 BB68     		ldr	r3, [r7, #8]
 1680 01f6 D3F89C20 		ldr	r2, [r3, #156]
1271:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 								   setup_desc_addr
1272:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 								   [1],
1273:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 								   dev_if->
 1681              		.loc 2 1273 0
 1682 01fa BB68     		ldr	r3, [r7, #8]
1270:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					dwc_otg_ep_free_desc_chain(dev_if->
 1683              		.loc 2 1270 0
 1684 01fc D3F89430 		ldr	r3, [r3, #148]
 1685 0200 1046     		mov	r0, r2
 1686 0202 1946     		mov	r1, r3
 1687 0204 4FF00102 		mov	r2, #1
 1688 0208 FFF7FEFF 		bl	dwc_otg_ep_free_desc_chain
 1689              	.L71:
1274:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 								   dma_setup_desc_addr
1275:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 								   [1], 1);
1276:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				if (dev_if->setup_desc_addr[0])
 1690              		.loc 2 1276 0
 1691 020c BB68     		ldr	r3, [r7, #8]
 1692 020e D3F89830 		ldr	r3, [r3, #152]
 1693 0212 002B     		cmp	r3, #0
 1694 0214 0BD0     		beq	.L72
1277:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					dwc_otg_ep_free_desc_chain(dev_if->
 1695              		.loc 2 1277 0
 1696 0216 BB68     		ldr	r3, [r7, #8]
 1697 0218 D3F89820 		ldr	r2, [r3, #152]
1278:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 								   setup_desc_addr
1279:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 								   [0],
1280:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 								   dev_if->
 1698              		.loc 2 1280 0
 1699 021c BB68     		ldr	r3, [r7, #8]
1277:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					dwc_otg_ep_free_desc_chain(dev_if->
 1700              		.loc 2 1277 0
 1701 021e D3F89030 		ldr	r3, [r3, #144]
 1702 0222 1046     		mov	r0, r2
 1703 0224 1946     		mov	r1, r3
 1704 0226 4FF00102 		mov	r2, #1
 1705 022a FFF7FEFF 		bl	dwc_otg_ep_free_desc_chain
 1706              	.L72:
1281:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 								   dma_setup_desc_addr
1282:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 								   [0], 1);
1283:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1284:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				DWC_DMA_FREE(sizeof(*pcd->setup_pkt) * 5,
 1707              		.loc 2 1284 0
 1708 022e FB68     		ldr	r3, [r7, #12]
 1709 0230 5A69     		ldr	r2, [r3, #20]
 1710 0232 FB68     		ldr	r3, [r7, #12]
 1711 0234 9B69     		ldr	r3, [r3, #24]
 1712 0236 4FF00000 		mov	r0, #0
 1713 023a 4FF02801 		mov	r1, #40
 1714 023e FFF7FEFF 		bl	__DWC_DMA_FREE
1285:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					     pcd->setup_pkt,
1286:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					     pcd->setup_pkt_dma_handle);
1287:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				DWC_DMA_FREE(sizeof(*pcd->status_buf),
 1715              		.loc 2 1287 0
 1716 0242 FB68     		ldr	r3, [r7, #12]
 1717 0244 DA69     		ldr	r2, [r3, #28]
 1718 0246 FB68     		ldr	r3, [r7, #12]
 1719 0248 1B6A     		ldr	r3, [r3, #32]
 1720 024a 4FF00000 		mov	r0, #0
 1721 024e 4FF00201 		mov	r1, #2
 1722 0252 FFF7FEFF 		bl	__DWC_DMA_FREE
1288:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					     pcd->status_buf,
1289:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					     pcd->status_buf_dma_handle);
1290:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1291:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				DWC_FREE(pcd);
 1723              		.loc 2 1291 0
 1724 0256 4FF00000 		mov	r0, #0
 1725 025a F968     		ldr	r1, [r7, #12]
 1726 025c FFF7FEFF 		bl	__DWC_FREE
1292:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1293:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				return NULL;
 1727              		.loc 2 1293 0
 1728 0260 4FF00003 		mov	r3, #0
 1729 0264 60E0     		b	.L61
 1730              	.L64:
1294:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			}
1295:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
1296:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	} else {
1297:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		pcd->setup_pkt = DWC_ALLOC(sizeof(*pcd->setup_pkt) * 5);
 1731              		.loc 2 1297 0
 1732 0266 4FF00000 		mov	r0, #0
 1733 026a 4FF02801 		mov	r1, #40
 1734 026e FFF7FEFF 		bl	__DWC_ALLOC
 1735 0272 0246     		mov	r2, r0
 1736 0274 FB68     		ldr	r3, [r7, #12]
 1737 0276 5A61     		str	r2, [r3, #20]
1298:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (pcd->setup_pkt == NULL) {
 1738              		.loc 2 1298 0
 1739 0278 FB68     		ldr	r3, [r7, #12]
 1740 027a 5B69     		ldr	r3, [r3, #20]
 1741 027c 002B     		cmp	r3, #0
 1742 027e 07D1     		bne	.L73
1299:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_FREE(pcd);
 1743              		.loc 2 1299 0
 1744 0280 4FF00000 		mov	r0, #0
 1745 0284 F968     		ldr	r1, [r7, #12]
 1746 0286 FFF7FEFF 		bl	__DWC_FREE
1300:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			return NULL;
 1747              		.loc 2 1300 0
 1748 028a 4FF00003 		mov	r3, #0
 1749 028e 4BE0     		b	.L61
 1750              	.L73:
1301:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
1302:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1303:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		pcd->status_buf = DWC_ALLOC(sizeof(uint16_t));
 1751              		.loc 2 1303 0
 1752 0290 4FF00000 		mov	r0, #0
 1753 0294 4FF00201 		mov	r1, #2
 1754 0298 FFF7FEFF 		bl	__DWC_ALLOC
 1755 029c 0246     		mov	r2, r0
 1756 029e FB68     		ldr	r3, [r7, #12]
 1757 02a0 DA61     		str	r2, [r3, #28]
1304:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (pcd->status_buf == NULL) {
 1758              		.loc 2 1304 0
 1759 02a2 FB68     		ldr	r3, [r7, #12]
 1760 02a4 DB69     		ldr	r3, [r3, #28]
 1761 02a6 002B     		cmp	r3, #0
 1762 02a8 0ED1     		bne	.L67
1305:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_FREE(pcd->setup_pkt);
 1763              		.loc 2 1305 0
 1764 02aa FB68     		ldr	r3, [r7, #12]
 1765 02ac 5B69     		ldr	r3, [r3, #20]
 1766 02ae 4FF00000 		mov	r0, #0
 1767 02b2 1946     		mov	r1, r3
 1768 02b4 FFF7FEFF 		bl	__DWC_FREE
1306:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_FREE(pcd);
 1769              		.loc 2 1306 0
 1770 02b8 4FF00000 		mov	r0, #0
 1771 02bc F968     		ldr	r1, [r7, #12]
 1772 02be FFF7FEFF 		bl	__DWC_FREE
1307:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			return NULL;
 1773              		.loc 2 1307 0
 1774 02c2 4FF00003 		mov	r3, #0
 1775 02c6 2FE0     		b	.L61
 1776              	.L67:
1308:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
1309:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1310:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1311:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_pcd_reinit(pcd);
 1777              		.loc 2 1311 0
 1778 02c8 F868     		ldr	r0, [r7, #12]
 1779 02ca FFF7FEFF 		bl	dwc_otg_pcd_reinit
1312:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1313:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* Allocate the cfi object for the PCD */
1314:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #ifdef DWC_UTE_CFI
1315:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pcd->cfi = DWC_ALLOC(sizeof(cfiobject_t));
1316:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (NULL == pcd->cfi)
1317:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		goto fail;
1318:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (init_cfi(pcd->cfi)) {
1319:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		CFI_INFO("%s: Failed to init the CFI object\n", __func__);
1320:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		goto fail;
1321:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1322:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #endif
1323:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1324:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* Initialize tasklets */
1325:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pcd->start_xfer_tasklet = DWC_TASK_ALLOC("xfer_tasklet",
 1780              		.loc 2 1325 0
 1781 02ce 40F20000 		movw	r0, #:lower16:.LC0
 1782 02d2 C0F20000 		movt	r0, #:upper16:.LC0
 1783 02d6 40F20001 		movw	r1, #:lower16:start_xfer_tasklet_func
 1784 02da C0F20001 		movt	r1, #:upper16:start_xfer_tasklet_func
 1785 02de FA68     		ldr	r2, [r7, #12]
 1786 02e0 FFF7FEFF 		bl	DWC_TASK_ALLOC
 1787 02e4 0246     		mov	r2, r0
 1788 02e6 FB68     		ldr	r3, [r7, #12]
 1789 02e8 C3F82824 		str	r2, [r3, #1064]
1326:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						 start_xfer_tasklet_func, pcd);
1327:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pcd->test_mode_tasklet = DWC_TASK_ALLOC("test_mode_tasklet",
 1790              		.loc 2 1327 0
 1791 02ec 40F20000 		movw	r0, #:lower16:.LC1
 1792 02f0 C0F20000 		movt	r0, #:upper16:.LC1
 1793 02f4 40F20001 		movw	r1, #:lower16:do_test_mode
 1794 02f8 C0F20001 		movt	r1, #:upper16:do_test_mode
 1795 02fc FA68     		ldr	r2, [r7, #12]
 1796 02fe FFF7FEFF 		bl	DWC_TASK_ALLOC
 1797 0302 0246     		mov	r2, r0
 1798 0304 FB68     		ldr	r3, [r7, #12]
 1799 0306 C3F82424 		str	r2, [r3, #1060]
1328:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						do_test_mode, pcd);
1329:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1330:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* Initialize SRP timer */
1331:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	core_if->srp_timer = DWC_TIMER_ALLOC("SRP TIMER", srp_timeout, core_if);
 1800              		.loc 2 1331 0
 1801 030a 40F20000 		movw	r0, #:lower16:.LC2
 1802 030e C0F20000 		movt	r0, #:upper16:.LC2
 1803 0312 40F20001 		movw	r1, #:lower16:srp_timeout
 1804 0316 C0F20001 		movt	r1, #:upper16:srp_timeout
 1805 031a 7A68     		ldr	r2, [r7, #4]
 1806 031c FFF7FEFF 		bl	DWC_TIMER_ALLOC
 1807 0320 0246     		mov	r2, r0
 1808 0322 7B68     		ldr	r3, [r7, #4]
 1809 0324 9A61     		str	r2, [r3, #24]
1332:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1333:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return pcd;
 1810              		.loc 2 1333 0
 1811 0326 FB68     		ldr	r3, [r7, #12]
 1812              	.L61:
1334:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #ifdef DWC_UTE_CFI
1335:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** fail:
1336:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #endif
1337:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (pcd->setup_pkt)
1338:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_FREE(pcd->setup_pkt);
1339:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (pcd->status_buf)
1340:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_FREE(pcd->status_buf);
1341:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #ifdef DWC_UTE_CFI
1342:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (pcd->cfi)
1343:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_FREE(pcd->cfi);
1344:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #endif
1345:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (pcd)
1346:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_FREE(pcd);
1347:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return NULL;
1348:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1349:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 1813              		.loc 2 1349 0
 1814 0328 1846     		mov	r0, r3
 1815 032a 07F11007 		add	r7, r7, #16
 1816 032e BD46     		mov	sp, r7
 1817 0330 80BD     		pop	{r7, pc}
 1818              		.cfi_endproc
 1819              	.LFE34:
 1821 0332 00BF     		.section	.text.dwc_otg_pcd_remove,"ax",%progbits
 1822              		.align	2
 1823              		.global	dwc_otg_pcd_remove
 1824              		.thumb
 1825              		.thumb_func
 1827              	dwc_otg_pcd_remove:
 1828              	.LFB35:
1350:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1351:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
1352:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * Remove PCD specific data
1353:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
1354:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** void dwc_otg_pcd_remove(dwc_otg_pcd_t * pcd)
1355:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 1829              		.loc 2 1355 0
 1830              		.cfi_startproc
 1831              		@ args = 0, pretend = 0, frame = 16
 1832              		@ frame_needed = 1, uses_anonymous_args = 0
 1833 0000 80B5     		push	{r7, lr}
 1834              	.LCFI48:
 1835              		.cfi_def_cfa_offset 8
 1836              		.cfi_offset 7, -8
 1837              		.cfi_offset 14, -4
 1838 0002 84B0     		sub	sp, sp, #16
 1839              	.LCFI49:
 1840              		.cfi_def_cfa_offset 24
 1841 0004 00AF     		add	r7, sp, #0
 1842              	.LCFI50:
 1843              		.cfi_def_cfa_register 7
 1844 0006 7860     		str	r0, [r7, #4]
1356:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_dev_if_t *dev_if = GET_CORE_IF(pcd)->dev_if;
 1845              		.loc 2 1356 0
 1846 0008 7B68     		ldr	r3, [r7, #4]
 1847 000a 9B68     		ldr	r3, [r3, #8]
 1848 000c 9B68     		ldr	r3, [r3, #8]
 1849 000e FB60     		str	r3, [r7, #12]
1357:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1358:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (GET_CORE_IF(pcd)->dma_enable) {
 1850              		.loc 2 1358 0
 1851 0010 7B68     		ldr	r3, [r7, #4]
 1852 0012 9B68     		ldr	r3, [r3, #8]
 1853 0014 93F84630 		ldrb	r3, [r3, #70]	@ zero_extendqisi2
 1854 0018 002B     		cmp	r3, #0
 1855 001a 4AD0     		beq	.L75
1359:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_DMA_FREE(sizeof(*pcd->setup_pkt) * 5, pcd->setup_pkt,
 1856              		.loc 2 1359 0
 1857 001c 7B68     		ldr	r3, [r7, #4]
 1858 001e 5A69     		ldr	r2, [r3, #20]
 1859 0020 7B68     		ldr	r3, [r7, #4]
 1860 0022 9B69     		ldr	r3, [r3, #24]
 1861 0024 4FF00000 		mov	r0, #0
 1862 0028 4FF02801 		mov	r1, #40
 1863 002c FFF7FEFF 		bl	__DWC_DMA_FREE
1360:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			     pcd->setup_pkt_dma_handle);
1361:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_DMA_FREE(sizeof(uint16_t), pcd->status_buf,
 1864              		.loc 2 1361 0
 1865 0030 7B68     		ldr	r3, [r7, #4]
 1866 0032 DA69     		ldr	r2, [r3, #28]
 1867 0034 7B68     		ldr	r3, [r7, #4]
 1868 0036 1B6A     		ldr	r3, [r3, #32]
 1869 0038 4FF00000 		mov	r0, #0
 1870 003c 4FF00201 		mov	r1, #2
 1871 0040 FFF7FEFF 		bl	__DWC_DMA_FREE
1362:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			     pcd->status_buf_dma_handle);
1363:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (GET_CORE_IF(pcd)->dma_desc_enable) {
 1872              		.loc 2 1363 0
 1873 0044 7B68     		ldr	r3, [r7, #4]
 1874 0046 9B68     		ldr	r3, [r3, #8]
 1875 0048 93F84730 		ldrb	r3, [r3, #71]	@ zero_extendqisi2
 1876 004c 002B     		cmp	r3, #0
 1877 004e 3ED0     		beq	.L76
1364:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dwc_otg_ep_free_desc_chain(dev_if->setup_desc_addr[0],
 1878              		.loc 2 1364 0
 1879 0050 FB68     		ldr	r3, [r7, #12]
 1880 0052 D3F89820 		ldr	r2, [r3, #152]
1365:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						   dev_if->dma_setup_desc_addr
 1881              		.loc 2 1365 0
 1882 0056 FB68     		ldr	r3, [r7, #12]
1364:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dwc_otg_ep_free_desc_chain(dev_if->setup_desc_addr[0],
 1883              		.loc 2 1364 0
 1884 0058 D3F89030 		ldr	r3, [r3, #144]
 1885 005c 1046     		mov	r0, r2
 1886 005e 1946     		mov	r1, r3
 1887 0060 4FF00102 		mov	r2, #1
 1888 0064 FFF7FEFF 		bl	dwc_otg_ep_free_desc_chain
1366:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						   [0], 1);
1367:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dwc_otg_ep_free_desc_chain(dev_if->setup_desc_addr[1],
 1889              		.loc 2 1367 0
 1890 0068 FB68     		ldr	r3, [r7, #12]
 1891 006a D3F89C20 		ldr	r2, [r3, #156]
1368:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						   dev_if->dma_setup_desc_addr
 1892              		.loc 2 1368 0
 1893 006e FB68     		ldr	r3, [r7, #12]
1367:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dwc_otg_ep_free_desc_chain(dev_if->setup_desc_addr[1],
 1894              		.loc 2 1367 0
 1895 0070 D3F89430 		ldr	r3, [r3, #148]
 1896 0074 1046     		mov	r0, r2
 1897 0076 1946     		mov	r1, r3
 1898 0078 4FF00102 		mov	r2, #1
 1899 007c FFF7FEFF 		bl	dwc_otg_ep_free_desc_chain
1369:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						   [1], 1);
1370:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dwc_otg_ep_free_desc_chain(dev_if->in_desc_addr,
 1900              		.loc 2 1370 0
 1901 0080 FB68     		ldr	r3, [r7, #12]
 1902 0082 D3F8AC20 		ldr	r2, [r3, #172]
1371:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						   dev_if->dma_in_desc_addr, 1);
 1903              		.loc 2 1371 0
 1904 0086 FB68     		ldr	r3, [r7, #12]
1370:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dwc_otg_ep_free_desc_chain(dev_if->in_desc_addr,
 1905              		.loc 2 1370 0
 1906 0088 D3F8A830 		ldr	r3, [r3, #168]
 1907 008c 1046     		mov	r0, r2
 1908 008e 1946     		mov	r1, r3
 1909 0090 4FF00102 		mov	r2, #1
 1910 0094 FFF7FEFF 		bl	dwc_otg_ep_free_desc_chain
1372:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dwc_otg_ep_free_desc_chain(dev_if->out_desc_addr,
 1911              		.loc 2 1372 0
 1912 0098 FB68     		ldr	r3, [r7, #12]
 1913 009a D3F8B420 		ldr	r2, [r3, #180]
1373:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						   dev_if->dma_out_desc_addr,
 1914              		.loc 2 1373 0
 1915 009e FB68     		ldr	r3, [r7, #12]
1372:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dwc_otg_ep_free_desc_chain(dev_if->out_desc_addr,
 1916              		.loc 2 1372 0
 1917 00a0 D3F8B030 		ldr	r3, [r3, #176]
 1918 00a4 1046     		mov	r0, r2
 1919 00a6 1946     		mov	r1, r3
 1920 00a8 4FF00102 		mov	r2, #1
 1921 00ac FFF7FEFF 		bl	dwc_otg_ep_free_desc_chain
 1922 00b0 0DE0     		b	.L76
 1923              	.L75:
1374:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						   1);
1375:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
1376:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	} else {
1377:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_FREE(pcd->setup_pkt);
 1924              		.loc 2 1377 0
 1925 00b2 7B68     		ldr	r3, [r7, #4]
 1926 00b4 5B69     		ldr	r3, [r3, #20]
 1927 00b6 4FF00000 		mov	r0, #0
 1928 00ba 1946     		mov	r1, r3
 1929 00bc FFF7FEFF 		bl	__DWC_FREE
1378:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_FREE(pcd->status_buf);
 1930              		.loc 2 1378 0
 1931 00c0 7B68     		ldr	r3, [r7, #4]
 1932 00c2 DB69     		ldr	r3, [r3, #28]
 1933 00c4 4FF00000 		mov	r0, #0
 1934 00c8 1946     		mov	r1, r3
 1935 00ca FFF7FEFF 		bl	__DWC_FREE
 1936              	.L76:
1379:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1380:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_SPINLOCK_FREE(pcd->lock);
 1937              		.loc 2 1380 0
 1938 00ce 7B68     		ldr	r3, [r7, #4]
 1939 00d0 D3F82034 		ldr	r3, [r3, #1056]
 1940 00d4 1846     		mov	r0, r3
 1941 00d6 FFF7FEFF 		bl	DWC_SPINLOCK_FREE
1381:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* Set core_if's lock pointer to NULL */
1382:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pcd->core_if->lock = NULL;
 1942              		.loc 2 1382 0
 1943 00da 7B68     		ldr	r3, [r7, #4]
 1944 00dc 9B68     		ldr	r3, [r3, #8]
 1945 00de 4FF00002 		mov	r2, #0
 1946 00e2 C3F8CC20 		str	r2, [r3, #204]
1383:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1384:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_TASK_FREE(pcd->start_xfer_tasklet);
 1947              		.loc 2 1384 0
 1948 00e6 7B68     		ldr	r3, [r7, #4]
 1949 00e8 D3F82834 		ldr	r3, [r3, #1064]
 1950 00ec 1846     		mov	r0, r3
 1951 00ee FFF7FEFF 		bl	DWC_TASK_FREE
1385:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_TASK_FREE(pcd->test_mode_tasklet);
 1952              		.loc 2 1385 0
 1953 00f2 7B68     		ldr	r3, [r7, #4]
 1954 00f4 D3F82434 		ldr	r3, [r3, #1060]
 1955 00f8 1846     		mov	r0, r3
 1956 00fa FFF7FEFF 		bl	DWC_TASK_FREE
1386:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1387:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /* Release the CFI object's dynamic memory */
1388:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #ifdef DWC_UTE_CFI
1389:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (pcd->cfi->ops.release) {
1390:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		pcd->cfi->ops.release(pcd->cfi);
1391:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1392:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #endif
1393:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1394:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_FREE(pcd);
 1957              		.loc 2 1394 0
 1958 00fe 4FF00000 		mov	r0, #0
 1959 0102 7968     		ldr	r1, [r7, #4]
 1960 0104 FFF7FEFF 		bl	__DWC_FREE
1395:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 1961              		.loc 2 1395 0
 1962 0108 07F11007 		add	r7, r7, #16
 1963 010c BD46     		mov	sp, r7
 1964 010e 80BD     		pop	{r7, pc}
 1965              		.cfi_endproc
 1966              	.LFE35:
 1968              		.section	.text.dwc_otg_pcd_is_dualspeed,"ax",%progbits
 1969              		.align	2
 1970              		.global	dwc_otg_pcd_is_dualspeed
 1971              		.thumb
 1972              		.thumb_func
 1974              	dwc_otg_pcd_is_dualspeed:
 1975              	.LFB36:
1396:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1397:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
1398:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * Returns whether registered pcd is dual speed or not
1399:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
1400:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** uint32_t dwc_otg_pcd_is_dualspeed(dwc_otg_pcd_t * pcd)
1401:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 1976              		.loc 2 1401 0
 1977              		.cfi_startproc
 1978              		@ args = 0, pretend = 0, frame = 16
 1979              		@ frame_needed = 1, uses_anonymous_args = 0
 1980              		@ link register save eliminated.
 1981 0000 80B4     		push	{r7}
 1982              	.LCFI51:
 1983              		.cfi_def_cfa_offset 4
 1984              		.cfi_offset 7, -4
 1985 0002 85B0     		sub	sp, sp, #20
 1986              	.LCFI52:
 1987              		.cfi_def_cfa_offset 24
 1988 0004 00AF     		add	r7, sp, #0
 1989              	.LCFI53:
 1990              		.cfi_def_cfa_register 7
 1991 0006 7860     		str	r0, [r7, #4]
1402:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_core_if_t *core_if = GET_CORE_IF(pcd);
 1992              		.loc 2 1402 0
 1993 0008 7B68     		ldr	r3, [r7, #4]
 1994 000a 9B68     		ldr	r3, [r3, #8]
 1995 000c FB60     		str	r3, [r7, #12]
1403:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1404:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if ((core_if->core_params->speed == DWC_SPEED_PARAM_FULL) ||
 1996              		.loc 2 1404 0
 1997 000e FB68     		ldr	r3, [r7, #12]
 1998 0010 1B68     		ldr	r3, [r3, #0]
 1999 0012 5B69     		ldr	r3, [r3, #20]
 2000 0014 012B     		cmp	r3, #1
 2001 0016 15D0     		beq	.L78
1405:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	    ((core_if->hwcfg2.b.hs_phy_type == 2) &&
 2002              		.loc 2 1405 0 discriminator 1
 2003 0018 FB68     		ldr	r3, [r7, #12]
 2004 001a 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 2005 001e 23F03F03 		bic	r3, r3, #63
 2006 0022 DBB2     		uxtb	r3, r3
1404:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if ((core_if->core_params->speed == DWC_SPEED_PARAM_FULL) ||
 2007              		.loc 2 1404 0 discriminator 1
 2008 0024 802B     		cmp	r3, #128
 2009 0026 10D1     		bne	.L79
1406:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	     (core_if->hwcfg2.b.fs_phy_type == 1) &&
 2010              		.loc 2 1406 0
 2011 0028 FB68     		ldr	r3, [r7, #12]
 2012 002a 93F85130 		ldrb	r3, [r3, #81]	@ zero_extendqisi2
 2013 002e 03F00303 		and	r3, r3, #3
 2014 0032 DBB2     		uxtb	r3, r3
1405:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	    ((core_if->hwcfg2.b.hs_phy_type == 2) &&
 2015              		.loc 2 1405 0
 2016 0034 012B     		cmp	r3, #1
 2017 0036 08D1     		bne	.L79
1407:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	     (core_if->core_params->ulpi_fs_ls))) {
 2018              		.loc 2 1407 0
 2019 0038 FB68     		ldr	r3, [r7, #12]
 2020 003a 1B68     		ldr	r3, [r3, #0]
 2021 003c D3F89C30 		ldr	r3, [r3, #156]
1406:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	     (core_if->hwcfg2.b.fs_phy_type == 1) &&
 2022              		.loc 2 1406 0
 2023 0040 002B     		cmp	r3, #0
 2024 0042 02D0     		beq	.L79
 2025              	.L78:
1408:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		return 0;
 2026              		.loc 2 1408 0
 2027 0044 4FF00003 		mov	r3, #0
 2028 0048 01E0     		b	.L80
 2029              	.L79:
1409:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1410:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1411:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return 1;
 2030              		.loc 2 1411 0
 2031 004a 4FF00103 		mov	r3, #1
 2032              	.L80:
1412:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 2033              		.loc 2 1412 0
 2034 004e 1846     		mov	r0, r3
 2035 0050 07F11407 		add	r7, r7, #20
 2036 0054 BD46     		mov	sp, r7
 2037 0056 80BC     		pop	{r7}
 2038 0058 7047     		bx	lr
 2039              		.cfi_endproc
 2040              	.LFE36:
 2042 005a 00BF     		.section	.text.dwc_otg_pcd_is_otg,"ax",%progbits
 2043              		.align	2
 2044              		.global	dwc_otg_pcd_is_otg
 2045              		.thumb
 2046              		.thumb_func
 2048              	dwc_otg_pcd_is_otg:
 2049              	.LFB37:
1413:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1414:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
1415:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * Returns whether registered pcd is OTG capable or not
1416:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
1417:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** uint32_t dwc_otg_pcd_is_otg(dwc_otg_pcd_t * pcd)
1418:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 2050              		.loc 2 1418 0
 2051              		.cfi_startproc
 2052              		@ args = 0, pretend = 0, frame = 16
 2053              		@ frame_needed = 1, uses_anonymous_args = 0
 2054 0000 80B5     		push	{r7, lr}
 2055              	.LCFI54:
 2056              		.cfi_def_cfa_offset 8
 2057              		.cfi_offset 7, -8
 2058              		.cfi_offset 14, -4
 2059 0002 84B0     		sub	sp, sp, #16
 2060              	.LCFI55:
 2061              		.cfi_def_cfa_offset 24
 2062 0004 00AF     		add	r7, sp, #0
 2063              	.LCFI56:
 2064              		.cfi_def_cfa_register 7
 2065 0006 7860     		str	r0, [r7, #4]
1419:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_core_if_t *core_if = GET_CORE_IF(pcd);
 2066              		.loc 2 1419 0
 2067 0008 7B68     		ldr	r3, [r7, #4]
 2068 000a 9B68     		ldr	r3, [r3, #8]
 2069 000c FB60     		str	r3, [r7, #12]
1420:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	gusbcfg_data_t usbcfg = {.d32 = 0 };
 2070              		.loc 2 1420 0
 2071 000e 4FF00003 		mov	r3, #0
 2072 0012 BB60     		str	r3, [r7, #8]
1421:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1422:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	usbcfg.d32 = DWC_READ_REG32(&core_if->core_global_regs->gusbcfg);
 2073              		.loc 2 1422 0
 2074 0014 FB68     		ldr	r3, [r7, #12]
 2075 0016 5B68     		ldr	r3, [r3, #4]
 2076 0018 03F10C03 		add	r3, r3, #12
 2077 001c 1846     		mov	r0, r3
 2078 001e FFF7FEFF 		bl	DWC_READ_REG32
 2079 0022 0346     		mov	r3, r0
 2080 0024 BB60     		str	r3, [r7, #8]
1423:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (!usbcfg.b.srpcap || !usbcfg.b.hnpcap) {
 2081              		.loc 2 1423 0
 2082 0026 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 2083 0028 03F00103 		and	r3, r3, #1
 2084 002c DBB2     		uxtb	r3, r3
 2085 002e 002B     		cmp	r3, #0
 2086 0030 05D0     		beq	.L82
 2087              		.loc 2 1423 0 is_stmt 0 discriminator 1
 2088 0032 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 2089 0034 03F00203 		and	r3, r3, #2
 2090 0038 DBB2     		uxtb	r3, r3
 2091 003a 002B     		cmp	r3, #0
 2092 003c 02D1     		bne	.L83
 2093              	.L82:
1424:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		return 0;
 2094              		.loc 2 1424 0 is_stmt 1
 2095 003e 4FF00003 		mov	r3, #0
 2096 0042 01E0     		b	.L85
 2097              	.L83:
1425:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1426:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1427:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return 1;
 2098              		.loc 2 1427 0
 2099 0044 4FF00103 		mov	r3, #1
 2100              	.L85:
1428:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 2101              		.loc 2 1428 0
 2102 0048 1846     		mov	r0, r3
 2103 004a 07F11007 		add	r7, r7, #16
 2104 004e BD46     		mov	sp, r7
 2105 0050 80BD     		pop	{r7, pc}
 2106              		.cfi_endproc
 2107              	.LFE37:
 2109 0052 00BF     		.section	.text.assign_tx_fifo,"ax",%progbits
 2110              		.align	2
 2111              		.thumb
 2112              		.thumb_func
 2114              	assign_tx_fifo:
 2115              	.LFB38:
1429:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1430:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
1431:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * This function assigns periodic Tx FIFO to an periodic EP
1432:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * in shared Tx FIFO mode
1433:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
1434:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** static uint32_t assign_tx_fifo(dwc_otg_core_if_t * core_if)
1435:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 2116              		.loc 2 1435 0
 2117              		.cfi_startproc
 2118              		@ args = 0, pretend = 0, frame = 16
 2119              		@ frame_needed = 1, uses_anonymous_args = 0
 2120              		@ link register save eliminated.
 2121 0000 80B4     		push	{r7}
 2122              	.LCFI57:
 2123              		.cfi_def_cfa_offset 4
 2124              		.cfi_offset 7, -4
 2125 0002 85B0     		sub	sp, sp, #20
 2126              	.LCFI58:
 2127              		.cfi_def_cfa_offset 24
 2128 0004 00AF     		add	r7, sp, #0
 2129              	.LCFI59:
 2130              		.cfi_def_cfa_register 7
 2131 0006 7860     		str	r0, [r7, #4]
1436:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	uint32_t TxMsk = 1;
 2132              		.loc 2 1436 0
 2133 0008 4FF00103 		mov	r3, #1
 2134 000c FB60     		str	r3, [r7, #12]
1437:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	int i;
1438:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1439:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	for (i = 0; i < core_if->hwcfg4.b.num_in_eps; ++i) {
 2135              		.loc 2 1439 0
 2136 000e 4FF00003 		mov	r3, #0
 2137 0012 BB60     		str	r3, [r7, #8]
 2138 0014 17E0     		b	.L87
 2139              	.L90:
1440:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if ((TxMsk & core_if->tx_msk) == 0) {
 2140              		.loc 2 1440 0
 2141 0016 7B68     		ldr	r3, [r7, #4]
 2142 0018 5A6F     		ldr	r2, [r3, #116]
 2143 001a FB68     		ldr	r3, [r7, #12]
 2144 001c 1340     		ands	r3, r3, r2
 2145 001e 002B     		cmp	r3, #0
 2146 0020 09D1     		bne	.L88
1441:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			core_if->tx_msk |= TxMsk;
 2147              		.loc 2 1441 0
 2148 0022 7B68     		ldr	r3, [r7, #4]
 2149 0024 5A6F     		ldr	r2, [r3, #116]
 2150 0026 FB68     		ldr	r3, [r7, #12]
 2151 0028 1A43     		orrs	r2, r2, r3
 2152 002a 7B68     		ldr	r3, [r7, #4]
 2153 002c 5A67     		str	r2, [r3, #116]
1442:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			return i + 1;
 2154              		.loc 2 1442 0
 2155 002e BB68     		ldr	r3, [r7, #8]
 2156 0030 03F10103 		add	r3, r3, #1
 2157 0034 13E0     		b	.L89
 2158              	.L88:
1443:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
1444:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		TxMsk <<= 1;
 2159              		.loc 2 1444 0
 2160 0036 FB68     		ldr	r3, [r7, #12]
 2161 0038 4FEA4303 		lsl	r3, r3, #1
 2162 003c FB60     		str	r3, [r7, #12]
1439:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	for (i = 0; i < core_if->hwcfg4.b.num_in_eps; ++i) {
 2163              		.loc 2 1439 0
 2164 003e BB68     		ldr	r3, [r7, #8]
 2165 0040 03F10103 		add	r3, r3, #1
 2166 0044 BB60     		str	r3, [r7, #8]
 2167              	.L87:
1439:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	for (i = 0; i < core_if->hwcfg4.b.num_in_eps; ++i) {
 2168              		.loc 2 1439 0 is_stmt 0 discriminator 1
 2169 0046 7B68     		ldr	r3, [r7, #4]
 2170 0048 93F85B30 		ldrb	r3, [r3, #91]
 2171 004c C3F38303 		ubfx	r3, r3, #2, #4
 2172 0050 DBB2     		uxtb	r3, r3
 2173 0052 1A46     		mov	r2, r3
 2174 0054 BB68     		ldr	r3, [r7, #8]
 2175 0056 9A42     		cmp	r2, r3
 2176 0058 DDDC     		bgt	.L90
1445:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1446:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return 0;
 2177              		.loc 2 1446 0 is_stmt 1
 2178 005a 4FF00003 		mov	r3, #0
 2179              	.L89:
1447:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 2180              		.loc 2 1447 0
 2181 005e 1846     		mov	r0, r3
 2182 0060 07F11407 		add	r7, r7, #20
 2183 0064 BD46     		mov	sp, r7
 2184 0066 80BC     		pop	{r7}
 2185 0068 7047     		bx	lr
 2186              		.cfi_endproc
 2187              	.LFE38:
 2189 006a 00BF     		.section	.text.assign_perio_tx_fifo,"ax",%progbits
 2190              		.align	2
 2191              		.thumb
 2192              		.thumb_func
 2194              	assign_perio_tx_fifo:
 2195              	.LFB39:
1448:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1449:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
1450:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * This function assigns periodic Tx FIFO to an periodic EP
1451:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * in shared Tx FIFO mode
1452:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
1453:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** static uint32_t assign_perio_tx_fifo(dwc_otg_core_if_t * core_if)
1454:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 2196              		.loc 2 1454 0
 2197              		.cfi_startproc
 2198              		@ args = 0, pretend = 0, frame = 16
 2199              		@ frame_needed = 1, uses_anonymous_args = 0
 2200              		@ link register save eliminated.
 2201 0000 80B4     		push	{r7}
 2202              	.LCFI60:
 2203              		.cfi_def_cfa_offset 4
 2204              		.cfi_offset 7, -4
 2205 0002 85B0     		sub	sp, sp, #20
 2206              	.LCFI61:
 2207              		.cfi_def_cfa_offset 24
 2208 0004 00AF     		add	r7, sp, #0
 2209              	.LCFI62:
 2210              		.cfi_def_cfa_register 7
 2211 0006 7860     		str	r0, [r7, #4]
1455:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	uint32_t PerTxMsk = 1;
 2212              		.loc 2 1455 0
 2213 0008 4FF00103 		mov	r3, #1
 2214 000c FB60     		str	r3, [r7, #12]
1456:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	int i;
1457:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	for (i = 0; i < core_if->hwcfg4.b.num_dev_perio_in_ep; ++i) {
 2215              		.loc 2 1457 0
 2216 000e 4FF00003 		mov	r3, #0
 2217 0012 BB60     		str	r3, [r7, #8]
 2218 0014 17E0     		b	.L92
 2219              	.L95:
1458:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if ((PerTxMsk & core_if->p_tx_msk) == 0) {
 2220              		.loc 2 1458 0
 2221 0016 7B68     		ldr	r3, [r7, #4]
 2222 0018 1A6F     		ldr	r2, [r3, #112]
 2223 001a FB68     		ldr	r3, [r7, #12]
 2224 001c 1340     		ands	r3, r3, r2
 2225 001e 002B     		cmp	r3, #0
 2226 0020 09D1     		bne	.L93
1459:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			core_if->p_tx_msk |= PerTxMsk;
 2227              		.loc 2 1459 0
 2228 0022 7B68     		ldr	r3, [r7, #4]
 2229 0024 1A6F     		ldr	r2, [r3, #112]
 2230 0026 FB68     		ldr	r3, [r7, #12]
 2231 0028 1A43     		orrs	r2, r2, r3
 2232 002a 7B68     		ldr	r3, [r7, #4]
 2233 002c 1A67     		str	r2, [r3, #112]
1460:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			return i + 1;
 2234              		.loc 2 1460 0
 2235 002e BB68     		ldr	r3, [r7, #8]
 2236 0030 03F10103 		add	r3, r3, #1
 2237 0034 13E0     		b	.L94
 2238              	.L93:
1461:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
1462:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		PerTxMsk <<= 1;
 2239              		.loc 2 1462 0
 2240 0036 FB68     		ldr	r3, [r7, #12]
 2241 0038 4FEA4303 		lsl	r3, r3, #1
 2242 003c FB60     		str	r3, [r7, #12]
1457:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	for (i = 0; i < core_if->hwcfg4.b.num_dev_perio_in_ep; ++i) {
 2243              		.loc 2 1457 0
 2244 003e BB68     		ldr	r3, [r7, #8]
 2245 0040 03F10103 		add	r3, r3, #1
 2246 0044 BB60     		str	r3, [r7, #8]
 2247              	.L92:
1457:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	for (i = 0; i < core_if->hwcfg4.b.num_dev_perio_in_ep; ++i) {
 2248              		.loc 2 1457 0 is_stmt 0 discriminator 1
 2249 0046 7B68     		ldr	r3, [r7, #4]
 2250 0048 93F85830 		ldrb	r3, [r3, #88]
 2251 004c C3F30303 		ubfx	r3, r3, #0, #4
 2252 0050 DBB2     		uxtb	r3, r3
 2253 0052 1A46     		mov	r2, r3
 2254 0054 BB68     		ldr	r3, [r7, #8]
 2255 0056 9A42     		cmp	r2, r3
 2256 0058 DDDC     		bgt	.L95
1463:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1464:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return 0;
 2257              		.loc 2 1464 0 is_stmt 1
 2258 005a 4FF00003 		mov	r3, #0
 2259              	.L94:
1465:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 2260              		.loc 2 1465 0
 2261 005e 1846     		mov	r0, r3
 2262 0060 07F11407 		add	r7, r7, #20
 2263 0064 BD46     		mov	sp, r7
 2264 0066 80BC     		pop	{r7}
 2265 0068 7047     		bx	lr
 2266              		.cfi_endproc
 2267              	.LFE39:
 2269 006a 00BF     		.section	.text.release_perio_tx_fifo,"ax",%progbits
 2270              		.align	2
 2271              		.thumb
 2272              		.thumb_func
 2274              	release_perio_tx_fifo:
 2275              	.LFB40:
1466:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1467:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
1468:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * This function releases periodic Tx FIFO
1469:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * in shared Tx FIFO mode
1470:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
1471:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** static void release_perio_tx_fifo(dwc_otg_core_if_t * core_if,
1472:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				  uint32_t fifo_num)
1473:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 2276              		.loc 2 1473 0
 2277              		.cfi_startproc
 2278              		@ args = 0, pretend = 0, frame = 8
 2279              		@ frame_needed = 1, uses_anonymous_args = 0
 2280              		@ link register save eliminated.
 2281 0000 80B4     		push	{r7}
 2282              	.LCFI63:
 2283              		.cfi_def_cfa_offset 4
 2284              		.cfi_offset 7, -4
 2285 0002 83B0     		sub	sp, sp, #12
 2286              	.LCFI64:
 2287              		.cfi_def_cfa_offset 16
 2288 0004 00AF     		add	r7, sp, #0
 2289              	.LCFI65:
 2290              		.cfi_def_cfa_register 7
 2291 0006 7860     		str	r0, [r7, #4]
 2292 0008 3960     		str	r1, [r7, #0]
1474:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	core_if->p_tx_msk =
1475:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	    (core_if->p_tx_msk & (1 << (fifo_num - 1))) ^ core_if->p_tx_msk;
 2293              		.loc 2 1475 0
 2294 000a 3B68     		ldr	r3, [r7, #0]
 2295 000c 03F1FF33 		add	r3, r3, #-1
 2296 0010 4FF00102 		mov	r2, #1
 2297 0014 02FA03F3 		lsl	r3, r2, r3
 2298 0018 6FEA0302 		mvn	r2, r3
 2299 001c 7B68     		ldr	r3, [r7, #4]
 2300 001e 1B6F     		ldr	r3, [r3, #112]
 2301 0020 1A40     		ands	r2, r2, r3
1474:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	core_if->p_tx_msk =
 2302              		.loc 2 1474 0
 2303 0022 7B68     		ldr	r3, [r7, #4]
 2304 0024 1A67     		str	r2, [r3, #112]
1476:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 2305              		.loc 2 1476 0
 2306 0026 07F10C07 		add	r7, r7, #12
 2307 002a BD46     		mov	sp, r7
 2308 002c 80BC     		pop	{r7}
 2309 002e 7047     		bx	lr
 2310              		.cfi_endproc
 2311              	.LFE40:
 2313              		.section	.text.release_tx_fifo,"ax",%progbits
 2314              		.align	2
 2315              		.thumb
 2316              		.thumb_func
 2318              	release_tx_fifo:
 2319              	.LFB41:
1477:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1478:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
1479:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * This function releases periodic Tx FIFO
1480:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * in shared Tx FIFO mode
1481:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
1482:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** static void release_tx_fifo(dwc_otg_core_if_t * core_if, uint32_t fifo_num)
1483:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 2320              		.loc 2 1483 0
 2321              		.cfi_startproc
 2322              		@ args = 0, pretend = 0, frame = 8
 2323              		@ frame_needed = 1, uses_anonymous_args = 0
 2324              		@ link register save eliminated.
 2325 0000 80B4     		push	{r7}
 2326              	.LCFI66:
 2327              		.cfi_def_cfa_offset 4
 2328              		.cfi_offset 7, -4
 2329 0002 83B0     		sub	sp, sp, #12
 2330              	.LCFI67:
 2331              		.cfi_def_cfa_offset 16
 2332 0004 00AF     		add	r7, sp, #0
 2333              	.LCFI68:
 2334              		.cfi_def_cfa_register 7
 2335 0006 7860     		str	r0, [r7, #4]
 2336 0008 3960     		str	r1, [r7, #0]
1484:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	core_if->tx_msk =
1485:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	    (core_if->tx_msk & (1 << (fifo_num - 1))) ^ core_if->tx_msk;
 2337              		.loc 2 1485 0
 2338 000a 3B68     		ldr	r3, [r7, #0]
 2339 000c 03F1FF33 		add	r3, r3, #-1
 2340 0010 4FF00102 		mov	r2, #1
 2341 0014 02FA03F3 		lsl	r3, r2, r3
 2342 0018 6FEA0302 		mvn	r2, r3
 2343 001c 7B68     		ldr	r3, [r7, #4]
 2344 001e 5B6F     		ldr	r3, [r3, #116]
 2345 0020 1A40     		ands	r2, r2, r3
1484:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	core_if->tx_msk =
 2346              		.loc 2 1484 0
 2347 0022 7B68     		ldr	r3, [r7, #4]
 2348 0024 5A67     		str	r2, [r3, #116]
1486:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 2349              		.loc 2 1486 0
 2350 0026 07F10C07 		add	r7, r7, #12
 2351 002a BD46     		mov	sp, r7
 2352 002c 80BC     		pop	{r7}
 2353 002e 7047     		bx	lr
 2354              		.cfi_endproc
 2355              	.LFE41:
 2357              		.section	.text.dwc_otg_pcd_ep_enable,"ax",%progbits
 2358              		.align	2
 2359              		.global	dwc_otg_pcd_ep_enable
 2360              		.thumb
 2361              		.thumb_func
 2363              	dwc_otg_pcd_ep_enable:
 2364              	.LFB42:
1487:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1488:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
1489:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * This function is being called from gadget 
1490:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * to enable PCD endpoint.
1491:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
1492:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** int dwc_otg_pcd_ep_enable(dwc_otg_pcd_t * pcd,
1493:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			  const uint8_t * ep_desc, void *usb_ep)
1494:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 2365              		.loc 2 1494 0
 2366              		.cfi_startproc
 2367              		@ args = 0, pretend = 0, frame = 64
 2368              		@ frame_needed = 1, uses_anonymous_args = 0
 2369 0000 80B5     		push	{r7, lr}
 2370              	.LCFI69:
 2371              		.cfi_def_cfa_offset 8
 2372              		.cfi_offset 7, -8
 2373              		.cfi_offset 14, -4
 2374 0002 90B0     		sub	sp, sp, #64
 2375              	.LCFI70:
 2376              		.cfi_def_cfa_offset 72
 2377 0004 00AF     		add	r7, sp, #0
 2378              	.LCFI71:
 2379              		.cfi_def_cfa_register 7
 2380 0006 F860     		str	r0, [r7, #12]
 2381 0008 B960     		str	r1, [r7, #8]
 2382 000a 7A60     		str	r2, [r7, #4]
1495:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	int num, dir;
1496:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_pcd_ep_t *ep = NULL;
 2383              		.loc 2 1496 0
 2384 000c 4FF00003 		mov	r3, #0
 2385 0010 FB63     		str	r3, [r7, #60]
1497:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	const usb_endpoint_descriptor_t *desc;
1498:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_irqflags_t flags;
1499:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	fifosize_data_t dptxfsiz = {.d32 = 0 };
 2386              		.loc 2 1499 0
 2387 0012 4FF00003 		mov	r3, #0
 2388 0016 FB61     		str	r3, [r7, #28]
1500:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	gdfifocfg_data_t gdfifocfg = {.d32 = 0 };
 2389              		.loc 2 1500 0
 2390 0018 4FF00003 		mov	r3, #0
 2391 001c BB61     		str	r3, [r7, #24]
1501:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	gdfifocfg_data_t gdfifocfgbase = {.d32 = 0 };
 2392              		.loc 2 1501 0
 2393 001e 4FF00003 		mov	r3, #0
 2394 0022 7B61     		str	r3, [r7, #20]
1502:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	int retval = 0;
 2395              		.loc 2 1502 0
 2396 0024 4FF00003 		mov	r3, #0
 2397 0028 BB63     		str	r3, [r7, #56]
1503:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	int i, epcount;
1504:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1505:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	desc = (const usb_endpoint_descriptor_t *)ep_desc;
 2398              		.loc 2 1505 0
 2399 002a BB68     		ldr	r3, [r7, #8]
 2400 002c 3B63     		str	r3, [r7, #48]
1506:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1507:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (!desc) {
 2401              		.loc 2 1507 0
 2402 002e 3B6B     		ldr	r3, [r7, #48]
 2403 0030 002B     		cmp	r3, #0
 2404 0032 0AD1     		bne	.L99
1508:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		pcd->ep0.priv = usb_ep;
 2405              		.loc 2 1508 0
 2406 0034 FB68     		ldr	r3, [r7, #12]
 2407 0036 7A68     		ldr	r2, [r7, #4]
 2408 0038 5A66     		str	r2, [r3, #100]
1509:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		ep = &pcd->ep0;
 2409              		.loc 2 1509 0
 2410 003a FB68     		ldr	r3, [r7, #12]
 2411 003c 03F12403 		add	r3, r3, #36
 2412 0040 FB63     		str	r3, [r7, #60]
1510:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		retval = -DWC_E_INVALID;
 2413              		.loc 2 1510 0
 2414 0042 6FF47A73 		mvn	r3, #1000
 2415 0046 BB63     		str	r3, [r7, #56]
1511:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		goto out;
 2416              		.loc 2 1511 0
 2417 0048 8BE1     		b	.L100
 2418              	.L99:
1512:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1513:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1514:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	num = UE_GET_ADDR(desc->bEndpointAddress);
 2419              		.loc 2 1514 0
 2420 004a 3B6B     		ldr	r3, [r7, #48]
 2421 004c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 2422 004e 03F00F03 		and	r3, r3, #15
 2423 0052 FB62     		str	r3, [r7, #44]
1515:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dir = UE_GET_DIR(desc->bEndpointAddress);
 2424              		.loc 2 1515 0
 2425 0054 3B6B     		ldr	r3, [r7, #48]
 2426 0056 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 2427 0058 03F08003 		and	r3, r3, #128
 2428 005c BB62     		str	r3, [r7, #40]
1516:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1517:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (!desc->wMaxPacketSize) {
 2429              		.loc 2 1517 0
 2430 005e 3B6B     		ldr	r3, [r7, #48]
 2431 0060 03F10403 		add	r3, r3, #4
 2432 0064 002B     		cmp	r3, #0
 2433 0066 03D1     		bne	.L101
1518:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_WARN("bad maxpacketsize\n");
1519:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		retval = -DWC_E_INVALID;
 2434              		.loc 2 1519 0
 2435 0068 6FF47A73 		mvn	r3, #1000
 2436 006c BB63     		str	r3, [r7, #56]
1520:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		goto out;
 2437              		.loc 2 1520 0
 2438 006e 78E1     		b	.L100
 2439              	.L101:
1521:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1522:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1523:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (dir == UE_DIR_IN) {
 2440              		.loc 2 1523 0
 2441 0070 BB6A     		ldr	r3, [r7, #40]
 2442 0072 802B     		cmp	r3, #128
 2443 0074 30D1     		bne	.L102
1524:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		epcount = pcd->core_if->dev_if->num_in_eps;
 2444              		.loc 2 1524 0
 2445 0076 FB68     		ldr	r3, [r7, #12]
 2446 0078 9B68     		ldr	r3, [r3, #8]
 2447 007a 9B68     		ldr	r3, [r3, #8]
 2448 007c 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 2449 0080 7B62     		str	r3, [r7, #36]
1525:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		for (i = 0; i < epcount; i++) {
 2450              		.loc 2 1525 0
 2451 0082 4FF00003 		mov	r3, #0
 2452 0086 7B63     		str	r3, [r7, #52]
 2453 0088 21E0     		b	.L103
 2454              	.L106:
1526:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			if (num == pcd->in_ep[i].dwc_ep.num) {
 2455              		.loc 2 1526 0
 2456 008a F968     		ldr	r1, [r7, #12]
 2457 008c 7A6B     		ldr	r2, [r7, #52]
 2458 008e 1346     		mov	r3, r2
 2459 0090 4FEA0313 		lsl	r3, r3, #4
 2460 0094 9B18     		adds	r3, r3, r2
 2461 0096 4FEA8303 		lsl	r3, r3, #2
 2462 009a CB18     		adds	r3, r1, r3
 2463 009c 03F17803 		add	r3, r3, #120
 2464 00a0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2465 00a2 1A46     		mov	r2, r3
 2466 00a4 FB6A     		ldr	r3, [r7, #44]
 2467 00a6 9A42     		cmp	r2, r3
 2468 00a8 0DD1     		bne	.L104
1527:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				ep = &pcd->in_ep[i];
 2469              		.loc 2 1527 0
 2470 00aa 7A6B     		ldr	r2, [r7, #52]
 2471 00ac 1346     		mov	r3, r2
 2472 00ae 4FEA0313 		lsl	r3, r3, #4
 2473 00b2 9B18     		adds	r3, r3, r2
 2474 00b4 4FEA8303 		lsl	r3, r3, #2
 2475 00b8 03F16803 		add	r3, r3, #104
 2476 00bc FA68     		ldr	r2, [r7, #12]
 2477 00be D318     		adds	r3, r2, r3
 2478 00c0 FB63     		str	r3, [r7, #60]
1528:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				break;
 2479              		.loc 2 1528 0
 2480 00c2 00BF     		nop
 2481 00c4 39E0     		b	.L107
 2482              	.L104:
1525:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		for (i = 0; i < epcount; i++) {
 2483              		.loc 2 1525 0
 2484 00c6 7B6B     		ldr	r3, [r7, #52]
 2485 00c8 03F10103 		add	r3, r3, #1
 2486 00cc 7B63     		str	r3, [r7, #52]
 2487              	.L103:
1525:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		for (i = 0; i < epcount; i++) {
 2488              		.loc 2 1525 0 is_stmt 0 discriminator 1
 2489 00ce 7A6B     		ldr	r2, [r7, #52]
 2490 00d0 7B6A     		ldr	r3, [r7, #36]
 2491 00d2 9A42     		cmp	r2, r3
 2492 00d4 D9DB     		blt	.L106
1525:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		for (i = 0; i < epcount; i++) {
 2493              		.loc 2 1525 0
 2494 00d6 30E0     		b	.L107
 2495              	.L102:
1529:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			}
1530:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
1531:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	} else {
1532:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		epcount = pcd->core_if->dev_if->num_out_eps;
 2496              		.loc 2 1532 0 is_stmt 1
 2497 00d8 FB68     		ldr	r3, [r7, #12]
 2498 00da 9B68     		ldr	r3, [r3, #8]
 2499 00dc 9B68     		ldr	r3, [r3, #8]
 2500 00de 93F84630 		ldrb	r3, [r3, #70]	@ zero_extendqisi2
 2501 00e2 7B62     		str	r3, [r7, #36]
1533:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		for (i = 0; i < epcount; i++) {
 2502              		.loc 2 1533 0
 2503 00e4 4FF00003 		mov	r3, #0
 2504 00e8 7B63     		str	r3, [r7, #52]
 2505 00ea 22E0     		b	.L108
 2506              	.L110:
1534:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			if (num == pcd->out_ep[i].dwc_ep.num) {
 2507              		.loc 2 1534 0
 2508 00ec F968     		ldr	r1, [r7, #12]
 2509 00ee 7A6B     		ldr	r2, [r7, #52]
 2510 00f0 1346     		mov	r3, r2
 2511 00f2 4FEA0313 		lsl	r3, r3, #4
 2512 00f6 9B18     		adds	r3, r3, r2
 2513 00f8 4FEA8303 		lsl	r3, r3, #2
 2514 00fc CB18     		adds	r3, r1, r3
 2515 00fe 03F51473 		add	r3, r3, #592
 2516 0102 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2517 0104 1A46     		mov	r2, r3
 2518 0106 FB6A     		ldr	r3, [r7, #44]
 2519 0108 9A42     		cmp	r2, r3
 2520 010a 0ED1     		bne	.L109
1535:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				ep = &pcd->out_ep[i];
 2521              		.loc 2 1535 0
 2522 010c 7A6B     		ldr	r2, [r7, #52]
 2523 010e 1346     		mov	r3, r2
 2524 0110 4FEA0313 		lsl	r3, r3, #4
 2525 0114 9B18     		adds	r3, r3, r2
 2526 0116 4FEA8303 		lsl	r3, r3, #2
 2527 011a 03F51073 		add	r3, r3, #576
 2528 011e FA68     		ldr	r2, [r7, #12]
 2529 0120 D318     		adds	r3, r2, r3
 2530 0122 03F10403 		add	r3, r3, #4
 2531 0126 FB63     		str	r3, [r7, #60]
1536:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				break;
 2532              		.loc 2 1536 0
 2533 0128 07E0     		b	.L107
 2534              	.L109:
1533:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		for (i = 0; i < epcount; i++) {
 2535              		.loc 2 1533 0
 2536 012a 7B6B     		ldr	r3, [r7, #52]
 2537 012c 03F10103 		add	r3, r3, #1
 2538 0130 7B63     		str	r3, [r7, #52]
 2539              	.L108:
1533:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		for (i = 0; i < epcount; i++) {
 2540              		.loc 2 1533 0 is_stmt 0 discriminator 1
 2541 0132 7A6B     		ldr	r2, [r7, #52]
 2542 0134 7B6A     		ldr	r3, [r7, #36]
 2543 0136 9A42     		cmp	r2, r3
 2544 0138 D8DB     		blt	.L110
 2545              	.L107:
1537:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			}
1538:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
1539:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1540:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1541:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (!ep) {
 2546              		.loc 2 1541 0 is_stmt 1
 2547 013a FB6B     		ldr	r3, [r7, #60]
 2548 013c 002B     		cmp	r3, #0
 2549 013e 03D1     		bne	.L111
1542:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_WARN("bad address\n");
1543:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		retval = -DWC_E_INVALID;
 2550              		.loc 2 1543 0
 2551 0140 6FF47A73 		mvn	r3, #1000
 2552 0144 BB63     		str	r3, [r7, #56]
1544:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		goto out;
 2553              		.loc 2 1544 0
 2554 0146 0CE1     		b	.L100
 2555              	.L111:
1545:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1546:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1547:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_SPINLOCK_IRQSAVE(pcd->lock, &flags);
 2556              		.loc 2 1547 0
 2557 0148 FB68     		ldr	r3, [r7, #12]
 2558 014a D3F82024 		ldr	r2, [r3, #1056]
 2559 014e 07F12003 		add	r3, r7, #32
 2560 0152 1046     		mov	r0, r2
 2561 0154 1946     		mov	r1, r3
 2562 0156 FFF7FEFF 		bl	DWC_SPINLOCK_IRQSAVE
1548:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1549:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->desc = desc;
 2563              		.loc 2 1549 0
 2564 015a FB6B     		ldr	r3, [r7, #60]
 2565 015c 3A6B     		ldr	r2, [r7, #48]
 2566 015e 1A60     		str	r2, [r3, #0]
1550:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->priv = usb_ep;
 2567              		.loc 2 1550 0
 2568 0160 FB6B     		ldr	r3, [r7, #60]
 2569 0162 7A68     		ldr	r2, [r7, #4]
 2570 0164 1A64     		str	r2, [r3, #64]
1551:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1552:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/*
1553:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	 * Activate the EP
1554:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	 */
1555:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->stopped = 0;
 2571              		.loc 2 1555 0
 2572 0166 FA6B     		ldr	r2, [r7, #60]
 2573 0168 137B     		ldrb	r3, [r2, #12]
 2574 016a 6FF30003 		bfc	r3, #0, #1
 2575 016e 1373     		strb	r3, [r2, #12]
1556:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1557:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->dwc_ep.is_in = (dir == UE_DIR_IN);
 2576              		.loc 2 1557 0
 2577 0170 BB6A     		ldr	r3, [r7, #40]
 2578 0172 802B     		cmp	r3, #128
 2579 0174 14BF     		ite	ne
 2580 0176 0023     		movne	r3, #0
 2581 0178 0123     		moveq	r3, #1
 2582 017a D9B2     		uxtb	r1, r3
 2583 017c FA6B     		ldr	r2, [r7, #60]
 2584 017e 537C     		ldrb	r3, [r2, #17]
 2585 0180 61F30003 		bfi	r3, r1, #0, #1
 2586 0184 5374     		strb	r3, [r2, #17]
1558:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->dwc_ep.maxpacket = UGETW(desc->wMaxPacketSize);
 2587              		.loc 2 1558 0
 2588 0186 3B6B     		ldr	r3, [r7, #48]
 2589 0188 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2590 018a 1A46     		mov	r2, r3
 2591 018c 3B6B     		ldr	r3, [r7, #48]
 2592 018e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 2593 0190 4FEA0323 		lsl	r3, r3, #8
 2594 0194 9BB2     		uxth	r3, r3
 2595 0196 1343     		orrs	r3, r3, r2
 2596 0198 9BB2     		uxth	r3, r3
 2597 019a 9BB2     		uxth	r3, r3
 2598 019c 4FEA4353 		lsl	r3, r3, #21
 2599 01a0 4FEA5353 		lsr	r3, r3, #21
 2600 01a4 9AB2     		uxth	r2, r3
 2601 01a6 FB6B     		ldr	r3, [r7, #60]
 2602 01a8 02F03F01 		and	r1, r2, #63
 2603 01ac 4FEA8101 		lsl	r1, r1, #2
 2604 01b0 987C     		ldrb	r0, [r3, #18]
 2605 01b2 00F00300 		and	r0, r0, #3
 2606 01b6 0143     		orrs	r1, r1, r0
 2607 01b8 9974     		strb	r1, [r3, #18]
 2608 01ba 4FEA9212 		lsr	r2, r2, #6
 2609 01be 92B2     		uxth	r2, r2
 2610 01c0 02F01F02 		and	r2, r2, #31
 2611 01c4 02F01F02 		and	r2, r2, #31
 2612 01c8 D97C     		ldrb	r1, [r3, #19]
 2613 01ca 21F01F01 		bic	r1, r1, #31
 2614 01ce 0A43     		orrs	r2, r2, r1
 2615 01d0 DA74     		strb	r2, [r3, #19]
1559:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1560:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->dwc_ep.type = desc->bmAttributes & UE_XFERTYPE;
 2616              		.loc 2 1560 0
 2617 01d2 3B6B     		ldr	r3, [r7, #48]
 2618 01d4 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 2619 01d6 03F00303 		and	r3, r3, #3
 2620 01da D9B2     		uxtb	r1, r3
 2621 01dc FA6B     		ldr	r2, [r7, #60]
 2622 01de 537C     		ldrb	r3, [r2, #17]
 2623 01e0 61F38713 		bfi	r3, r1, #6, #2
 2624 01e4 5374     		strb	r3, [r2, #17]
1561:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1562:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (ep->dwc_ep.is_in) {
 2625              		.loc 2 1562 0
 2626 01e6 FB6B     		ldr	r3, [r7, #60]
 2627 01e8 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 2628 01ea 03F00103 		and	r3, r3, #1
 2629 01ee DBB2     		uxtb	r3, r3
 2630 01f0 002B     		cmp	r3, #0
 2631 01f2 6FD0     		beq	.L112
1563:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (!GET_CORE_IF(pcd)->en_multiple_tx_fifo) {
 2632              		.loc 2 1563 0
 2633 01f4 FB68     		ldr	r3, [r7, #12]
 2634 01f6 9B68     		ldr	r3, [r3, #8]
 2635 01f8 93F84A30 		ldrb	r3, [r3, #74]	@ zero_extendqisi2
 2636 01fc 002B     		cmp	r3, #0
 2637 01fe 1BD1     		bne	.L113
1564:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			ep->dwc_ep.tx_fifo_num = 0;
 2638              		.loc 2 1564 0
 2639 0200 FA6B     		ldr	r2, [r7, #60]
 2640 0202 537C     		ldrb	r3, [r2, #17]
 2641 0204 6FF38503 		bfc	r3, #2, #4
 2642 0208 5374     		strb	r3, [r2, #17]
1565:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1566:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			if (ep->dwc_ep.type == UE_ISOCHRONOUS) {
 2643              		.loc 2 1566 0
 2644 020a FB6B     		ldr	r3, [r7, #60]
 2645 020c 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 2646 020e 23F03F03 		bic	r3, r3, #63
 2647 0212 DBB2     		uxtb	r3, r3
 2648 0214 402B     		cmp	r3, #64
 2649 0216 1ED1     		bne	.L114
1567:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				/*
1568:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				 * if ISOC EP then assign a Periodic Tx FIFO.
1569:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				 */
1570:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				ep->dwc_ep.tx_fifo_num =
1571:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				    assign_perio_tx_fifo(GET_CORE_IF(pcd));
 2650              		.loc 2 1571 0
 2651 0218 FB68     		ldr	r3, [r7, #12]
 2652 021a 9B68     		ldr	r3, [r3, #8]
 2653 021c 1846     		mov	r0, r3
 2654 021e FFF7FEFF 		bl	assign_perio_tx_fifo
 2655 0222 0346     		mov	r3, r0
1570:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				ep->dwc_ep.tx_fifo_num =
 2656              		.loc 2 1570 0
 2657 0224 DBB2     		uxtb	r3, r3
 2658 0226 03F00F03 		and	r3, r3, #15
 2659 022a D9B2     		uxtb	r1, r3
 2660 022c FA6B     		ldr	r2, [r7, #60]
 2661 022e 537C     		ldrb	r3, [r2, #17]
 2662 0230 61F38503 		bfi	r3, r1, #2, #4
 2663 0234 5374     		strb	r3, [r2, #17]
 2664 0236 0EE0     		b	.L114
 2665              	.L113:
1572:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			}
1573:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		} else {
1574:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			/*
1575:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			 * if Dedicated FIFOs mode is on then assign a Tx FIFO.
1576:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			 */
1577:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			ep->dwc_ep.tx_fifo_num =
1578:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			    assign_tx_fifo(GET_CORE_IF(pcd));
 2666              		.loc 2 1578 0
 2667 0238 FB68     		ldr	r3, [r7, #12]
 2668 023a 9B68     		ldr	r3, [r3, #8]
 2669 023c 1846     		mov	r0, r3
 2670 023e FFF7FEFF 		bl	assign_tx_fifo
 2671 0242 0346     		mov	r3, r0
1577:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			ep->dwc_ep.tx_fifo_num =
 2672              		.loc 2 1577 0
 2673 0244 DBB2     		uxtb	r3, r3
 2674 0246 03F00F03 		and	r3, r3, #15
 2675 024a D9B2     		uxtb	r1, r3
 2676 024c FA6B     		ldr	r2, [r7, #60]
 2677 024e 537C     		ldrb	r3, [r2, #17]
 2678 0250 61F38503 		bfi	r3, r1, #2, #4
 2679 0254 5374     		strb	r3, [r2, #17]
 2680              	.L114:
1579:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
1580:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1581:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		/* Calculating EP info controller base address */
1582:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (ep->dwc_ep.tx_fifo_num) {
 2681              		.loc 2 1582 0
 2682 0256 FB6B     		ldr	r3, [r7, #60]
 2683 0258 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 2684 025a 03F03C03 		and	r3, r3, #60
 2685 025e DBB2     		uxtb	r3, r3
 2686 0260 002B     		cmp	r3, #0
 2687 0262 37D0     		beq	.L112
1583:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			gdfifocfg.d32 =
1584:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			    DWC_READ_REG32(&GET_CORE_IF(pcd)->core_global_regs->
 2688              		.loc 2 1584 0
 2689 0264 FB68     		ldr	r3, [r7, #12]
 2690 0266 9B68     		ldr	r3, [r3, #8]
 2691 0268 5B68     		ldr	r3, [r3, #4]
 2692 026a 03F15C03 		add	r3, r3, #92
 2693 026e 1846     		mov	r0, r3
 2694 0270 FFF7FEFF 		bl	DWC_READ_REG32
 2695 0274 0346     		mov	r3, r0
1583:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			gdfifocfg.d32 =
 2696              		.loc 2 1583 0
 2697 0276 BB61     		str	r3, [r7, #24]
1585:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					   gdfifocfg);
1586:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			gdfifocfgbase.d32 = gdfifocfg.d32 >> 16;
 2698              		.loc 2 1586 0
 2699 0278 BB69     		ldr	r3, [r7, #24]
 2700 027a 4FEA1343 		lsr	r3, r3, #16
 2701 027e 7B61     		str	r3, [r7, #20]
1587:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dptxfsiz.d32 =
1588:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			    (DWC_READ_REG32
1589:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			     (&GET_CORE_IF(pcd)->
 2702              		.loc 2 1589 0
 2703 0280 FB68     		ldr	r3, [r7, #12]
 2704 0282 9B68     		ldr	r3, [r3, #8]
 2705 0284 5A68     		ldr	r2, [r3, #4]
1590:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			      core_global_regs->dtxfsiz[ep->dwc_ep.
 2706              		.loc 2 1590 0
 2707 0286 FB6B     		ldr	r3, [r7, #60]
 2708 0288 5B7C     		ldrb	r3, [r3, #17]
 2709 028a C3F38303 		ubfx	r3, r3, #2, #4
 2710 028e DBB2     		uxtb	r3, r3
1589:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			     (&GET_CORE_IF(pcd)->
 2711              		.loc 2 1589 0
 2712 0290 03F14003 		add	r3, r3, #64
 2713 0294 4FEA8303 		lsl	r3, r3, #2
 2714 0298 D318     		adds	r3, r2, r3
 2715 029a 03F10403 		add	r3, r3, #4
 2716 029e 1846     		mov	r0, r3
 2717 02a0 FFF7FEFF 		bl	DWC_READ_REG32
 2718 02a4 0346     		mov	r3, r0
1591:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 							tx_fifo_num]) >> 16);
 2719              		.loc 2 1591 0
 2720 02a6 4FEA1343 		lsr	r3, r3, #16
1587:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dptxfsiz.d32 =
 2721              		.loc 2 1587 0
 2722 02aa FB61     		str	r3, [r7, #28]
1592:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			gdfifocfg.b.epinfobase =
1593:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			    gdfifocfgbase.d32 + dptxfsiz.d32;
 2723              		.loc 2 1593 0
 2724 02ac 7B69     		ldr	r3, [r7, #20]
1592:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			gdfifocfg.b.epinfobase =
 2725              		.loc 2 1592 0
 2726 02ae 9AB2     		uxth	r2, r3
 2727              		.loc 2 1593 0
 2728 02b0 FB69     		ldr	r3, [r7, #28]
1592:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			gdfifocfg.b.epinfobase =
 2729              		.loc 2 1592 0
 2730 02b2 9BB2     		uxth	r3, r3
 2731 02b4 D318     		adds	r3, r2, r3
 2732 02b6 9AB2     		uxth	r2, r3
 2733 02b8 BB69     		ldr	r3, [r7, #24]
 2734 02ba 62F31F43 		bfi	r3, r2, #16, #16
 2735 02be BB61     		str	r3, [r7, #24]
1594:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_WRITE_REG32(&GET_CORE_IF(pcd)->core_global_regs->
 2736              		.loc 2 1594 0
 2737 02c0 FB68     		ldr	r3, [r7, #12]
 2738 02c2 9B68     		ldr	r3, [r3, #8]
 2739 02c4 5B68     		ldr	r3, [r3, #4]
 2740 02c6 03F15C02 		add	r2, r3, #92
 2741 02ca BB69     		ldr	r3, [r7, #24]
 2742 02cc 1046     		mov	r0, r2
 2743 02ce 1946     		mov	r1, r3
 2744 02d0 FFF7FEFF 		bl	DWC_WRITE_REG32
 2745              	.L112:
1595:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					gdfifocfg, gdfifocfg.d32);
1596:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
1597:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1598:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* Set initial data PID. */
1599:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (ep->dwc_ep.type == UE_BULK) {
 2746              		.loc 2 1599 0
 2747 02d4 FB6B     		ldr	r3, [r7, #60]
 2748 02d6 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 2749 02d8 23F03F03 		bic	r3, r3, #63
 2750 02dc DBB2     		uxtb	r3, r3
 2751 02de 802B     		cmp	r3, #128
 2752 02e0 04D1     		bne	.L115
1600:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		ep->dwc_ep.data_pid_start = 0;
 2753              		.loc 2 1600 0
 2754 02e2 FA6B     		ldr	r2, [r7, #60]
 2755 02e4 937C     		ldrb	r3, [r2, #18]
 2756 02e6 6FF30003 		bfc	r3, #0, #1
 2757 02ea 9374     		strb	r3, [r2, #18]
 2758              	.L115:
1601:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1602:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1603:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* Alloc DMA Descriptors */
1604:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (GET_CORE_IF(pcd)->dma_desc_enable) {
 2759              		.loc 2 1604 0
 2760 02ec FB68     		ldr	r3, [r7, #12]
 2761 02ee 9B68     		ldr	r3, [r3, #8]
 2762 02f0 93F84730 		ldrb	r3, [r3, #71]	@ zero_extendqisi2
 2763 02f4 002B     		cmp	r3, #0
 2764 02f6 23D0     		beq	.L116
1605:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #ifndef DWC_UTE_PER_IO
1606:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (ep->dwc_ep.type != UE_ISOCHRONOUS) {
 2765              		.loc 2 1606 0
 2766 02f8 FB6B     		ldr	r3, [r7, #60]
 2767 02fa 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 2768 02fc 23F03F03 		bic	r3, r3, #63
 2769 0300 DBB2     		uxtb	r3, r3
 2770 0302 402B     		cmp	r3, #64
 2771 0304 1CD0     		beq	.L116
1607:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #endif
1608:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			ep->dwc_ep.desc_addr =
1609:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			    dwc_otg_ep_alloc_desc_chain(&ep->
 2772              		.loc 2 1609 0
 2773 0306 FB6B     		ldr	r3, [r7, #60]
 2774 0308 03F11C03 		add	r3, r3, #28
 2775 030c 1846     		mov	r0, r3
 2776 030e 4FF00A01 		mov	r1, #10
 2777 0312 FFF7FEFF 		bl	dwc_otg_ep_alloc_desc_chain
 2778 0316 0246     		mov	r2, r0
1608:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			ep->dwc_ep.desc_addr =
 2779              		.loc 2 1608 0
 2780 0318 FB6B     		ldr	r3, [r7, #60]
 2781 031a 1A62     		str	r2, [r3, #32]
1610:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 							dwc_ep.dma_desc_addr,
1611:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 							MAX_DMA_DESC_CNT);
1612:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			if (!ep->dwc_ep.desc_addr) {
 2782              		.loc 2 1612 0
 2783 031c FB6B     		ldr	r3, [r7, #60]
 2784 031e 1B6A     		ldr	r3, [r3, #32]
 2785 0320 002B     		cmp	r3, #0
 2786 0322 0DD1     		bne	.L116
1613:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				DWC_WARN("%s, can't allocate DMA descriptor\n",
1614:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					 __func__);
1615:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				retval = -DWC_E_SHUTDOWN;
 2787              		.loc 2 1615 0
 2788 0324 4FF60E43 		movw	r3, #64526
 2789 0328 CFF6FF73 		movt	r3, 65535
 2790 032c BB63     		str	r3, [r7, #56]
1616:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				DWC_SPINUNLOCK_IRQRESTORE(pcd->lock, flags);
 2791              		.loc 2 1616 0
 2792 032e FB68     		ldr	r3, [r7, #12]
 2793 0330 D3F82024 		ldr	r2, [r3, #1056]
 2794 0334 3B6A     		ldr	r3, [r7, #32]
 2795 0336 1046     		mov	r0, r2
 2796 0338 1946     		mov	r1, r3
 2797 033a FFF7FEFF 		bl	DWC_SPINUNLOCK_IRQRESTORE
1617:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				goto out;
 2798              		.loc 2 1617 0
 2799 033e 10E0     		b	.L100
 2800              	.L116:
1618:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			}
1619:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #ifndef DWC_UTE_PER_IO
1620:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
1621:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #endif
1622:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1623:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1624:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_DEBUGPL(DBG_PCD, "Activate %s: type=%d, mps=%d desc=%p\n",
1625:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    (ep->dwc_ep.is_in ? "IN" : "OUT"),
1626:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    ep->dwc_ep.type, ep->dwc_ep.maxpacket, ep->desc);
1627:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #ifdef DWC_UTE_PER_IO
1628:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->dwc_ep.xiso_bInterval = 1 << (ep->desc->bInterval - 1);
1629:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #endif
1630:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1631:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_ep_activate(GET_CORE_IF(pcd), &ep->dwc_ep);
 2801              		.loc 2 1631 0
 2802 0340 FB68     		ldr	r3, [r7, #12]
 2803 0342 9A68     		ldr	r2, [r3, #8]
 2804 0344 FB6B     		ldr	r3, [r7, #60]
 2805 0346 03F11003 		add	r3, r3, #16
 2806 034a 1046     		mov	r0, r2
 2807 034c 1946     		mov	r1, r3
 2808 034e FFF7FEFF 		bl	dwc_otg_ep_activate
1632:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1633:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #ifdef DWC_UTE_CFI
1634:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (pcd->cfi->ops.ep_enable) {
1635:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		pcd->cfi->ops.ep_enable(pcd->cfi, pcd, ep);
1636:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1637:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #endif
1638:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1639:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_SPINUNLOCK_IRQRESTORE(pcd->lock, flags);
 2809              		.loc 2 1639 0
 2810 0352 FB68     		ldr	r3, [r7, #12]
 2811 0354 D3F82024 		ldr	r2, [r3, #1056]
 2812 0358 3B6A     		ldr	r3, [r7, #32]
 2813 035a 1046     		mov	r0, r2
 2814 035c 1946     		mov	r1, r3
 2815 035e FFF7FEFF 		bl	DWC_SPINUNLOCK_IRQRESTORE
 2816              	.L100:
1640:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1641:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** out:
1642:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return retval;
 2817              		.loc 2 1642 0
 2818 0362 BB6B     		ldr	r3, [r7, #56]
1643:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 2819              		.loc 2 1643 0
 2820 0364 1846     		mov	r0, r3
 2821 0366 07F14007 		add	r7, r7, #64
 2822 036a BD46     		mov	sp, r7
 2823 036c 80BD     		pop	{r7, pc}
 2824              		.cfi_endproc
 2825              	.LFE42:
 2827 036e 00BF     		.section	.text.dwc_otg_pcd_ep_disable,"ax",%progbits
 2828              		.align	2
 2829              		.global	dwc_otg_pcd_ep_disable
 2830              		.thumb
 2831              		.thumb_func
 2833              	dwc_otg_pcd_ep_disable:
 2834              	.LFB43:
1644:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1645:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
1646:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * This function is being called from gadget 
1647:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * to disable PCD endpoint.
1648:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
1649:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** int dwc_otg_pcd_ep_disable(dwc_otg_pcd_t * pcd, void *ep_handle)
1650:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 2835              		.loc 2 1650 0
 2836              		.cfi_startproc
 2837              		@ args = 0, pretend = 0, frame = 40
 2838              		@ frame_needed = 1, uses_anonymous_args = 0
 2839 0000 80B5     		push	{r7, lr}
 2840              	.LCFI72:
 2841              		.cfi_def_cfa_offset 8
 2842              		.cfi_offset 7, -8
 2843              		.cfi_offset 14, -4
 2844 0002 8AB0     		sub	sp, sp, #40
 2845              	.LCFI73:
 2846              		.cfi_def_cfa_offset 48
 2847 0004 00AF     		add	r7, sp, #0
 2848              	.LCFI74:
 2849              		.cfi_def_cfa_register 7
 2850 0006 7860     		str	r0, [r7, #4]
 2851 0008 3960     		str	r1, [r7, #0]
1651:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_pcd_ep_t *ep;
1652:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_irqflags_t flags;
1653:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_dev_dma_desc_t *desc_addr;
1654:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_dma_t dma_desc_addr;
1655:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	gdfifocfg_data_t gdfifocfgbase = {.d32 = 0 };
 2852              		.loc 2 1655 0
 2853 000a 4FF00003 		mov	r3, #0
 2854 000e 7B61     		str	r3, [r7, #20]
1656:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	gdfifocfg_data_t gdfifocfg = {.d32 = 0 };
 2855              		.loc 2 1656 0
 2856 0010 4FF00003 		mov	r3, #0
 2857 0014 3B61     		str	r3, [r7, #16]
1657:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	fifosize_data_t dptxfsiz = {.d32 = 0 };
 2858              		.loc 2 1657 0
 2859 0016 4FF00003 		mov	r3, #0
 2860 001a FB60     		str	r3, [r7, #12]
1658:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1659:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep = get_ep_from_handle(pcd, ep_handle);
 2861              		.loc 2 1659 0
 2862 001c 7868     		ldr	r0, [r7, #4]
 2863 001e 3968     		ldr	r1, [r7, #0]
 2864 0020 FFF7FEFF 		bl	get_ep_from_handle
 2865 0024 7862     		str	r0, [r7, #36]
1660:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1661:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (!ep || !ep->desc) {
 2866              		.loc 2 1661 0
 2867 0026 7B6A     		ldr	r3, [r7, #36]
 2868 0028 002B     		cmp	r3, #0
 2869 002a 03D0     		beq	.L119
 2870              		.loc 2 1661 0 is_stmt 0 discriminator 1
 2871 002c 7B6A     		ldr	r3, [r7, #36]
 2872 002e 1B68     		ldr	r3, [r3, #0]
 2873 0030 002B     		cmp	r3, #0
 2874 0032 02D1     		bne	.L120
 2875              	.L119:
1662:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_DEBUGPL(DBG_PCD, "bad ep address\n");
1663:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		return -DWC_E_INVALID;
 2876              		.loc 2 1663 0 is_stmt 1
 2877 0034 6FF47A73 		mvn	r3, #1000
 2878 0038 A9E0     		b	.L125
 2879              	.L120:
1664:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1665:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1666:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_SPINLOCK_IRQSAVE(pcd->lock, &flags);
 2880              		.loc 2 1666 0
 2881 003a 7B68     		ldr	r3, [r7, #4]
 2882 003c D3F82024 		ldr	r2, [r3, #1056]
 2883 0040 07F11803 		add	r3, r7, #24
 2884 0044 1046     		mov	r0, r2
 2885 0046 1946     		mov	r1, r3
 2886 0048 FFF7FEFF 		bl	DWC_SPINLOCK_IRQSAVE
1667:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1668:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_request_nuke(ep);
 2887              		.loc 2 1668 0
 2888 004c 786A     		ldr	r0, [r7, #36]
 2889 004e FFF7FEFF 		bl	dwc_otg_request_nuke
1669:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1670:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_ep_deactivate(GET_CORE_IF(pcd), &ep->dwc_ep);
 2890              		.loc 2 1670 0
 2891 0052 7B68     		ldr	r3, [r7, #4]
 2892 0054 9A68     		ldr	r2, [r3, #8]
 2893 0056 7B6A     		ldr	r3, [r7, #36]
 2894 0058 03F11003 		add	r3, r3, #16
 2895 005c 1046     		mov	r0, r2
 2896 005e 1946     		mov	r1, r3
 2897 0060 FFF7FEFF 		bl	dwc_otg_ep_deactivate
1671:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->desc = NULL;
 2898              		.loc 2 1671 0
 2899 0064 7B6A     		ldr	r3, [r7, #36]
 2900 0066 4FF00002 		mov	r2, #0
 2901 006a 1A60     		str	r2, [r3, #0]
1672:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->stopped = 1;
 2902              		.loc 2 1672 0
 2903 006c 7A6A     		ldr	r2, [r7, #36]
 2904 006e 137B     		ldrb	r3, [r2, #12]
 2905 0070 43F00103 		orr	r3, r3, #1
 2906 0074 1373     		strb	r3, [r2, #12]
1673:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1674:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	gdfifocfg.d32 =
1675:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	    DWC_READ_REG32(&GET_CORE_IF(pcd)->core_global_regs->gdfifocfg);
 2907              		.loc 2 1675 0
 2908 0076 7B68     		ldr	r3, [r7, #4]
 2909 0078 9B68     		ldr	r3, [r3, #8]
 2910 007a 5B68     		ldr	r3, [r3, #4]
 2911 007c 03F15C03 		add	r3, r3, #92
 2912 0080 1846     		mov	r0, r3
 2913 0082 FFF7FEFF 		bl	DWC_READ_REG32
 2914 0086 0346     		mov	r3, r0
1674:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	gdfifocfg.d32 =
 2915              		.loc 2 1674 0
 2916 0088 3B61     		str	r3, [r7, #16]
1676:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	gdfifocfgbase.d32 = gdfifocfg.d32 >> 16;
 2917              		.loc 2 1676 0
 2918 008a 3B69     		ldr	r3, [r7, #16]
 2919 008c 4FEA1343 		lsr	r3, r3, #16
 2920 0090 7B61     		str	r3, [r7, #20]
1677:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1678:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (ep->dwc_ep.is_in) {
 2921              		.loc 2 1678 0
 2922 0092 7B6A     		ldr	r3, [r7, #36]
 2923 0094 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 2924 0096 03F00103 		and	r3, r3, #1
 2925 009a DBB2     		uxtb	r3, r3
 2926 009c 002B     		cmp	r3, #0
 2927 009e 4AD0     		beq	.L122
1679:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwc_otg_flush_tx_fifo(GET_CORE_IF(pcd), ep->dwc_ep.tx_fifo_num);
 2928              		.loc 2 1679 0
 2929 00a0 7B68     		ldr	r3, [r7, #4]
 2930 00a2 9A68     		ldr	r2, [r3, #8]
 2931 00a4 7B6A     		ldr	r3, [r7, #36]
 2932 00a6 5B7C     		ldrb	r3, [r3, #17]
 2933 00a8 C3F38303 		ubfx	r3, r3, #2, #4
 2934 00ac DBB2     		uxtb	r3, r3
 2935 00ae 1046     		mov	r0, r2
 2936 00b0 1946     		mov	r1, r3
 2937 00b2 FFF7FEFF 		bl	dwc_otg_flush_tx_fifo
1680:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		release_perio_tx_fifo(GET_CORE_IF(pcd), ep->dwc_ep.tx_fifo_num);
 2938              		.loc 2 1680 0
 2939 00b6 7B68     		ldr	r3, [r7, #4]
 2940 00b8 9A68     		ldr	r2, [r3, #8]
 2941 00ba 7B6A     		ldr	r3, [r7, #36]
 2942 00bc 5B7C     		ldrb	r3, [r3, #17]
 2943 00be C3F38303 		ubfx	r3, r3, #2, #4
 2944 00c2 DBB2     		uxtb	r3, r3
 2945 00c4 1046     		mov	r0, r2
 2946 00c6 1946     		mov	r1, r3
 2947 00c8 FFF7FEFF 		bl	release_perio_tx_fifo
1681:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		release_tx_fifo(GET_CORE_IF(pcd), ep->dwc_ep.tx_fifo_num);
 2948              		.loc 2 1681 0
 2949 00cc 7B68     		ldr	r3, [r7, #4]
 2950 00ce 9A68     		ldr	r2, [r3, #8]
 2951 00d0 7B6A     		ldr	r3, [r7, #36]
 2952 00d2 5B7C     		ldrb	r3, [r3, #17]
 2953 00d4 C3F38303 		ubfx	r3, r3, #2, #4
 2954 00d8 DBB2     		uxtb	r3, r3
 2955 00da 1046     		mov	r0, r2
 2956 00dc 1946     		mov	r1, r3
 2957 00de FFF7FEFF 		bl	release_tx_fifo
1682:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		/* Decreasing EPinfo Base Addr */
1683:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dptxfsiz.d32 =
1684:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    (DWC_READ_REG32
1685:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		     (&GET_CORE_IF(pcd)->
 2958              		.loc 2 1685 0
 2959 00e2 7B68     		ldr	r3, [r7, #4]
 2960 00e4 9B68     		ldr	r3, [r3, #8]
 2961 00e6 5A68     		ldr	r2, [r3, #4]
1686:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		      core_global_regs->dtxfsiz[ep->dwc_ep.tx_fifo_num]) >> 16);
 2962              		.loc 2 1686 0
 2963 00e8 7B6A     		ldr	r3, [r7, #36]
 2964 00ea 5B7C     		ldrb	r3, [r3, #17]
 2965 00ec C3F38303 		ubfx	r3, r3, #2, #4
 2966 00f0 DBB2     		uxtb	r3, r3
1685:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		     (&GET_CORE_IF(pcd)->
 2967              		.loc 2 1685 0
 2968 00f2 03F14003 		add	r3, r3, #64
 2969 00f6 4FEA8303 		lsl	r3, r3, #2
 2970 00fa D318     		adds	r3, r2, r3
 2971 00fc 03F10403 		add	r3, r3, #4
 2972 0100 1846     		mov	r0, r3
 2973 0102 FFF7FEFF 		bl	DWC_READ_REG32
 2974 0106 0346     		mov	r3, r0
 2975              		.loc 2 1686 0
 2976 0108 4FEA1343 		lsr	r3, r3, #16
1683:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dptxfsiz.d32 =
 2977              		.loc 2 1683 0
 2978 010c FB60     		str	r3, [r7, #12]
1687:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		gdfifocfg.b.epinfobase = gdfifocfgbase.d32 - dptxfsiz.d32;
 2979              		.loc 2 1687 0
 2980 010e 7B69     		ldr	r3, [r7, #20]
 2981 0110 9AB2     		uxth	r2, r3
 2982 0112 FB68     		ldr	r3, [r7, #12]
 2983 0114 9BB2     		uxth	r3, r3
 2984 0116 D31A     		subs	r3, r2, r3
 2985 0118 9AB2     		uxth	r2, r3
 2986 011a 3B69     		ldr	r3, [r7, #16]
 2987 011c 62F31F43 		bfi	r3, r2, #16, #16
 2988 0120 3B61     		str	r3, [r7, #16]
1688:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_WRITE_REG32(&GET_CORE_IF(pcd)->core_global_regs->gdfifocfg,
 2989              		.loc 2 1688 0
 2990 0122 7B68     		ldr	r3, [r7, #4]
 2991 0124 9B68     		ldr	r3, [r3, #8]
 2992 0126 5B68     		ldr	r3, [r3, #4]
 2993 0128 03F15C02 		add	r2, r3, #92
 2994 012c 3B69     		ldr	r3, [r7, #16]
 2995 012e 1046     		mov	r0, r2
 2996 0130 1946     		mov	r1, r3
 2997 0132 FFF7FEFF 		bl	DWC_WRITE_REG32
 2998              	.L122:
1689:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				gdfifocfg.d32);
1690:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1691:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1692:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* Free DMA Descriptors */
1693:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (GET_CORE_IF(pcd)->dma_desc_enable) {
 2999              		.loc 2 1693 0
 3000 0136 7B68     		ldr	r3, [r7, #4]
 3001 0138 9B68     		ldr	r3, [r3, #8]
 3002 013a 93F84730 		ldrb	r3, [r3, #71]	@ zero_extendqisi2
 3003 013e 002B     		cmp	r3, #0
 3004 0140 1BD0     		beq	.L123
1694:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (ep->dwc_ep.type != UE_ISOCHRONOUS) {
 3005              		.loc 2 1694 0
 3006 0142 7B6A     		ldr	r3, [r7, #36]
 3007 0144 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 3008 0146 23F03F03 		bic	r3, r3, #63
 3009 014a DBB2     		uxtb	r3, r3
 3010 014c 402B     		cmp	r3, #64
 3011 014e 14D0     		beq	.L123
1695:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			desc_addr = ep->dwc_ep.desc_addr;
 3012              		.loc 2 1695 0
 3013 0150 7B6A     		ldr	r3, [r7, #36]
 3014 0152 1B6A     		ldr	r3, [r3, #32]
 3015 0154 3B62     		str	r3, [r7, #32]
1696:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dma_desc_addr = ep->dwc_ep.dma_desc_addr;
 3016              		.loc 2 1696 0
 3017 0156 7B6A     		ldr	r3, [r7, #36]
 3018 0158 DB69     		ldr	r3, [r3, #28]
 3019 015a FB61     		str	r3, [r7, #28]
1697:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1698:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			/* Cannot call dma_free_coherent() with IRQs disabled */
1699:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_SPINUNLOCK_IRQRESTORE(pcd->lock, flags);
 3020              		.loc 2 1699 0
 3021 015c 7B68     		ldr	r3, [r7, #4]
 3022 015e D3F82024 		ldr	r2, [r3, #1056]
 3023 0162 BB69     		ldr	r3, [r7, #24]
 3024 0164 1046     		mov	r0, r2
 3025 0166 1946     		mov	r1, r3
 3026 0168 FFF7FEFF 		bl	DWC_SPINUNLOCK_IRQRESTORE
1700:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dwc_otg_ep_free_desc_chain(desc_addr, dma_desc_addr,
 3027              		.loc 2 1700 0
 3028 016c 386A     		ldr	r0, [r7, #32]
 3029 016e F969     		ldr	r1, [r7, #28]
 3030 0170 4FF00A02 		mov	r2, #10
 3031 0174 FFF7FEFF 		bl	dwc_otg_ep_free_desc_chain
1701:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						   MAX_DMA_DESC_CNT);
1702:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1703:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			goto out_unlocked;
 3032              		.loc 2 1703 0
 3033 0178 07E0     		b	.L124
 3034              	.L123:
1704:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
1705:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1706:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_SPINUNLOCK_IRQRESTORE(pcd->lock, flags);
 3035              		.loc 2 1706 0
 3036 017a 7B68     		ldr	r3, [r7, #4]
 3037 017c D3F82024 		ldr	r2, [r3, #1056]
 3038 0180 BB69     		ldr	r3, [r7, #24]
 3039 0182 1046     		mov	r0, r2
 3040 0184 1946     		mov	r1, r3
 3041 0186 FFF7FEFF 		bl	DWC_SPINUNLOCK_IRQRESTORE
 3042              	.L124:
1707:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1708:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** out_unlocked:
1709:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_DEBUGPL(DBG_PCD, "%d %s disabled\n", ep->dwc_ep.num,
1710:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    ep->dwc_ep.is_in ? "IN" : "OUT");
1711:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return 0;
 3043              		.loc 2 1711 0
 3044 018a 4FF00003 		mov	r3, #0
 3045              	.L125:
1712:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1713:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 3046              		.loc 2 1713 0
 3047 018e 1846     		mov	r0, r3
 3048 0190 07F12807 		add	r7, r7, #40
 3049 0194 BD46     		mov	sp, r7
 3050 0196 80BD     		pop	{r7, pc}
 3051              		.cfi_endproc
 3052              	.LFE43:
 3054              		.section	.text.dwc_otg_pcd_ep_queue,"ax",%progbits
 3055              		.align	2
 3056              		.global	dwc_otg_pcd_ep_queue
 3057              		.thumb
 3058              		.thumb_func
 3060              	dwc_otg_pcd_ep_queue:
 3061              	.LFB44:
1714:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1715:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /******************************************************************************/
1716:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #ifdef DWC_UTE_PER_IO
1717:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1718:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
1719:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * Free the request and its extended parts
1720:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  *
1721:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
1722:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** void dwc_pcd_xiso_ereq_free(dwc_otg_pcd_ep_t * ep, dwc_otg_pcd_request_t * req)
1723:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
1724:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_FREE(req->ext_req.per_io_frame_descs);
1725:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_FREE(req);
1726:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
1727:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1728:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
1729:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * Start the next request in the endpoint's queue.
1730:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  *
1731:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
1732:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** int dwc_otg_pcd_xiso_start_next_request(dwc_otg_pcd_t * pcd,
1733:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					dwc_otg_pcd_ep_t * ep)
1734:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
1735:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	int i;
1736:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_pcd_request_t *req = NULL;
1737:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_ep_t *dwcep = NULL;
1738:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	struct dwc_iso_xreq_port *ereq = NULL;
1739:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	struct dwc_iso_pkt_desc_port *ddesc_iso;
1740:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	uint16_t nat;
1741:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	depctl_data_t diepctl;
1742:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1743:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwcep = &ep->dwc_ep;
1744:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1745:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (dwcep->xiso_active_xfers > 0) {
1746:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #if 0				//Disable this to decrease s/w overhead that is crucial for Isoc transfers
1747:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_WARN("There are currently active transfers for EP%d \
1748:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				(active=%d; queued=%d)", dwcep->num, dwcep->xiso_active_xfers, 
1749:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dwcep->xiso_queued_xfers);
1750:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #endif
1751:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		return 0;
1752:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1753:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1754:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	nat = UGETW(ep->desc->wMaxPacketSize);
1755:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	nat = (nat >> 11) & 0x03;
1756:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1757:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (!DWC_CIRCLEQ_EMPTY(&ep->queue)) {
1758:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		req = DWC_CIRCLEQ_FIRST(&ep->queue);
1759:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		ereq = &req->ext_req;
1760:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		ep->stopped = 0;
1761:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1762:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		/* Get the frame number */
1763:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (dwcep->xiso_frame_num == 0xFFFFFFFF) {
1764:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dwcep->xiso_frame_num =
1765:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			    dwc_otg_get_frame_number(GET_CORE_IF(pcd));
1766:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_DEBUG("FRM_NUM=%d", dwcep->xiso_frame_num);
1767:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
1768:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1769:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		ddesc_iso = ereq->per_io_frame_descs;
1770:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1771:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (dwcep->is_in) {
1772:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			/* Setup DMA Descriptor chain for IN Isoc request */
1773:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			for (i = 0; i < ereq->pio_pkt_count; i++) {
1774:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				//if ((i % (nat + 1)) == 0)
1775:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dwcep->xiso_frame_num = (dwcep->xiso_bInterval +
1776:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 										dwcep->xiso_frame_num) & 0x3FFF;
1777:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dwcep->desc_addr[i].buf =
1778:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				    req->dma + ddesc_iso[i].offset;
1779:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dwcep->desc_addr[i].status.b_iso_in.txbytes =
1780:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				    ddesc_iso[i].length;
1781:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dwcep->desc_addr[i].status.b_iso_in.framenum =
1782:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				    dwcep->xiso_frame_num;
1783:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dwcep->desc_addr[i].status.b_iso_in.bs =
1784:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				    BS_HOST_READY;
1785:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dwcep->desc_addr[i].status.b_iso_in.txsts = 0;
1786:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dwcep->desc_addr[i].status.b_iso_in.sp =
1787:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				    (ddesc_iso[i].length %
1788:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				     dwcep->maxpacket) ? 1 : 0;
1789:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dwcep->desc_addr[i].status.b_iso_in.ioc = 0;
1790:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dwcep->desc_addr[i].status.b_iso_in.pid = nat + 1;
1791:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dwcep->desc_addr[i].status.b_iso_in.l = 0;
1792:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1793:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				/* Process the last descriptor */
1794:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				if (i == ereq->pio_pkt_count - 1) {
1795:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					dwcep->desc_addr[i].status.b_iso_in.ioc = 1;
1796:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					dwcep->desc_addr[i].status.b_iso_in.l = 1;
1797:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				}
1798:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			}
1799:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1800:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			/* Setup and start the transfer for this endpoint */
1801:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dwcep->xiso_active_xfers++;
1802:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_WRITE_REG32(&GET_CORE_IF(pcd)->dev_if->
1803:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					in_ep_regs[dwcep->num]->diepdma,
1804:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					dwcep->dma_desc_addr);
1805:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			diepctl.d32 = 0;
1806:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			diepctl.b.epena = 1;
1807:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			diepctl.b.cnak = 1;
1808:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_MODIFY_REG32(&GET_CORE_IF(pcd)->dev_if->
1809:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					 in_ep_regs[dwcep->num]->diepctl, 0,
1810:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					 diepctl.d32);
1811:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		} else {
1812:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			/* Setup DMA Descriptor chain for OUT Isoc request */
1813:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			for (i = 0; i < ereq->pio_pkt_count; i++) {
1814:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				//if ((i % (nat + 1)) == 0)
1815:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dwcep->xiso_frame_num = (dwcep->xiso_bInterval + 
1816:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 										dwcep->xiso_frame_num) & 0x3FFF;
1817:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dwcep->desc_addr[i].buf =
1818:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				    req->dma + ddesc_iso[i].offset;
1819:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dwcep->desc_addr[i].status.b_iso_out.rxbytes =
1820:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				    ddesc_iso[i].length;
1821:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dwcep->desc_addr[i].status.b_iso_out.framenum =
1822:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				    dwcep->xiso_frame_num;
1823:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dwcep->desc_addr[i].status.b_iso_out.bs =
1824:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				    BS_HOST_READY;
1825:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dwcep->desc_addr[i].status.b_iso_out.rxsts = 0;
1826:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dwcep->desc_addr[i].status.b_iso_out.sp =
1827:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				    (ddesc_iso[i].length %
1828:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				     dwcep->maxpacket) ? 1 : 0;
1829:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dwcep->desc_addr[i].status.b_iso_out.ioc = 0;
1830:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dwcep->desc_addr[i].status.b_iso_out.pid = nat + 1;
1831:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dwcep->desc_addr[i].status.b_iso_out.l = 0;
1832:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				
1833:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				/* Process the last descriptor */
1834:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				if (i == ereq->pio_pkt_count - 1) {
1835:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					dwcep->desc_addr[i].status.b_iso_out.ioc = 1;
1836:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					dwcep->desc_addr[i].status.b_iso_out.l = 1;
1837:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				}			
1838:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			}
1839:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			
1840:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			/* Setup and start the transfer for this endpoint */
1841:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dwcep->xiso_active_xfers++;
1842:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_WRITE_REG32(&GET_CORE_IF(pcd)->dev_if->
1843:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					out_ep_regs[dwcep->num]->doepdma,
1844:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					dwcep->dma_desc_addr);
1845:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			diepctl.d32 = 0;
1846:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			diepctl.b.epena = 1;
1847:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			diepctl.b.cnak = 1;
1848:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_MODIFY_REG32(&GET_CORE_IF(pcd)->dev_if->
1849:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					 out_ep_regs[dwcep->num]->doepctl, 0,
1850:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					 diepctl.d32);
1851:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
1852:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1853:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	} else {
1854:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		ep->stopped = 1;
1855:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1856:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1857:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return 0;
1858:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
1859:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1860:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
1861:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  *	- Remove the request from the queue
1862:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
1863:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** void complete_xiso_ep(dwc_otg_pcd_ep_t * ep)
1864:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
1865:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_pcd_request_t *req = NULL;
1866:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	struct dwc_iso_xreq_port *ereq = NULL;
1867:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	struct dwc_iso_pkt_desc_port *ddesc_iso = NULL;
1868:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_ep_t *dwcep = NULL;
1869:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	int i;
1870:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1871:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	//DWC_DEBUG();
1872:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwcep = &ep->dwc_ep;
1873:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1874:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* Get the first pending request from the queue */
1875:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (!DWC_CIRCLEQ_EMPTY(&ep->queue)) {
1876:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		req = DWC_CIRCLEQ_FIRST(&ep->queue);
1877:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (!req) {
1878:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_PRINTF("complete_ep 0x%p, req = NULL!\n", ep);
1879:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			return;
1880:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
1881:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwcep->xiso_active_xfers--;
1882:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwcep->xiso_queued_xfers--;
1883:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		/* Remove this request from the queue */
1884:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_CIRCLEQ_REMOVE_INIT(&ep->queue, req, queue_entry);
1885:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	} else {
1886:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_PRINTF("complete_ep 0x%p, ep->queue empty!\n", ep);
1887:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		return;
1888:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1889:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1890:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->stopped = 1;
1891:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ereq = &req->ext_req;
1892:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ddesc_iso = ereq->per_io_frame_descs;
1893:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1894:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (dwcep->xiso_active_xfers < 0) {
1895:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_WARN("EP#%d (xiso_active_xfers=%d)", dwcep->num,
1896:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			 dwcep->xiso_active_xfers);
1897:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1898:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1899:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* Fill the Isoc descs of portable extended req from dma descriptors */
1900:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	for (i = 0; i < ereq->pio_pkt_count; i++) {
1901:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (dwcep->is_in) {	/* IN endpoints */
1902:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			ddesc_iso[i].actual_length = ddesc_iso[i].length -
1903:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			    dwcep->desc_addr[i].status.b_iso_in.txbytes;
1904:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			ddesc_iso[i].status =
1905:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			    dwcep->desc_addr[i].status.b_iso_in.txsts;
1906:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		} else {	/* OUT endpoints */
1907:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			ddesc_iso[i].actual_length = ddesc_iso[i].length -
1908:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			    dwcep->desc_addr[i].status.b_iso_out.rxbytes;
1909:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			ddesc_iso[i].status =
1910:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			    dwcep->desc_addr[i].status.b_iso_out.rxsts;
1911:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
1912:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1913:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1914:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_SPINUNLOCK(ep->pcd->lock);
1915:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1916:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* Call the completion function in the non-portable logic */
1917:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->pcd->fops->xisoc_complete(ep->pcd, ep->priv, req->priv, 0,
1918:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				      &req->ext_req);
1919:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1920:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_SPINLOCK(ep->pcd->lock);
1921:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1922:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* Free the request - specific freeing needed for extended request object */
1923:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_pcd_xiso_ereq_free(ep, req);
1924:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1925:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* Start the next request */
1926:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_pcd_xiso_start_next_request(ep->pcd, ep);
1927:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1928:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return;
1929:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
1930:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1931:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
1932:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * Create and initialize the Isoc pkt descriptors of the extended request.
1933:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  *
1934:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
1935:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** static int dwc_otg_pcd_xiso_create_pkt_descs(dwc_otg_pcd_request_t * req,
1936:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					     void *ereq_nonport,
1937:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					     int atomic_alloc)
1938:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
1939:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	struct dwc_iso_xreq_port *ereq = NULL;
1940:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	struct dwc_iso_xreq_port *req_mapped = NULL;
1941:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	struct dwc_iso_pkt_desc_port *ipds = NULL;	/* To be created in this function */
1942:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	uint32_t pkt_count;
1943:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	int i;
1944:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1945:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ereq = &req->ext_req;
1946:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	req_mapped = (struct dwc_iso_xreq_port *)ereq_nonport;
1947:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	pkt_count = req_mapped->pio_pkt_count;
1948:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1949:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* Create the isoc descs */
1950:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (atomic_alloc) {
1951:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		ipds = DWC_ALLOC_ATOMIC(sizeof(*ipds) * pkt_count);
1952:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	} else {
1953:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		ipds = DWC_ALLOC(sizeof(*ipds) * pkt_count);
1954:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1955:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1956:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (!ipds) {
1957:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_ERROR("Failed to allocate isoc descriptors");
1958:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		return -DWC_E_NO_MEMORY;
1959:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1960:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1961:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* Initialize the extended request fields */
1962:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ereq->per_io_frame_descs = ipds;
1963:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ereq->error_count = 0;
1964:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ereq->pio_alloc_pkt_count = pkt_count;
1965:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ereq->pio_pkt_count = pkt_count;
1966:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ereq->tr_sub_flags = req_mapped->tr_sub_flags;
1967:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1968:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* Init the Isoc descriptors */
1969:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	for (i = 0; i < pkt_count; i++) {
1970:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		ipds[i].length = req_mapped->per_io_frame_descs[i].length;
1971:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		ipds[i].offset = req_mapped->per_io_frame_descs[i].offset;
1972:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		ipds[i].status = req_mapped->per_io_frame_descs[i].status;	/* 0 */
1973:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		ipds[i].actual_length =
1974:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    req_mapped->per_io_frame_descs[i].actual_length;
1975:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
1976:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1977:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return 0;
1978:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
1979:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1980:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** static void prn_ext_request(struct dwc_iso_xreq_port *ereq)
1981:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
1982:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	struct dwc_iso_pkt_desc_port *xfd = NULL;
1983:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	int i;
1984:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1985:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_DEBUG("per_io_frame_descs=%p", ereq->per_io_frame_descs);
1986:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_DEBUG("tr_sub_flags=%d", ereq->tr_sub_flags);
1987:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_DEBUG("error_count=%d", ereq->error_count);
1988:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_DEBUG("pio_alloc_pkt_count=%d", ereq->pio_alloc_pkt_count);
1989:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_DEBUG("pio_pkt_count=%d", ereq->pio_pkt_count);
1990:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_DEBUG("res=%d", ereq->res);
1991:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1992:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	for (i = 0; i < ereq->pio_pkt_count; i++) {
1993:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		xfd = &ereq->per_io_frame_descs[0];
1994:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_DEBUG("FD #%d", i);
1995:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
1996:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_DEBUG("xfd->actual_length=%d", xfd->actual_length);
1997:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_DEBUG("xfd->length=%d", xfd->length);
1998:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_DEBUG("xfd->offset=%d", xfd->offset);
1999:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_DEBUG("xfd->status=%d", xfd->status);
2000:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
2001:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
2002:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2003:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
2004:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  *
2005:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
2006:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** int dwc_otg_pcd_xiso_ep_queue(dwc_otg_pcd_t * pcd, void *ep_handle,
2007:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			      uint8_t * buf, dwc_dma_t dma_buf, uint32_t buflen,
2008:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			      int zero, void *req_handle, int atomic_alloc,
2009:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			      void *ereq_nonport)
2010:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
2011:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_pcd_request_t *req = NULL;
2012:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_pcd_ep_t *ep;
2013:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_irqflags_t flags;
2014:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	int res;
2015:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2016:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep = get_ep_from_handle(pcd, ep_handle);
2017:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (!ep) {
2018:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_WARN("bad ep\n");
2019:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		return -DWC_E_INVALID;
2020:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
2021:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2022:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* We support this extension only for DDMA mode */
2023:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (ep->dwc_ep.type == DWC_OTG_EP_TYPE_ISOC)
2024:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (!GET_CORE_IF(pcd)->dma_desc_enable)
2025:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			return -DWC_E_INVALID;
2026:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2027:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* Create a dwc_otg_pcd_request_t object */
2028:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (atomic_alloc) {
2029:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		req = DWC_ALLOC_ATOMIC(sizeof(*req));
2030:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	} else {
2031:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		req = DWC_ALLOC(sizeof(*req));
2032:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
2033:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2034:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (!req) {
2035:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		return -DWC_E_NO_MEMORY;
2036:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
2037:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2038:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* Create the Isoc descs for this request which shall be the exact match
2039:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	 * of the structure sent to us from the non-portable logic */
2040:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	res =
2041:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	    dwc_otg_pcd_xiso_create_pkt_descs(req, ereq_nonport, atomic_alloc);
2042:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (res) {
2043:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_WARN("Failed to init the Isoc descriptors");
2044:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_FREE(req);
2045:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		return res;
2046:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
2047:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2048:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_SPINLOCK_IRQSAVE(pcd->lock, &flags);
2049:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2050:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_CIRCLEQ_INIT_ENTRY(req, queue_entry);
2051:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	req->buf = buf;
2052:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	req->dma = dma_buf;
2053:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	req->length = buflen;
2054:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	req->sent_zlp = zero;
2055:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	req->priv = req_handle;
2056:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2057:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	//DWC_SPINLOCK_IRQSAVE(pcd->lock, &flags);
2058:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->dwc_ep.dma_addr = dma_buf;
2059:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->dwc_ep.start_xfer_buff = buf;
2060:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->dwc_ep.xfer_buff = buf;
2061:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->dwc_ep.xfer_len = 0;
2062:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->dwc_ep.xfer_count = 0;
2063:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->dwc_ep.sent_zlp = 0;
2064:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->dwc_ep.total_len = buflen;
2065:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2066:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* Add this request to the tail */
2067:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_CIRCLEQ_INSERT_TAIL(&ep->queue, req, queue_entry);
2068:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep->dwc_ep.xiso_queued_xfers++;
2069:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2070:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** //DWC_DEBUG("CP_0");
2071:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** //DWC_DEBUG("req->ext_req.tr_sub_flags=%d", req->ext_req.tr_sub_flags);
2072:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** //prn_ext_request((struct dwc_iso_xreq_port *) ereq_nonport);
2073:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** //prn_ext_request(&req->ext_req);
2074:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2075:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	//DWC_SPINUNLOCK_IRQRESTORE(pcd->lock, flags);
2076:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2077:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* If the req->status == ASAP  then check if there is any active transfer
2078:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	 * for this endpoint. If no active transfers, then get the first entry
2079:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	 * from the queue and start that transfer
2080:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	 */
2081:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (req->ext_req.tr_sub_flags == DWC_EREQ_TF_ASAP) {
2082:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		res = dwc_otg_pcd_xiso_start_next_request(pcd, ep);
2083:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (res) {
2084:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_WARN("Failed to start the next Isoc transfer");
2085:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_SPINUNLOCK_IRQRESTORE(pcd->lock, flags);
2086:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_FREE(req);
2087:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			return res;
2088:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
2089:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
2090:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2091:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_SPINUNLOCK_IRQRESTORE(pcd->lock, flags);
2092:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return 0;
2093:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
2094:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2095:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #endif
2096:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /* END ifdef DWC_UTE_PER_IO ***************************************************/
2097:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** int dwc_otg_pcd_ep_queue(dwc_otg_pcd_t * pcd, void *ep_handle,
2098:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			 uint8_t * buf, dwc_dma_t dma_buf, uint32_t buflen,
2099:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			 int zero, void *req_handle, int atomic_alloc)
2100:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 3062              		.loc 2 2100 0
 3063              		.cfi_startproc
 3064              		@ args = 16, pretend = 0, frame = 40
 3065              		@ frame_needed = 1, uses_anonymous_args = 0
 3066 0000 80B5     		push	{r7, lr}
 3067              	.LCFI75:
 3068              		.cfi_def_cfa_offset 8
 3069              		.cfi_offset 7, -8
 3070              		.cfi_offset 14, -4
 3071 0002 8AB0     		sub	sp, sp, #40
 3072              	.LCFI76:
 3073              		.cfi_def_cfa_offset 48
 3074 0004 00AF     		add	r7, sp, #0
 3075              	.LCFI77:
 3076              		.cfi_def_cfa_register 7
 3077 0006 F860     		str	r0, [r7, #12]
 3078 0008 B960     		str	r1, [r7, #8]
 3079 000a 7A60     		str	r2, [r7, #4]
 3080 000c 3B60     		str	r3, [r7, #0]
2101:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_irqflags_t flags;
2102:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_pcd_request_t *req;
2103:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_pcd_ep_t *ep;
2104:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	uint32_t max_transfer;
2105:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2106:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep = get_ep_from_handle(pcd, ep_handle);
 3081              		.loc 2 2106 0
 3082 000e F868     		ldr	r0, [r7, #12]
 3083 0010 B968     		ldr	r1, [r7, #8]
 3084 0012 FFF7FEFF 		bl	get_ep_from_handle
 3085 0016 3862     		str	r0, [r7, #32]
2107:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (!ep || (!ep->desc && ep->dwc_ep.num != 0)) {
 3086              		.loc 2 2107 0
 3087 0018 3B6A     		ldr	r3, [r7, #32]
 3088 001a 002B     		cmp	r3, #0
 3089 001c 07D0     		beq	.L127
 3090              		.loc 2 2107 0 is_stmt 0 discriminator 1
 3091 001e 3B6A     		ldr	r3, [r7, #32]
 3092 0020 1B68     		ldr	r3, [r3, #0]
 3093 0022 002B     		cmp	r3, #0
 3094 0024 06D1     		bne	.L128
 3095 0026 3B6A     		ldr	r3, [r7, #32]
 3096 0028 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 3097 002a 002B     		cmp	r3, #0
 3098 002c 02D0     		beq	.L128
 3099              	.L127:
2108:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_WARN("bad ep\n");
2109:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		return -DWC_E_INVALID;
 3100              		.loc 2 2109 0 is_stmt 1
 3101 002e 6FF47A73 		mvn	r3, #1000
 3102 0032 24E2     		b	.L157
 3103              	.L128:
2110:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
2111:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2112:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (atomic_alloc) {
 3104              		.loc 2 2112 0
 3105 0034 FB6B     		ldr	r3, [r7, #60]
 3106 0036 002B     		cmp	r3, #0
 3107 0038 07D0     		beq	.L130
2113:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		req = DWC_ALLOC_ATOMIC(sizeof(*req));
 3108              		.loc 2 2113 0
 3109 003a 4FF00000 		mov	r0, #0
 3110 003e 4FF02001 		mov	r1, #32
 3111 0042 FFF7FEFF 		bl	__DWC_ALLOC_ATOMIC
 3112 0046 7862     		str	r0, [r7, #36]
 3113 0048 06E0     		b	.L131
 3114              	.L130:
2114:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	} else {
2115:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		req = DWC_ALLOC(sizeof(*req));
 3115              		.loc 2 2115 0
 3116 004a 4FF00000 		mov	r0, #0
 3117 004e 4FF02001 		mov	r1, #32
 3118 0052 FFF7FEFF 		bl	__DWC_ALLOC
 3119 0056 7862     		str	r0, [r7, #36]
 3120              	.L131:
2116:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
2117:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2118:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (!req) {
 3121              		.loc 2 2118 0
 3122 0058 7B6A     		ldr	r3, [r7, #36]
 3123 005a 002B     		cmp	r3, #0
 3124 005c 04D1     		bne	.L132
2119:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		return -DWC_E_NO_MEMORY;
 3125              		.loc 2 2119 0
 3126 005e 4FF61643 		movw	r3, #64534
 3127 0062 CFF6FF73 		movt	r3, 65535
 3128 0066 0AE2     		b	.L157
 3129              	.L132:
2120:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
2121:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_CIRCLEQ_INIT_ENTRY(req, queue_entry);
 3130              		.loc 2 2121 0
 3131 0068 7B6A     		ldr	r3, [r7, #36]
 3132 006a 4FF00002 		mov	r2, #0
 3133 006e 9A61     		str	r2, [r3, #24]
 3134 0070 7B6A     		ldr	r3, [r7, #36]
 3135 0072 4FF00002 		mov	r2, #0
 3136 0076 DA61     		str	r2, [r3, #28]
2122:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (!GET_CORE_IF(pcd)->core_params->opt) {
 3137              		.loc 2 2122 0
 3138 0078 FB68     		ldr	r3, [r7, #12]
 3139 007a 9B68     		ldr	r3, [r3, #8]
 3140 007c 1B68     		ldr	r3, [r3, #0]
 3141 007e 1B68     		ldr	r3, [r3, #0]
 3142 0080 002B     		cmp	r3, #0
2123:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (ep->dwc_ep.num != 0) {
2124:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_ERROR("queue req %p, len %d buf %p\n",
2125:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				  req_handle, buflen, buf);
2126:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
2127:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
2128:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2129:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	req->buf = buf;
 3143              		.loc 2 2129 0
 3144 0082 7B6A     		ldr	r3, [r7, #36]
 3145 0084 7A68     		ldr	r2, [r7, #4]
 3146 0086 5A60     		str	r2, [r3, #4]
2130:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	req->dma = dma_buf;
 3147              		.loc 2 2130 0
 3148 0088 7B6A     		ldr	r3, [r7, #36]
 3149 008a 3A68     		ldr	r2, [r7, #0]
 3150 008c 9A60     		str	r2, [r3, #8]
2131:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	req->length = buflen;
 3151              		.loc 2 2131 0
 3152 008e 7B6A     		ldr	r3, [r7, #36]
 3153 0090 3A6B     		ldr	r2, [r7, #48]
 3154 0092 DA60     		str	r2, [r3, #12]
2132:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	req->sent_zlp = zero;
 3155              		.loc 2 2132 0
 3156 0094 7B6B     		ldr	r3, [r7, #52]
 3157 0096 DBB2     		uxtb	r3, r3
 3158 0098 03F00103 		and	r3, r3, #1
 3159 009c D9B2     		uxtb	r1, r3
 3160 009e 7A6A     		ldr	r2, [r7, #36]
 3161 00a0 137D     		ldrb	r3, [r2, #20]
 3162 00a2 61F30003 		bfi	r3, r1, #0, #1
 3163 00a6 1375     		strb	r3, [r2, #20]
2133:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	req->priv = req_handle;
 3164              		.loc 2 2133 0
 3165 00a8 7B6A     		ldr	r3, [r7, #36]
 3166 00aa BA6B     		ldr	r2, [r7, #56]
 3167 00ac 1A60     		str	r2, [r3, #0]
2134:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2135:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_SPINLOCK_IRQSAVE(pcd->lock, &flags);
 3168              		.loc 2 2135 0
 3169 00ae FB68     		ldr	r3, [r7, #12]
 3170 00b0 D3F82024 		ldr	r2, [r3, #1056]
 3171 00b4 07F11403 		add	r3, r7, #20
 3172 00b8 1046     		mov	r0, r2
 3173 00ba 1946     		mov	r1, r3
 3174 00bc FFF7FEFF 		bl	DWC_SPINLOCK_IRQSAVE
2136:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2137:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/*
2138:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	 * For EP0 IN without premature status, zlp is required?
2139:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	 */
2140:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (ep->dwc_ep.num == 0 && ep->dwc_ep.is_in) {
 3175              		.loc 2 2140 0
 3176 00c0 3B6A     		ldr	r3, [r7, #32]
 3177 00c2 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 3178 00c4 002B     		cmp	r3, #0
2141:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_DEBUGPL(DBG_PCDV, "%d-OUT ZLP\n", ep->dwc_ep.num);
2142:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		//_req->zero = 1;
2143:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
2144:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2145:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* Start the transfer */
2146:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (DWC_CIRCLEQ_EMPTY(&ep->queue) && !ep->stopped) {
 3179              		.loc 2 2146 0
 3180 00c6 3B6A     		ldr	r3, [r7, #32]
 3181 00c8 5A68     		ldr	r2, [r3, #4]
 3182 00ca 3B6A     		ldr	r3, [r7, #32]
 3183 00cc 03F10403 		add	r3, r3, #4
 3184 00d0 9A42     		cmp	r2, r3
 3185 00d2 40F06581 		bne	.L135
 3186              		.loc 2 2146 0 is_stmt 0 discriminator 1
 3187 00d6 3B6A     		ldr	r3, [r7, #32]
 3188 00d8 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 3189 00da 03F00103 		and	r3, r3, #1
 3190 00de DBB2     		uxtb	r3, r3
 3191 00e0 002B     		cmp	r3, #0
 3192 00e2 40F05D81 		bne	.L135
2147:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2148:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #ifdef USE_IFX_DEV
2149:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		/*!
2150:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		* @note IFX Chg
2151:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		* Moved up to ensure that the context information is 
2152:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		* available during the interrupt processing
2153:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		*/
2154:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		++pcd->request_pending;
 3193              		.loc 2 2154 0 is_stmt 1
 3194 00e6 FB68     		ldr	r3, [r7, #12]
 3195 00e8 1B69     		ldr	r3, [r3, #16]
 3196 00ea 03F10102 		add	r2, r3, #1
 3197 00ee FB68     		ldr	r3, [r7, #12]
 3198 00f0 1A61     		str	r2, [r3, #16]
2155:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_CIRCLEQ_INSERT_TAIL(&ep->queue, req, queue_entry);
 3199              		.loc 2 2155 0
 3200 00f2 3B6A     		ldr	r3, [r7, #32]
 3201 00f4 03F10402 		add	r2, r3, #4
 3202 00f8 7B6A     		ldr	r3, [r7, #36]
 3203 00fa 9A61     		str	r2, [r3, #24]
 3204 00fc 3B6A     		ldr	r3, [r7, #32]
 3205 00fe 9A68     		ldr	r2, [r3, #8]
 3206 0100 7B6A     		ldr	r3, [r7, #36]
 3207 0102 DA61     		str	r2, [r3, #28]
 3208 0104 3B6A     		ldr	r3, [r7, #32]
 3209 0106 5A68     		ldr	r2, [r3, #4]
 3210 0108 3B6A     		ldr	r3, [r7, #32]
 3211 010a 03F10403 		add	r3, r3, #4
 3212 010e 9A42     		cmp	r2, r3
 3213 0110 03D1     		bne	.L136
 3214              		.loc 2 2155 0 is_stmt 0 discriminator 1
 3215 0112 3B6A     		ldr	r3, [r7, #32]
 3216 0114 7A6A     		ldr	r2, [r7, #36]
 3217 0116 5A60     		str	r2, [r3, #4]
 3218 0118 03E0     		b	.L137
 3219              	.L136:
 3220              		.loc 2 2155 0 discriminator 2
 3221 011a 3B6A     		ldr	r3, [r7, #32]
 3222 011c 9B68     		ldr	r3, [r3, #8]
 3223 011e 7A6A     		ldr	r2, [r7, #36]
 3224 0120 9A61     		str	r2, [r3, #24]
 3225              	.L137:
 3226              		.loc 2 2155 0 discriminator 3
 3227 0122 3B6A     		ldr	r3, [r7, #32]
 3228 0124 7A6A     		ldr	r2, [r7, #36]
 3229 0126 9A60     		str	r2, [r3, #8]
2156:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #endif
2157:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		/* EP0 Transfer? */
2158:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (ep->dwc_ep.num == 0) {
 3230              		.loc 2 2158 0 is_stmt 1 discriminator 3
 3231 0128 3B6A     		ldr	r3, [r7, #32]
 3232 012a 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 3233 012c 002B     		cmp	r3, #0
 3234 012e 40F09180 		bne	.L138
2159:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			switch (pcd->ep0state) {
 3235              		.loc 2 2159 0
 3236 0132 FB68     		ldr	r3, [r7, #12]
 3237 0134 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 3238 0136 032B     		cmp	r3, #3
 3239 0138 04D0     		beq	.L141
 3240 013a 042B     		cmp	r3, #4
 3241 013c 20D0     		beq	.L159
 3242 013e 022B     		cmp	r3, #2
 3243 0140 20D0     		beq	.L160
 3244 0142 10E0     		b	.L158
 3245              	.L141:
2160:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			case EP0_IN_DATA_PHASE:
2161:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				DWC_DEBUGPL(DBG_PCD,
2162:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					    "%s ep0: EP0_IN_DATA_PHASE\n",
2163:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					    __func__);
2164:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				break;
2165:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2166:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			case EP0_OUT_DATA_PHASE:
2167:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				DWC_DEBUGPL(DBG_PCD,
2168:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					    "%s ep0: EP0_OUT_DATA_PHASE\n",
2169:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					    __func__);
2170:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				if (pcd->request_config) {
 3246              		.loc 2 2170 0
 3247 0144 FB68     		ldr	r3, [r7, #12]
 3248 0146 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 3249 0148 03F00203 		and	r3, r3, #2
 3250 014c DBB2     		uxtb	r3, r3
 3251 014e 002B     		cmp	r3, #0
 3252 0150 1AD0     		beq	.L161
2171:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					/* Complete STATUS PHASE */
2172:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					ep->dwc_ep.is_in = 1;
 3253              		.loc 2 2172 0
 3254 0152 3A6A     		ldr	r2, [r7, #32]
 3255 0154 537C     		ldrb	r3, [r2, #17]
 3256 0156 43F00103 		orr	r3, r3, #1
 3257 015a 5374     		strb	r3, [r2, #17]
2173:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					pcd->ep0state = EP0_IN_STATUS_PHASE;
 3258              		.loc 2 2173 0
 3259 015c FB68     		ldr	r3, [r7, #12]
 3260 015e 4FF00402 		mov	r2, #4
 3261 0162 1A73     		strb	r2, [r3, #12]
2174:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				}
2175:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				break;
 3262              		.loc 2 2175 0
 3263 0164 10E0     		b	.L161
 3264              	.L158:
2176:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2177:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			case EP0_IN_STATUS_PHASE:
2178:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				DWC_DEBUGPL(DBG_PCD,
2179:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					    "%s ep0: EP0_IN_STATUS_PHASE\n",
2180:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					    __func__);
2181:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				break;
2182:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2183:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			default:
2184:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				DWC_DEBUGPL(DBG_ANY, "ep0: odd state %d\n",
2185:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					    pcd->ep0state);
2186:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				DWC_SPINUNLOCK_IRQRESTORE(pcd->lock, flags);
 3265              		.loc 2 2186 0
 3266 0166 FB68     		ldr	r3, [r7, #12]
 3267 0168 D3F82024 		ldr	r2, [r3, #1056]
 3268 016c 7B69     		ldr	r3, [r7, #20]
 3269 016e 1046     		mov	r0, r2
 3270 0170 1946     		mov	r1, r3
 3271 0172 FFF7FEFF 		bl	DWC_SPINUNLOCK_IRQRESTORE
2187:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				return -DWC_E_SHUTDOWN;
 3272              		.loc 2 2187 0
 3273 0176 4FF60E43 		movw	r3, #64526
 3274 017a CFF6FF73 		movt	r3, 65535
 3275 017e 7EE1     		b	.L157
 3276              	.L159:
2181:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				break;
 3277              		.loc 2 2181 0
 3278 0180 00BF     		nop
 3279 0182 02E0     		b	.L143
 3280              	.L160:
2164:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				break;
 3281              		.loc 2 2164 0
 3282 0184 00BF     		nop
 3283 0186 00E0     		b	.L143
 3284              	.L161:
2175:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				break;
 3285              		.loc 2 2175 0
 3286 0188 00BF     		nop
 3287              	.L143:
2188:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			}
2189:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2190:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			ep->dwc_ep.dma_addr = dma_buf;
 3288              		.loc 2 2190 0
 3289 018a 3B6A     		ldr	r3, [r7, #32]
 3290 018c 3A68     		ldr	r2, [r7, #0]
 3291 018e 9A61     		str	r2, [r3, #24]
2191:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			ep->dwc_ep.start_xfer_buff = buf;
 3292              		.loc 2 2191 0
 3293 0190 3B6A     		ldr	r3, [r7, #32]
 3294 0192 7A68     		ldr	r2, [r7, #4]
 3295 0194 5A62     		str	r2, [r3, #36]
2192:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			ep->dwc_ep.xfer_buff = buf;
 3296              		.loc 2 2192 0
 3297 0196 3B6A     		ldr	r3, [r7, #32]
 3298 0198 7A68     		ldr	r2, [r7, #4]
 3299 019a 9A62     		str	r2, [r3, #40]
2193:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			ep->dwc_ep.xfer_len = buflen;
 3300              		.loc 2 2193 0
 3301 019c 3B6B     		ldr	r3, [r7, #48]
 3302 019e 23F07F42 		bic	r2, r3, #-16777216
 3303 01a2 22F47802 		bic	r2, r2, #16252928
 3304 01a6 396A     		ldr	r1, [r7, #32]
 3305 01a8 CB6A     		ldr	r3, [r1, #44]
 3306 01aa 62F31203 		bfi	r3, r2, #0, #19
 3307 01ae CB62     		str	r3, [r1, #44]
2194:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			ep->dwc_ep.xfer_count = 0;
 3308              		.loc 2 2194 0
 3309 01b0 3A6A     		ldr	r2, [r7, #32]
 3310 01b2 136B     		ldr	r3, [r2, #48]
 3311 01b4 6FF31203 		bfc	r3, #0, #19
 3312 01b8 1363     		str	r3, [r2, #48]
2195:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			ep->dwc_ep.sent_zlp = 0;
 3313              		.loc 2 2195 0
 3314 01ba 3A6A     		ldr	r2, [r7, #32]
 3315 01bc 92F83230 		ldrb	r3, [r2, #50]
 3316 01c0 6FF3C303 		bfc	r3, #3, #1
 3317 01c4 82F83230 		strb	r3, [r2, #50]
2196:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			ep->dwc_ep.total_len = ep->dwc_ep.xfer_len;
 3318              		.loc 2 2196 0
 3319 01c8 3B6A     		ldr	r3, [r7, #32]
 3320 01ca DB6A     		ldr	r3, [r3, #44]
 3321 01cc C3F31201 		ubfx	r1, r3, #0, #19
 3322 01d0 3B6A     		ldr	r3, [r7, #32]
 3323 01d2 4FEA0142 		lsl	r2, r1, #16
 3324 01d6 4FEA1242 		lsr	r2, r2, #16
 3325 01da 4FF00000 		mov	r0, #0
 3326 01de 0243     		orrs	r2, r2, r0
 3327 01e0 9A86     		strh	r2, [r3, #52]	@ movhi
 3328 01e2 4FEA1142 		lsr	r2, r1, #16
 3329 01e6 02F00702 		and	r2, r2, #7
 3330 01ea 02F00702 		and	r2, r2, #7
 3331 01ee 93F83610 		ldrb	r1, [r3, #54]
 3332 01f2 21F00701 		bic	r1, r1, #7
 3333 01f6 0A43     		orrs	r2, r2, r1
 3334 01f8 83F83620 		strb	r2, [r3, #54]
2197:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2198:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			if (zero) {
 3335              		.loc 2 2198 0
 3336 01fc 7B6B     		ldr	r3, [r7, #52]
 3337 01fe 002B     		cmp	r3, #0
 3338 0200 1ED0     		beq	.L145
2199:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				if ((ep->dwc_ep.xfer_len %
 3339              		.loc 2 2199 0
 3340 0202 3B6A     		ldr	r3, [r7, #32]
 3341 0204 DB6A     		ldr	r3, [r3, #44]
 3342 0206 C3F31203 		ubfx	r3, r3, #0, #19
2200:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				     ep->dwc_ep.maxpacket == 0)
 3343              		.loc 2 2200 0
 3344 020a 3A6A     		ldr	r2, [r7, #32]
 3345 020c 528A     		ldrh	r2, [r2, #18]	@ movhi
 3346 020e C2F38A02 		ubfx	r2, r2, #2, #11
 3347 0212 92B2     		uxth	r2, r2
2199:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				if ((ep->dwc_ep.xfer_len %
 3348              		.loc 2 2199 0
 3349 0214 93FBF2F1 		sdiv	r1, r3, r2
 3350 0218 02FB01F2 		mul	r2, r2, r1
 3351 021c 9B1A     		subs	r3, r3, r2
 3352 021e 002B     		cmp	r3, #0
 3353 0220 0ED1     		bne	.L145
2201:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				    && (ep->dwc_ep.xfer_len != 0)) {
 3354              		.loc 2 2201 0
 3355 0222 3B6A     		ldr	r3, [r7, #32]
 3356 0224 DB6A     		ldr	r3, [r3, #44]
 3357 0226 23F07F43 		bic	r3, r3, #-16777216
 3358 022a 23F47803 		bic	r3, r3, #16252928
 3359 022e 002B     		cmp	r3, #0
 3360 0230 06D0     		beq	.L145
2202:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					ep->dwc_ep.sent_zlp = 1;
 3361              		.loc 2 2202 0
 3362 0232 3A6A     		ldr	r2, [r7, #32]
 3363 0234 92F83230 		ldrb	r3, [r2, #50]
 3364 0238 43F00803 		orr	r3, r3, #8
 3365 023c 82F83230 		strb	r3, [r2, #50]
 3366              	.L145:
2203:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				}
2204:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2205:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			}
2206:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2207:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dwc_otg_ep0_start_transfer(GET_CORE_IF(pcd),
 3367              		.loc 2 2207 0
 3368 0240 FB68     		ldr	r3, [r7, #12]
 3369 0242 9A68     		ldr	r2, [r3, #8]
 3370 0244 3B6A     		ldr	r3, [r7, #32]
 3371 0246 03F11003 		add	r3, r3, #16
 3372 024a 1046     		mov	r0, r2
 3373 024c 1946     		mov	r1, r3
 3374 024e FFF7FEFF 		bl	dwc_otg_ep0_start_transfer
2158:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (ep->dwc_ep.num == 0) {
 3375              		.loc 2 2158 0
 3376 0252 C6E0     		b	.L151
 3377              	.L138:
2208:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						   &ep->dwc_ep);
2209:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}		// non-ep0 endpoints
2210:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		else {
2211:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #ifdef DWC_UTE_CFI
2212:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			if (ep->dwc_ep.buff_mode != BM_STANDARD) {
2213:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				/* store the request length */
2214:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				ep->dwc_ep.cfi_req_len = buflen;
2215:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				pcd->cfi->ops.build_descriptors(pcd->cfi, pcd,
2216:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 								ep, req);
2217:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			} else {
2218:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #endif
2219:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				max_transfer =
2220:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				    GET_CORE_IF(ep->pcd)->
 3378              		.loc 2 2220 0
 3379 0254 3B6A     		ldr	r3, [r7, #32]
 3380 0256 DB6B     		ldr	r3, [r3, #60]
 3381 0258 9B68     		ldr	r3, [r3, #8]
 3382 025a 1B68     		ldr	r3, [r3, #0]
2221:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				    core_params->max_transfer_size;
 3383              		.loc 2 2221 0
 3384 025c 9B6F     		ldr	r3, [r3, #120]
2219:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				max_transfer =
 3385              		.loc 2 2219 0
 3386 025e FB61     		str	r3, [r7, #28]
2222:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2223:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				/* Setup and start the Transfer */
2224:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				ep->dwc_ep.dma_addr = dma_buf;
 3387              		.loc 2 2224 0
 3388 0260 3B6A     		ldr	r3, [r7, #32]
 3389 0262 3A68     		ldr	r2, [r7, #0]
 3390 0264 9A61     		str	r2, [r3, #24]
2225:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				ep->dwc_ep.start_xfer_buff = buf;
 3391              		.loc 2 2225 0
 3392 0266 3B6A     		ldr	r3, [r7, #32]
 3393 0268 7A68     		ldr	r2, [r7, #4]
 3394 026a 5A62     		str	r2, [r3, #36]
2226:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				ep->dwc_ep.xfer_buff = buf;
 3395              		.loc 2 2226 0
 3396 026c 3B6A     		ldr	r3, [r7, #32]
 3397 026e 7A68     		ldr	r2, [r7, #4]
 3398 0270 9A62     		str	r2, [r3, #40]
2227:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				ep->dwc_ep.xfer_len = 0;
 3399              		.loc 2 2227 0
 3400 0272 3A6A     		ldr	r2, [r7, #32]
 3401 0274 D36A     		ldr	r3, [r2, #44]
 3402 0276 6FF31203 		bfc	r3, #0, #19
 3403 027a D362     		str	r3, [r2, #44]
2228:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				ep->dwc_ep.xfer_count = 0;
 3404              		.loc 2 2228 0
 3405 027c 3A6A     		ldr	r2, [r7, #32]
 3406 027e 136B     		ldr	r3, [r2, #48]
 3407 0280 6FF31203 		bfc	r3, #0, #19
 3408 0284 1363     		str	r3, [r2, #48]
2229:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				ep->dwc_ep.sent_zlp = 0;
 3409              		.loc 2 2229 0
 3410 0286 3A6A     		ldr	r2, [r7, #32]
 3411 0288 92F83230 		ldrb	r3, [r2, #50]
 3412 028c 6FF3C303 		bfc	r3, #3, #1
 3413 0290 82F83230 		strb	r3, [r2, #50]
2230:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				ep->dwc_ep.total_len = buflen;
 3414              		.loc 2 2230 0
 3415 0294 3B6B     		ldr	r3, [r7, #48]
 3416 0296 23F07F43 		bic	r3, r3, #-16777216
 3417 029a 23F47803 		bic	r3, r3, #16252928
 3418 029e 3A6A     		ldr	r2, [r7, #32]
 3419 02a0 4FEA0341 		lsl	r1, r3, #16
 3420 02a4 4FEA1141 		lsr	r1, r1, #16
 3421 02a8 4FF00000 		mov	r0, #0
 3422 02ac 0143     		orrs	r1, r1, r0
 3423 02ae 9186     		strh	r1, [r2, #52]	@ movhi
 3424 02b0 4FEA1343 		lsr	r3, r3, #16
 3425 02b4 03F00703 		and	r3, r3, #7
 3426 02b8 03F00703 		and	r3, r3, #7
 3427 02bc 92F83610 		ldrb	r1, [r2, #54]
 3428 02c0 21F00701 		bic	r1, r1, #7
 3429 02c4 0B43     		orrs	r3, r3, r1
 3430 02c6 82F83630 		strb	r3, [r2, #54]
2231:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2232:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				ep->dwc_ep.maxxfer = max_transfer;
 3431              		.loc 2 2232 0
 3432 02ca 3B6A     		ldr	r3, [r7, #32]
 3433 02cc FA69     		ldr	r2, [r7, #28]
 3434 02ce 5A61     		str	r2, [r3, #20]
2233:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				if (GET_CORE_IF(pcd)->dma_desc_enable) {
 3435              		.loc 2 2233 0
 3436 02d0 FB68     		ldr	r3, [r7, #12]
 3437 02d2 9B68     		ldr	r3, [r3, #8]
 3438 02d4 93F84730 		ldrb	r3, [r3, #71]	@ zero_extendqisi2
 3439 02d8 002B     		cmp	r3, #0
 3440 02da 1CD0     		beq	.L147
 3441              	.LBB5:
2234:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					uint32_t out_max_xfer =
 3442              		.loc 2 2234 0
 3443 02dc 4FF6FC73 		movw	r3, #65532
 3444 02e0 BB61     		str	r3, [r7, #24]
2235:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					    DDMA_MAX_TRANSFER_SIZE -
2236:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					    (DDMA_MAX_TRANSFER_SIZE % 4);
2237:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					if (ep->dwc_ep.is_in) {
 3445              		.loc 2 2237 0
 3446 02e2 3B6A     		ldr	r3, [r7, #32]
 3447 02e4 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 3448 02e6 03F00103 		and	r3, r3, #1
 3449 02ea DBB2     		uxtb	r3, r3
 3450 02ec 002B     		cmp	r3, #0
 3451 02ee 0AD0     		beq	.L148
2238:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						if (ep->dwc_ep.maxxfer >
 3452              		.loc 2 2238 0
 3453 02f0 3B6A     		ldr	r3, [r7, #32]
 3454 02f2 5A69     		ldr	r2, [r3, #20]
 3455 02f4 4FF6FF73 		movw	r3, #65535
 3456 02f8 9A42     		cmp	r2, r3
 3457 02fa 0CD9     		bls	.L147
2239:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						    DDMA_MAX_TRANSFER_SIZE) {
2240:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 							ep->dwc_ep.maxxfer =
 3458              		.loc 2 2240 0
 3459 02fc 3B6A     		ldr	r3, [r7, #32]
 3460 02fe 4FF6FF72 		movw	r2, #65535
 3461 0302 5A61     		str	r2, [r3, #20]
 3462 0304 07E0     		b	.L147
 3463              	.L148:
2241:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 							    DDMA_MAX_TRANSFER_SIZE;
2242:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						}
2243:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					} else {
2244:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						if (ep->dwc_ep.maxxfer >
 3464              		.loc 2 2244 0
 3465 0306 3B6A     		ldr	r3, [r7, #32]
 3466 0308 5A69     		ldr	r2, [r3, #20]
 3467 030a BB69     		ldr	r3, [r7, #24]
 3468 030c 9A42     		cmp	r2, r3
 3469 030e 02D9     		bls	.L147
2245:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						    out_max_xfer) {
2246:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 							ep->dwc_ep.maxxfer =
 3470              		.loc 2 2246 0
 3471 0310 3B6A     		ldr	r3, [r7, #32]
 3472 0312 BA69     		ldr	r2, [r7, #24]
 3473 0314 5A61     		str	r2, [r3, #20]
 3474              	.L147:
 3475              	.LBE5:
2247:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 							    out_max_xfer;
2248:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						}
2249:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					}
2250:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				}
2251:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				if (ep->dwc_ep.maxxfer < ep->dwc_ep.total_len) {
 3476              		.loc 2 2251 0
 3477 0316 3B6A     		ldr	r3, [r7, #32]
 3478 0318 5A69     		ldr	r2, [r3, #20]
 3479 031a 3B6A     		ldr	r3, [r7, #32]
 3480 031c 5B6B     		ldr	r3, [r3, #52]
 3481 031e C3F31203 		ubfx	r3, r3, #0, #19
 3482 0322 9A42     		cmp	r2, r3
 3483 0324 10D2     		bcs	.L149
2252:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					ep->dwc_ep.maxxfer -=
 3484              		.loc 2 2252 0
 3485 0326 3B6A     		ldr	r3, [r7, #32]
 3486 0328 5969     		ldr	r1, [r3, #20]
2253:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					    (ep->dwc_ep.maxxfer %
 3487              		.loc 2 2253 0
 3488 032a 3B6A     		ldr	r3, [r7, #32]
 3489 032c 5B69     		ldr	r3, [r3, #20]
2254:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					     ep->dwc_ep.maxpacket);
 3490              		.loc 2 2254 0
 3491 032e 3A6A     		ldr	r2, [r7, #32]
 3492 0330 528A     		ldrh	r2, [r2, #18]	@ movhi
 3493 0332 C2F38A02 		ubfx	r2, r2, #2, #11
 3494 0336 92B2     		uxth	r2, r2
2253:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					    (ep->dwc_ep.maxxfer %
 3495              		.loc 2 2253 0
 3496 0338 B3FBF2F0 		udiv	r0, r3, r2
 3497 033c 02FB00F2 		mul	r2, r2, r0
 3498 0340 9B1A     		subs	r3, r3, r2
2252:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					ep->dwc_ep.maxxfer -=
 3499              		.loc 2 2252 0
 3500 0342 CA1A     		subs	r2, r1, r3
 3501 0344 3B6A     		ldr	r3, [r7, #32]
 3502 0346 5A61     		str	r2, [r3, #20]
 3503              	.L149:
2255:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				}
2256:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2257:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				if (zero) {
 3504              		.loc 2 2257 0
 3505 0348 7B6B     		ldr	r3, [r7, #52]
 3506 034a 002B     		cmp	r3, #0
 3507 034c 1ED0     		beq	.L150
2258:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					if ((ep->dwc_ep.total_len %
 3508              		.loc 2 2258 0
 3509 034e 3B6A     		ldr	r3, [r7, #32]
 3510 0350 5B6B     		ldr	r3, [r3, #52]
 3511 0352 C3F31203 		ubfx	r3, r3, #0, #19
2259:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					     ep->dwc_ep.maxpacket == 0)
 3512              		.loc 2 2259 0
 3513 0356 3A6A     		ldr	r2, [r7, #32]
 3514 0358 528A     		ldrh	r2, [r2, #18]	@ movhi
 3515 035a C2F38A02 		ubfx	r2, r2, #2, #11
 3516 035e 92B2     		uxth	r2, r2
2258:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					if ((ep->dwc_ep.total_len %
 3517              		.loc 2 2258 0
 3518 0360 93FBF2F1 		sdiv	r1, r3, r2
 3519 0364 02FB01F2 		mul	r2, r2, r1
 3520 0368 9B1A     		subs	r3, r3, r2
 3521 036a 002B     		cmp	r3, #0
 3522 036c 0ED1     		bne	.L150
2260:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					    && (ep->dwc_ep.total_len != 0)) {
 3523              		.loc 2 2260 0
 3524 036e 3B6A     		ldr	r3, [r7, #32]
 3525 0370 5B6B     		ldr	r3, [r3, #52]
 3526 0372 23F07F43 		bic	r3, r3, #-16777216
 3527 0376 23F47803 		bic	r3, r3, #16252928
 3528 037a 002B     		cmp	r3, #0
 3529 037c 06D0     		beq	.L150
2261:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						ep->dwc_ep.sent_zlp = 1;
 3530              		.loc 2 2261 0
 3531 037e 3A6A     		ldr	r2, [r7, #32]
 3532 0380 92F83230 		ldrb	r3, [r2, #50]
 3533 0384 43F00803 		orr	r3, r3, #8
 3534 0388 82F83230 		strb	r3, [r2, #50]
 3535              	.L150:
2262:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					}
2263:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				}
2264:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #ifdef DWC_UTE_CFI
2265:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			}
2266:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #endif
2267:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dwc_otg_ep_start_transfer(GET_CORE_IF(pcd),
 3536              		.loc 2 2267 0
 3537 038c FB68     		ldr	r3, [r7, #12]
 3538 038e 9A68     		ldr	r2, [r3, #8]
 3539 0390 3B6A     		ldr	r3, [r7, #32]
 3540 0392 03F11003 		add	r3, r3, #16
 3541 0396 1046     		mov	r0, r2
 3542 0398 1946     		mov	r1, r3
 3543 039a FFF7FEFF 		bl	dwc_otg_ep_start_transfer
2158:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (ep->dwc_ep.num == 0) {
 3544              		.loc 2 2158 0
 3545 039e 20E0     		b	.L151
 3546              	.L135:
2268:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						  &ep->dwc_ep);
2269:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
2270:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
2271:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #ifdef USE_IFX_DEV
2272:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	else
2273:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	{
2274:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		/*!
2275:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		* @note IFX Chg
2276:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		* In case the queue is not empty, put it to the queue
2277:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		*/
2278:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		++pcd->request_pending;
 3547              		.loc 2 2278 0
 3548 03a0 FB68     		ldr	r3, [r7, #12]
 3549 03a2 1B69     		ldr	r3, [r3, #16]
 3550 03a4 03F10102 		add	r2, r3, #1
 3551 03a8 FB68     		ldr	r3, [r7, #12]
 3552 03aa 1A61     		str	r2, [r3, #16]
2279:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_CIRCLEQ_INSERT_TAIL(&ep->queue, req, queue_entry);
 3553              		.loc 2 2279 0
 3554 03ac 3B6A     		ldr	r3, [r7, #32]
 3555 03ae 03F10402 		add	r2, r3, #4
 3556 03b2 7B6A     		ldr	r3, [r7, #36]
 3557 03b4 9A61     		str	r2, [r3, #24]
 3558 03b6 3B6A     		ldr	r3, [r7, #32]
 3559 03b8 9A68     		ldr	r2, [r3, #8]
 3560 03ba 7B6A     		ldr	r3, [r7, #36]
 3561 03bc DA61     		str	r2, [r3, #28]
 3562 03be 3B6A     		ldr	r3, [r7, #32]
 3563 03c0 5A68     		ldr	r2, [r3, #4]
 3564 03c2 3B6A     		ldr	r3, [r7, #32]
 3565 03c4 03F10403 		add	r3, r3, #4
 3566 03c8 9A42     		cmp	r2, r3
 3567 03ca 03D1     		bne	.L152
 3568              		.loc 2 2279 0 is_stmt 0 discriminator 1
 3569 03cc 3B6A     		ldr	r3, [r7, #32]
 3570 03ce 7A6A     		ldr	r2, [r7, #36]
 3571 03d0 5A60     		str	r2, [r3, #4]
 3572 03d2 03E0     		b	.L153
 3573              	.L152:
 3574              		.loc 2 2279 0 discriminator 2
 3575 03d4 3B6A     		ldr	r3, [r7, #32]
 3576 03d6 9B68     		ldr	r3, [r3, #8]
 3577 03d8 7A6A     		ldr	r2, [r7, #36]
 3578 03da 9A61     		str	r2, [r3, #24]
 3579              	.L153:
 3580              		.loc 2 2279 0 discriminator 3
 3581 03dc 3B6A     		ldr	r3, [r7, #32]
 3582 03de 7A6A     		ldr	r2, [r7, #36]
 3583 03e0 9A60     		str	r2, [r3, #8]
 3584              	.L151:
2280:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
2281:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #endif
2282:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2283:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (req != 0) {
 3585              		.loc 2 2283 0 is_stmt 1
 3586 03e2 7B6A     		ldr	r3, [r7, #36]
 3587 03e4 002B     		cmp	r3, #0
 3588 03e6 40D0     		beq	.L154
2284:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #ifndef USE_IFX_DEV
2285:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		++pcd->request_pending;
2286:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_CIRCLEQ_INSERT_TAIL(&ep->queue, req, queue_entry);
2287:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #endif
2288:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (ep->dwc_ep.is_in && ep->stopped
 3589              		.loc 2 2288 0
 3590 03e8 3B6A     		ldr	r3, [r7, #32]
 3591 03ea 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 3592 03ec 03F00103 		and	r3, r3, #1
 3593 03f0 DBB2     		uxtb	r3, r3
 3594 03f2 002B     		cmp	r3, #0
 3595 03f4 39D0     		beq	.L154
 3596              		.loc 2 2288 0 is_stmt 0 discriminator 1
 3597 03f6 3B6A     		ldr	r3, [r7, #32]
 3598 03f8 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 3599 03fa 03F00103 		and	r3, r3, #1
 3600 03fe DBB2     		uxtb	r3, r3
 3601 0400 002B     		cmp	r3, #0
 3602 0402 32D0     		beq	.L154
2289:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    && !(GET_CORE_IF(pcd)->dma_enable)) {
 3603              		.loc 2 2289 0 is_stmt 1
 3604 0404 FB68     		ldr	r3, [r7, #12]
 3605 0406 9B68     		ldr	r3, [r3, #8]
 3606 0408 93F84630 		ldrb	r3, [r3, #70]	@ zero_extendqisi2
 3607 040c 002B     		cmp	r3, #0
 3608 040e 2CD1     		bne	.L154
 3609              	.LBB6:
2290:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			/** @todo NGS Create a function for this. */
2291:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			diepmsk_data_t diepmsk = {.d32 = 0 };
 3610              		.loc 2 2291 0
 3611 0410 4FF00003 		mov	r3, #0
 3612 0414 3B61     		str	r3, [r7, #16]
2292:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			diepmsk.b.intktxfemp = 1;
 3613              		.loc 2 2292 0
 3614 0416 3B69     		ldr	r3, [r7, #16]
 3615 0418 43F01003 		orr	r3, r3, #16
 3616 041c 3B61     		str	r3, [r7, #16]
2293:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			if (GET_CORE_IF(pcd)->multiproc_int_enable) {
 3617              		.loc 2 2293 0
 3618 041e FB68     		ldr	r3, [r7, #12]
 3619 0420 9B68     		ldr	r3, [r3, #8]
 3620 0422 93F84930 		ldrb	r3, [r3, #73]	@ zero_extendqisi2
 3621 0426 002B     		cmp	r3, #0
 3622 0428 12D0     		beq	.L155
2294:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				DWC_MODIFY_REG32(&GET_CORE_IF(pcd)->dev_if->
 3623              		.loc 2 2294 0
 3624 042a FB68     		ldr	r3, [r7, #12]
 3625 042c 9B68     		ldr	r3, [r3, #8]
 3626 042e 9B68     		ldr	r3, [r3, #8]
 3627 0430 1A68     		ldr	r2, [r3, #0]
2295:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						 dev_global_regs->
2296:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						 diepeachintmsk[ep->dwc_ep.num],
 3628              		.loc 2 2296 0
 3629 0432 3B6A     		ldr	r3, [r7, #32]
 3630 0434 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
2294:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				DWC_MODIFY_REG32(&GET_CORE_IF(pcd)->dev_if->
 3631              		.loc 2 2294 0
 3632 0436 03F11003 		add	r3, r3, #16
 3633 043a 4FEA8303 		lsl	r3, r3, #2
 3634 043e D218     		adds	r2, r2, r3
 3635 0440 3B69     		ldr	r3, [r7, #16]
 3636 0442 1046     		mov	r0, r2
 3637 0444 4FF00001 		mov	r1, #0
 3638 0448 1A46     		mov	r2, r3
 3639 044a FFF7FEFF 		bl	DWC_MODIFY_REG32
 3640 044e 0CE0     		b	.L154
 3641              	.L155:
2297:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						 0, diepmsk.d32);
2298:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			} else {
2299:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				DWC_MODIFY_REG32(&GET_CORE_IF(pcd)->dev_if->
 3642              		.loc 2 2299 0
 3643 0450 FB68     		ldr	r3, [r7, #12]
 3644 0452 9B68     		ldr	r3, [r3, #8]
 3645 0454 9B68     		ldr	r3, [r3, #8]
 3646 0456 1B68     		ldr	r3, [r3, #0]
 3647 0458 03F11002 		add	r2, r3, #16
 3648 045c 3B69     		ldr	r3, [r7, #16]
 3649 045e 1046     		mov	r0, r2
 3650 0460 4FF00001 		mov	r1, #0
 3651 0464 1A46     		mov	r2, r3
 3652 0466 FFF7FEFF 		bl	DWC_MODIFY_REG32
 3653              	.L154:
 3654              	.LBE6:
2300:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						 dev_global_regs->diepmsk, 0,
2301:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						 diepmsk.d32);
2302:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			}
2303:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2304:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
2305:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
2306:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_SPINUNLOCK_IRQRESTORE(pcd->lock, flags);
 3655              		.loc 2 2306 0
 3656 046a FB68     		ldr	r3, [r7, #12]
 3657 046c D3F82024 		ldr	r2, [r3, #1056]
 3658 0470 7B69     		ldr	r3, [r7, #20]
 3659 0472 1046     		mov	r0, r2
 3660 0474 1946     		mov	r1, r3
 3661 0476 FFF7FEFF 		bl	DWC_SPINUNLOCK_IRQRESTORE
2307:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2308:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return 0;
 3662              		.loc 2 2308 0
 3663 047a 4FF00003 		mov	r3, #0
 3664              	.L157:
2309:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 3665              		.loc 2 2309 0
 3666 047e 1846     		mov	r0, r3
 3667 0480 07F12807 		add	r7, r7, #40
 3668 0484 BD46     		mov	sp, r7
 3669 0486 80BD     		pop	{r7, pc}
 3670              		.cfi_endproc
 3671              	.LFE44:
 3673              		.section	.text.dwc_otg_pcd_ep_dequeue,"ax",%progbits
 3674              		.align	2
 3675              		.global	dwc_otg_pcd_ep_dequeue
 3676              		.thumb
 3677              		.thumb_func
 3679              	dwc_otg_pcd_ep_dequeue:
 3680              	.LFB45:
2310:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2311:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** int dwc_otg_pcd_ep_dequeue(dwc_otg_pcd_t * pcd, void *ep_handle,
2312:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			   void *req_handle)
2313:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 3681              		.loc 2 2313 0
 3682              		.cfi_startproc
 3683              		@ args = 0, pretend = 0, frame = 32
 3684              		@ frame_needed = 1, uses_anonymous_args = 0
 3685 0000 80B5     		push	{r7, lr}
 3686              	.LCFI78:
 3687              		.cfi_def_cfa_offset 8
 3688              		.cfi_offset 7, -8
 3689              		.cfi_offset 14, -4
 3690 0002 88B0     		sub	sp, sp, #32
 3691              	.LCFI79:
 3692              		.cfi_def_cfa_offset 40
 3693 0004 00AF     		add	r7, sp, #0
 3694              	.LCFI80:
 3695              		.cfi_def_cfa_register 7
 3696 0006 F860     		str	r0, [r7, #12]
 3697 0008 B960     		str	r1, [r7, #8]
 3698 000a 7A60     		str	r2, [r7, #4]
2314:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_irqflags_t flags;
2315:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_pcd_request_t *req;
2316:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_pcd_ep_t *ep;
2317:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2318:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep = get_ep_from_handle(pcd, ep_handle);
 3699              		.loc 2 2318 0
 3700 000c F868     		ldr	r0, [r7, #12]
 3701 000e B968     		ldr	r1, [r7, #8]
 3702 0010 FFF7FEFF 		bl	get_ep_from_handle
 3703 0014 B861     		str	r0, [r7, #24]
2319:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (!ep || (!ep->desc && ep->dwc_ep.num != 0)) {
 3704              		.loc 2 2319 0
 3705 0016 BB69     		ldr	r3, [r7, #24]
 3706 0018 002B     		cmp	r3, #0
 3707 001a 07D0     		beq	.L163
 3708              		.loc 2 2319 0 is_stmt 0 discriminator 1
 3709 001c BB69     		ldr	r3, [r7, #24]
 3710 001e 1B68     		ldr	r3, [r3, #0]
 3711 0020 002B     		cmp	r3, #0
 3712 0022 06D1     		bne	.L164
 3713 0024 BB69     		ldr	r3, [r7, #24]
 3714 0026 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 3715 0028 002B     		cmp	r3, #0
 3716 002a 02D0     		beq	.L164
 3717              	.L163:
2320:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_WARN("bad argument\n");
2321:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		return -DWC_E_INVALID;
 3718              		.loc 2 2321 0 is_stmt 1
 3719 002c 6FF47A73 		mvn	r3, #1000
 3720 0030 52E0     		b	.L176
 3721              	.L164:
2322:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
2323:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2324:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_SPINLOCK_IRQSAVE(pcd->lock, &flags);
 3722              		.loc 2 2324 0
 3723 0032 FB68     		ldr	r3, [r7, #12]
 3724 0034 D3F82024 		ldr	r2, [r3, #1056]
 3725 0038 07F11403 		add	r3, r7, #20
 3726 003c 1046     		mov	r0, r2
 3727 003e 1946     		mov	r1, r3
 3728 0040 FFF7FEFF 		bl	DWC_SPINLOCK_IRQSAVE
2325:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2326:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* make sure it's actually queued on this endpoint */
2327:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_CIRCLEQ_FOREACH(req, &ep->queue, queue_entry) {
 3729              		.loc 2 2327 0
 3730 0044 BB69     		ldr	r3, [r7, #24]
 3731 0046 5B68     		ldr	r3, [r3, #4]
 3732 0048 FB61     		str	r3, [r7, #28]
 3733 004a 07E0     		b	.L166
 3734              	.L169:
2328:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (req->priv == (void *)req_handle) {
 3735              		.loc 2 2328 0
 3736 004c FB69     		ldr	r3, [r7, #28]
 3737 004e 1A68     		ldr	r2, [r3, #0]
 3738 0050 7B68     		ldr	r3, [r7, #4]
 3739 0052 9A42     		cmp	r2, r3
 3740 0054 09D0     		beq	.L177
 3741              	.L167:
2327:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_CIRCLEQ_FOREACH(req, &ep->queue, queue_entry) {
 3742              		.loc 2 2327 0
 3743 0056 FB69     		ldr	r3, [r7, #28]
 3744 0058 9B69     		ldr	r3, [r3, #24]
 3745 005a FB61     		str	r3, [r7, #28]
 3746              	.L166:
2327:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_CIRCLEQ_FOREACH(req, &ep->queue, queue_entry) {
 3747              		.loc 2 2327 0 is_stmt 0 discriminator 1
 3748 005c BB69     		ldr	r3, [r7, #24]
 3749 005e 03F10402 		add	r2, r3, #4
 3750 0062 FB69     		ldr	r3, [r7, #28]
 3751 0064 9A42     		cmp	r2, r3
 3752 0066 F1D1     		bne	.L169
 3753 0068 00E0     		b	.L168
 3754              	.L177:
2329:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			break;
 3755              		.loc 2 2329 0 is_stmt 1
 3756 006a 00BF     		nop
 3757              	.L168:
2330:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
2331:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
2332:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2333:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (req->priv != (void *)req_handle) {
 3758              		.loc 2 2333 0
 3759 006c FB69     		ldr	r3, [r7, #28]
 3760 006e 1A68     		ldr	r2, [r3, #0]
 3761 0070 7B68     		ldr	r3, [r7, #4]
 3762 0072 9A42     		cmp	r2, r3
 3763 0074 0AD0     		beq	.L170
2334:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_SPINUNLOCK_IRQRESTORE(pcd->lock, flags);
 3764              		.loc 2 2334 0
 3765 0076 FB68     		ldr	r3, [r7, #12]
 3766 0078 D3F82024 		ldr	r2, [r3, #1056]
 3767 007c 7B69     		ldr	r3, [r7, #20]
 3768 007e 1046     		mov	r0, r2
 3769 0080 1946     		mov	r1, r3
 3770 0082 FFF7FEFF 		bl	DWC_SPINUNLOCK_IRQRESTORE
2335:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		return -DWC_E_INVALID;
 3771              		.loc 2 2335 0
 3772 0086 6FF47A73 		mvn	r3, #1000
 3773 008a 25E0     		b	.L176
 3774              	.L170:
2336:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
2337:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2338:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (!DWC_CIRCLEQ_EMPTY_ENTRY(req, queue_entry)) {
 3775              		.loc 2 2338 0
 3776 008c FB69     		ldr	r3, [r7, #28]
 3777 008e 9B69     		ldr	r3, [r3, #24]
 3778 0090 002B     		cmp	r3, #0
 3779 0092 03D1     		bne	.L171
 3780              		.loc 2 2338 0 is_stmt 0 discriminator 1
 3781 0094 FB69     		ldr	r3, [r7, #28]
 3782 0096 DB69     		ldr	r3, [r3, #28]
 3783 0098 002B     		cmp	r3, #0
 3784 009a 08D0     		beq	.L172
 3785              	.L171:
2339:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwc_otg_request_done(ep, req, -DWC_E_RESTART);
 3786              		.loc 2 2339 0 is_stmt 1
 3787 009c B869     		ldr	r0, [r7, #24]
 3788 009e F969     		ldr	r1, [r7, #28]
 3789 00a0 4FF61042 		movw	r2, #64528
 3790 00a4 CFF6FF72 		movt	r2, 65535
 3791 00a8 FFF7FEFF 		bl	dwc_otg_request_done
 3792 00ac 02E0     		b	.L173
 3793              	.L172:
2340:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	} else {
2341:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		req = NULL;
 3794              		.loc 2 2341 0
 3795 00ae 4FF00003 		mov	r3, #0
 3796 00b2 FB61     		str	r3, [r7, #28]
 3797              	.L173:
2342:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
2343:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2344:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_SPINUNLOCK_IRQRESTORE(pcd->lock, flags);
 3798              		.loc 2 2344 0
 3799 00b4 FB68     		ldr	r3, [r7, #12]
 3800 00b6 D3F82024 		ldr	r2, [r3, #1056]
 3801 00ba 7B69     		ldr	r3, [r7, #20]
 3802 00bc 1046     		mov	r0, r2
 3803 00be 1946     		mov	r1, r3
 3804 00c0 FFF7FEFF 		bl	DWC_SPINUNLOCK_IRQRESTORE
2345:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2346:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return req ? 0 : -DWC_E_SHUTDOWN;
 3805              		.loc 2 2346 0
 3806 00c4 FB69     		ldr	r3, [r7, #28]
 3807 00c6 002B     		cmp	r3, #0
 3808 00c8 02D0     		beq	.L174
 3809              		.loc 2 2346 0 is_stmt 0 discriminator 1
 3810 00ca 4FF00003 		mov	r3, #0
 3811 00ce 03E0     		b	.L175
 3812              	.L174:
 3813              		.loc 2 2346 0 discriminator 2
 3814 00d0 4FF60E43 		movw	r3, #64526
 3815 00d4 CFF6FF73 		movt	r3, 65535
 3816              	.L175:
 3817              	.L176:
2347:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2348:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 3818              		.loc 2 2348 0 is_stmt 1
 3819 00d8 1846     		mov	r0, r3
 3820 00da 07F12007 		add	r7, r7, #32
 3821 00de BD46     		mov	sp, r7
 3822 00e0 80BD     		pop	{r7, pc}
 3823              		.cfi_endproc
 3824              	.LFE45:
 3826 00e2 00BF     		.section	.text.dwc_otg_pcd_ep_halt,"ax",%progbits
 3827              		.align	2
 3828              		.global	dwc_otg_pcd_ep_halt
 3829              		.thumb
 3830              		.thumb_func
 3832              	dwc_otg_pcd_ep_halt:
 3833              	.LFB46:
2349:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2350:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** int dwc_otg_pcd_ep_halt(dwc_otg_pcd_t * pcd, void *ep_handle, int value)
2351:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 3834              		.loc 2 2351 0
 3835              		.cfi_startproc
 3836              		@ args = 0, pretend = 0, frame = 40
 3837              		@ frame_needed = 1, uses_anonymous_args = 0
 3838 0000 80B5     		push	{r7, lr}
 3839              	.LCFI81:
 3840              		.cfi_def_cfa_offset 8
 3841              		.cfi_offset 7, -8
 3842              		.cfi_offset 14, -4
 3843 0002 8AB0     		sub	sp, sp, #40
 3844              	.LCFI82:
 3845              		.cfi_def_cfa_offset 48
 3846 0004 00AF     		add	r7, sp, #0
 3847              	.LCFI83:
 3848              		.cfi_def_cfa_register 7
 3849 0006 F860     		str	r0, [r7, #12]
 3850 0008 B960     		str	r1, [r7, #8]
 3851 000a 7A60     		str	r2, [r7, #4]
2352:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_pcd_ep_t *ep;
2353:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_irqflags_t flags;
2354:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	int retval = 0;
 3852              		.loc 2 2354 0
 3853 000c 4FF00003 		mov	r3, #0
 3854 0010 7B62     		str	r3, [r7, #36]
2355:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2356:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	ep = get_ep_from_handle(pcd, ep_handle);
 3855              		.loc 2 2356 0
 3856 0012 F868     		ldr	r0, [r7, #12]
 3857 0014 B968     		ldr	r1, [r7, #8]
 3858 0016 FFF7FEFF 		bl	get_ep_from_handle
 3859 001a 3862     		str	r0, [r7, #32]
2357:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2358:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (!ep || (!ep->desc && ep != &pcd->ep0) ||
 3860              		.loc 2 2358 0
 3861 001c 3B6A     		ldr	r3, [r7, #32]
 3862 001e 002B     		cmp	r3, #0
 3863 0020 12D0     		beq	.L179
 3864              		.loc 2 2358 0 is_stmt 0 discriminator 1
 3865 0022 3B6A     		ldr	r3, [r7, #32]
 3866 0024 1B68     		ldr	r3, [r3, #0]
 3867 0026 002B     		cmp	r3, #0
 3868 0028 05D1     		bne	.L180
 3869 002a FB68     		ldr	r3, [r7, #12]
 3870 002c 03F12402 		add	r2, r3, #36
 3871 0030 3B6A     		ldr	r3, [r7, #32]
 3872 0032 9A42     		cmp	r2, r3
 3873 0034 08D1     		bne	.L179
 3874              	.L180:
2359:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	    (ep->desc && (ep->desc->bmAttributes == UE_ISOCHRONOUS))) {
 3875              		.loc 2 2359 0 is_stmt 1 discriminator 2
 3876 0036 3B6A     		ldr	r3, [r7, #32]
 3877 0038 1B68     		ldr	r3, [r3, #0]
2358:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (!ep || (!ep->desc && ep != &pcd->ep0) ||
 3878              		.loc 2 2358 0 discriminator 2
 3879 003a 002B     		cmp	r3, #0
 3880 003c 07D0     		beq	.L181
 3881              		.loc 2 2359 0
 3882 003e 3B6A     		ldr	r3, [r7, #32]
 3883 0040 1B68     		ldr	r3, [r3, #0]
 3884 0042 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 3885 0044 012B     		cmp	r3, #1
 3886 0046 02D1     		bne	.L181
 3887              	.L179:
2360:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_WARN("%s, bad ep\n", __func__);
2361:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		return -DWC_E_INVALID;
 3888              		.loc 2 2361 0
 3889 0048 6FF47A73 		mvn	r3, #1000
 3890 004c ADE0     		b	.L194
 3891              	.L181:
2362:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
2363:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2364:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_SPINLOCK_IRQSAVE(pcd->lock, &flags);
 3892              		.loc 2 2364 0
 3893 004e FB68     		ldr	r3, [r7, #12]
 3894 0050 D3F82024 		ldr	r2, [r3, #1056]
 3895 0054 07F11C03 		add	r3, r7, #28
 3896 0058 1046     		mov	r0, r2
 3897 005a 1946     		mov	r1, r3
 3898 005c FFF7FEFF 		bl	DWC_SPINLOCK_IRQSAVE
2365:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (!DWC_CIRCLEQ_EMPTY(&ep->queue)) {
 3899              		.loc 2 2365 0
 3900 0060 3B6A     		ldr	r3, [r7, #32]
 3901 0062 5A68     		ldr	r2, [r3, #4]
 3902 0064 3B6A     		ldr	r3, [r7, #32]
 3903 0066 03F10403 		add	r3, r3, #4
 3904 006a 9A42     		cmp	r2, r3
 3905 006c 05D0     		beq	.L183
2366:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_WARN("%d %s XFer In process\n", ep->dwc_ep.num,
2367:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			 ep->dwc_ep.is_in ? "IN" : "OUT");
2368:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		retval = -DWC_E_AGAIN;
 3906              		.loc 2 2368 0
 3907 006e 4FF61143 		movw	r3, #64529
 3908 0072 CFF6FF73 		movt	r3, 65535
 3909 0076 7B62     		str	r3, [r7, #36]
 3910 0078 8EE0     		b	.L184
 3911              	.L183:
2369:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	} else if (value == 0) {
 3912              		.loc 2 2369 0
 3913 007a 7B68     		ldr	r3, [r7, #4]
 3914 007c 002B     		cmp	r3, #0
 3915 007e 09D1     		bne	.L185
2370:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwc_otg_ep_clear_stall(GET_CORE_IF(pcd), &ep->dwc_ep);
 3916              		.loc 2 2370 0
 3917 0080 FB68     		ldr	r3, [r7, #12]
 3918 0082 9A68     		ldr	r2, [r3, #8]
 3919 0084 3B6A     		ldr	r3, [r7, #32]
 3920 0086 03F11003 		add	r3, r3, #16
 3921 008a 1046     		mov	r0, r2
 3922 008c 1946     		mov	r1, r3
 3923 008e FFF7FEFF 		bl	dwc_otg_ep_clear_stall
 3924 0092 81E0     		b	.L184
 3925              	.L185:
2371:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	} else if (value == 1) {
 3926              		.loc 2 2371 0
 3927 0094 7B68     		ldr	r3, [r7, #4]
 3928 0096 012B     		cmp	r3, #1
 3929 0098 69D1     		bne	.L186
2372:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (ep->dwc_ep.is_in == 1 && GET_CORE_IF(pcd)->dma_desc_enable) {
 3930              		.loc 2 2372 0
 3931 009a 3B6A     		ldr	r3, [r7, #32]
 3932 009c 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 3933 009e 03F00103 		and	r3, r3, #1
 3934 00a2 DBB2     		uxtb	r3, r3
 3935 00a4 002B     		cmp	r3, #0
 3936 00a6 4BD0     		beq	.L187
 3937              		.loc 2 2372 0 is_stmt 0 discriminator 1
 3938 00a8 FB68     		ldr	r3, [r7, #12]
 3939 00aa 9B68     		ldr	r3, [r3, #8]
 3940 00ac 93F84730 		ldrb	r3, [r3, #71]	@ zero_extendqisi2
 3941 00b0 002B     		cmp	r3, #0
 3942 00b2 45D0     		beq	.L187
 3943              	.LBB7:
2373:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dtxfsts_data_t txstatus;
2374:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			fifosize_data_t txfifosize;
2375:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2376:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			txfifosize.d32 =
2377:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			    DWC_READ_REG32(&GET_CORE_IF(pcd)->core_global_regs->
 3944              		.loc 2 2377 0 is_stmt 1
 3945 00b4 FB68     		ldr	r3, [r7, #12]
 3946 00b6 9B68     		ldr	r3, [r3, #8]
 3947 00b8 5A68     		ldr	r2, [r3, #4]
2378:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					   dtxfsiz[ep->dwc_ep.tx_fifo_num]);
 3948              		.loc 2 2378 0
 3949 00ba 3B6A     		ldr	r3, [r7, #32]
 3950 00bc 5B7C     		ldrb	r3, [r3, #17]
 3951 00be C3F38303 		ubfx	r3, r3, #2, #4
 3952 00c2 DBB2     		uxtb	r3, r3
2377:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			    DWC_READ_REG32(&GET_CORE_IF(pcd)->core_global_regs->
 3953              		.loc 2 2377 0
 3954 00c4 03F14003 		add	r3, r3, #64
 3955 00c8 4FEA8303 		lsl	r3, r3, #2
 3956 00cc D318     		adds	r3, r2, r3
 3957 00ce 03F10403 		add	r3, r3, #4
 3958 00d2 1846     		mov	r0, r3
 3959 00d4 FFF7FEFF 		bl	DWC_READ_REG32
 3960 00d8 0346     		mov	r3, r0
2376:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			txfifosize.d32 =
 3961              		.loc 2 2376 0
 3962 00da 7B61     		str	r3, [r7, #20]
2379:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			txstatus.d32 =
2380:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			    DWC_READ_REG32(&GET_CORE_IF(pcd)->dev_if->
 3963              		.loc 2 2380 0
 3964 00dc FB68     		ldr	r3, [r7, #12]
 3965 00de 9B68     		ldr	r3, [r3, #8]
 3966 00e0 9A68     		ldr	r2, [r3, #8]
2381:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					   in_ep_regs[ep->dwc_ep.num]->dtxfsts);
 3967              		.loc 2 2381 0
 3968 00e2 3B6A     		ldr	r3, [r7, #32]
 3969 00e4 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 3970 00e6 4FEA8303 		lsl	r3, r3, #2
 3971 00ea D318     		adds	r3, r2, r3
 3972 00ec 5B68     		ldr	r3, [r3, #4]
2380:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			    DWC_READ_REG32(&GET_CORE_IF(pcd)->dev_if->
 3973              		.loc 2 2380 0
 3974 00ee 03F11803 		add	r3, r3, #24
 3975 00f2 1846     		mov	r0, r3
 3976 00f4 FFF7FEFF 		bl	DWC_READ_REG32
 3977 00f8 0346     		mov	r3, r0
2379:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			txstatus.d32 =
 3978              		.loc 2 2379 0
 3979 00fa BB61     		str	r3, [r7, #24]
2382:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2383:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			if (txstatus.b.txfspcavail < txfifosize.b.depth) {
 3980              		.loc 2 2383 0
 3981 00fc 3A8B     		ldrh	r2, [r7, #24]
 3982 00fe FB8A     		ldrh	r3, [r7, #22]
 3983 0100 9A42     		cmp	r2, r3
 3984 0102 05D2     		bcs	.L188
2384:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				DWC_WARN("%s() Data In Tx Fifo\n", __func__);
2385:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				retval = -DWC_E_AGAIN;
 3985              		.loc 2 2385 0
 3986 0104 4FF61143 		movw	r3, #64529
 3987 0108 CFF6FF73 		movt	r3, 65535
 3988 010c 7B62     		str	r3, [r7, #36]
 3989              	.LBE7:
2372:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (ep->dwc_ep.is_in == 1 && GET_CORE_IF(pcd)->dma_desc_enable) {
 3990              		.loc 2 2372 0
 3991 010e 43E0     		b	.L184
 3992              	.L188:
 3993              	.LBB8:
2386:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			} else {
2387:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				if (ep->dwc_ep.num == 0) {
 3994              		.loc 2 2387 0
 3995 0110 3B6A     		ldr	r3, [r7, #32]
 3996 0112 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 3997 0114 002B     		cmp	r3, #0
 3998 0116 03D1     		bne	.L190
2388:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					pcd->ep0state = EP0_STALL;
 3999              		.loc 2 2388 0
 4000 0118 FB68     		ldr	r3, [r7, #12]
 4001 011a 4FF00602 		mov	r2, #6
 4002 011e 1A73     		strb	r2, [r3, #12]
 4003              	.L190:
2389:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				}
2390:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2391:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				ep->stopped = 1;
 4004              		.loc 2 2391 0
 4005 0120 3A6A     		ldr	r2, [r7, #32]
 4006 0122 137B     		ldrb	r3, [r2, #12]
 4007 0124 43F00103 		orr	r3, r3, #1
 4008 0128 1373     		strb	r3, [r2, #12]
2392:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dwc_otg_ep_set_stall(GET_CORE_IF(pcd),
 4009              		.loc 2 2392 0
 4010 012a FB68     		ldr	r3, [r7, #12]
 4011 012c 9A68     		ldr	r2, [r3, #8]
 4012 012e 3B6A     		ldr	r3, [r7, #32]
 4013 0130 03F11003 		add	r3, r3, #16
 4014 0134 1046     		mov	r0, r2
 4015 0136 1946     		mov	r1, r3
 4016 0138 FFF7FEFF 		bl	dwc_otg_ep_set_stall
 4017              	.LBE8:
2372:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (ep->dwc_ep.is_in == 1 && GET_CORE_IF(pcd)->dma_desc_enable) {
 4018              		.loc 2 2372 0
 4019 013c 00BF     		nop
 4020 013e 2BE0     		b	.L184
 4021              	.L187:
2393:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						     &ep->dwc_ep);
2394:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			}
2395:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		} else {
2396:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			if (ep->dwc_ep.num == 0) {
 4022              		.loc 2 2396 0
 4023 0140 3B6A     		ldr	r3, [r7, #32]
 4024 0142 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 4025 0144 002B     		cmp	r3, #0
 4026 0146 03D1     		bne	.L192
2397:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				pcd->ep0state = EP0_STALL;
 4027              		.loc 2 2397 0
 4028 0148 FB68     		ldr	r3, [r7, #12]
 4029 014a 4FF00602 		mov	r2, #6
 4030 014e 1A73     		strb	r2, [r3, #12]
 4031              	.L192:
2398:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			}
2399:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2400:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			ep->stopped = 1;
 4032              		.loc 2 2400 0
 4033 0150 3A6A     		ldr	r2, [r7, #32]
 4034 0152 137B     		ldrb	r3, [r2, #12]
 4035 0154 43F00103 		orr	r3, r3, #1
 4036 0158 1373     		strb	r3, [r2, #12]
2401:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dwc_otg_ep_set_stall(GET_CORE_IF(pcd), &ep->dwc_ep);
 4037              		.loc 2 2401 0
 4038 015a FB68     		ldr	r3, [r7, #12]
 4039 015c 9A68     		ldr	r2, [r3, #8]
 4040 015e 3B6A     		ldr	r3, [r7, #32]
 4041 0160 03F11003 		add	r3, r3, #16
 4042 0164 1046     		mov	r0, r2
 4043 0166 1946     		mov	r1, r3
 4044 0168 FFF7FEFF 		bl	dwc_otg_ep_set_stall
 4045 016c 14E0     		b	.L184
 4046              	.L186:
2402:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
2403:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	} else if (value == 2) {
 4047              		.loc 2 2403 0
 4048 016e 7B68     		ldr	r3, [r7, #4]
 4049 0170 022B     		cmp	r3, #2
 4050 0172 07D1     		bne	.L193
2404:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		ep->dwc_ep.stall_clear_flag = 0;
 4051              		.loc 2 2404 0
 4052 0174 3A6A     		ldr	r2, [r7, #32]
 4053 0176 92F83630 		ldrb	r3, [r2, #54]
 4054 017a 6FF3C303 		bfc	r3, #3, #1
 4055 017e 82F83630 		strb	r3, [r2, #54]
 4056 0182 09E0     		b	.L184
 4057              	.L193:
2405:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	} else if (value == 3) {
 4058              		.loc 2 2405 0
 4059 0184 7B68     		ldr	r3, [r7, #4]
 4060 0186 032B     		cmp	r3, #3
 4061 0188 06D1     		bne	.L184
2406:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		ep->dwc_ep.stall_clear_flag = 1;
 4062              		.loc 2 2406 0
 4063 018a 3A6A     		ldr	r2, [r7, #32]
 4064 018c 92F83630 		ldrb	r3, [r2, #54]
 4065 0190 43F00803 		orr	r3, r3, #8
 4066 0194 82F83630 		strb	r3, [r2, #54]
 4067              	.L184:
2407:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
2408:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2409:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_SPINUNLOCK_IRQRESTORE(pcd->lock, flags);
 4068              		.loc 2 2409 0
 4069 0198 FB68     		ldr	r3, [r7, #12]
 4070 019a D3F82024 		ldr	r2, [r3, #1056]
 4071 019e FB69     		ldr	r3, [r7, #28]
 4072 01a0 1046     		mov	r0, r2
 4073 01a2 1946     		mov	r1, r3
 4074 01a4 FFF7FEFF 		bl	DWC_SPINUNLOCK_IRQRESTORE
2410:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2411:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return retval;
 4075              		.loc 2 2411 0
 4076 01a8 7B6A     		ldr	r3, [r7, #36]
 4077              	.L194:
2412:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 4078              		.loc 2 2412 0
 4079 01aa 1846     		mov	r0, r3
 4080 01ac 07F12807 		add	r7, r7, #40
 4081 01b0 BD46     		mov	sp, r7
 4082 01b2 80BD     		pop	{r7, pc}
 4083              		.cfi_endproc
 4084              	.LFE46:
 4086              		.section	.text.dwc_otg_pcd_rem_wkup_from_suspend,"ax",%progbits
 4087              		.align	2
 4088              		.global	dwc_otg_pcd_rem_wkup_from_suspend
 4089              		.thumb
 4090              		.thumb_func
 4092              	dwc_otg_pcd_rem_wkup_from_suspend:
 4093              	.LFB47:
2413:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2414:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
2415:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * This function initiates remote wakeup of the host from suspend state.
2416:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
2417:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** void dwc_otg_pcd_rem_wkup_from_suspend(dwc_otg_pcd_t * pcd, int set)
2418:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 4094              		.loc 2 2418 0
 4095              		.cfi_startproc
 4096              		@ args = 0, pretend = 0, frame = 24
 4097              		@ frame_needed = 1, uses_anonymous_args = 0
 4098 0000 80B5     		push	{r7, lr}
 4099              	.LCFI84:
 4100              		.cfi_def_cfa_offset 8
 4101              		.cfi_offset 7, -8
 4102              		.cfi_offset 14, -4
 4103 0002 86B0     		sub	sp, sp, #24
 4104              	.LCFI85:
 4105              		.cfi_def_cfa_offset 32
 4106 0004 00AF     		add	r7, sp, #0
 4107              	.LCFI86:
 4108              		.cfi_def_cfa_register 7
 4109 0006 7860     		str	r0, [r7, #4]
 4110 0008 3960     		str	r1, [r7, #0]
2419:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dctl_data_t dctl = { 0 };
 4111              		.loc 2 2419 0
 4112 000a 4FF00003 		mov	r3, #0
 4113 000e 3B61     		str	r3, [r7, #16]
2420:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_core_if_t *core_if = GET_CORE_IF(pcd);
 4114              		.loc 2 2420 0
 4115 0010 7B68     		ldr	r3, [r7, #4]
 4116 0012 9B68     		ldr	r3, [r3, #8]
 4117 0014 7B61     		str	r3, [r7, #20]
2421:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dsts_data_t dsts;
2422:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2423:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dsts.d32 = DWC_READ_REG32(&core_if->dev_if->dev_global_regs->dsts);
 4118              		.loc 2 2423 0
 4119 0016 7B69     		ldr	r3, [r7, #20]
 4120 0018 9B68     		ldr	r3, [r3, #8]
 4121 001a 1B68     		ldr	r3, [r3, #0]
 4122 001c 03F10803 		add	r3, r3, #8
 4123 0020 1846     		mov	r0, r3
 4124 0022 FFF7FEFF 		bl	DWC_READ_REG32
 4125 0026 0346     		mov	r3, r0
 4126 0028 FB60     		str	r3, [r7, #12]
2424:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (!dsts.b.suspsts) {
2425:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_WARN("Remote wakeup while is not in suspend state\n");
2426:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
2427:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* Check if DEVICE_REMOTE_WAKEUP feature enabled */
2428:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (pcd->remote_wakeup_enable) {
 4127              		.loc 2 2428 0
 4128 002a 7B68     		ldr	r3, [r7, #4]
 4129 002c 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 4130 002e 03F00403 		and	r3, r3, #4
 4131 0032 DBB2     		uxtb	r3, r3
 4132 0034 002B     		cmp	r3, #0
 4133 0036 5FD0     		beq	.L195
2429:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (set) {
 4134              		.loc 2 2429 0
 4135 0038 3B68     		ldr	r3, [r7, #0]
 4136 003a 002B     		cmp	r3, #0
 4137 003c 5CD0     		beq	.L195
2430:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2431:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			if (core_if->adp_enable) {
 4138              		.loc 2 2431 0
 4139 003e 7B69     		ldr	r3, [r7, #20]
 4140 0040 D3F89430 		ldr	r3, [r3, #148]
 4141 0044 002B     		cmp	r3, #0
 4142 0046 37D0     		beq	.L197
 4143              	.LBB9:
2432:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				gpwrdn_data_t gpwrdn;
2433:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2434:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dwc_otg_adp_probe_stop(core_if);
 4144              		.loc 2 2434 0
 4145 0048 7869     		ldr	r0, [r7, #20]
 4146 004a FFF7FEFF 		bl	dwc_otg_adp_probe_stop
2435:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2436:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				/* Mask SRP detected interrupt from Power Down Logic */
2437:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				gpwrdn.d32 = 0;
 4147              		.loc 2 2437 0
 4148 004e 4FF00003 		mov	r3, #0
 4149 0052 BB60     		str	r3, [r7, #8]
2438:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				gpwrdn.b.srp_det_msk = 1;
 4150              		.loc 2 2438 0
 4151 0054 BB68     		ldr	r3, [r7, #8]
 4152 0056 43F48033 		orr	r3, r3, #65536
 4153 005a BB60     		str	r3, [r7, #8]
2439:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				DWC_MODIFY_REG32(&core_if->core_global_regs->
 4154              		.loc 2 2439 0
 4155 005c 7B69     		ldr	r3, [r7, #20]
 4156 005e 5B68     		ldr	r3, [r3, #4]
 4157 0060 03F15802 		add	r2, r3, #88
 4158 0064 BB68     		ldr	r3, [r7, #8]
 4159 0066 1046     		mov	r0, r2
 4160 0068 1946     		mov	r1, r3
 4161 006a 4FF00002 		mov	r2, #0
 4162 006e FFF7FEFF 		bl	DWC_MODIFY_REG32
2440:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						 gpwrdn, gpwrdn.d32, 0);
2441:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2442:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				/* Disable Power Down Logic */
2443:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				gpwrdn.d32 = 0;
 4163              		.loc 2 2443 0
 4164 0072 4FF00003 		mov	r3, #0
 4165 0076 BB60     		str	r3, [r7, #8]
2444:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				gpwrdn.b.pmuactv = 1;
 4166              		.loc 2 2444 0
 4167 0078 BB68     		ldr	r3, [r7, #8]
 4168 007a 43F00203 		orr	r3, r3, #2
 4169 007e BB60     		str	r3, [r7, #8]
2445:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				DWC_MODIFY_REG32(&core_if->core_global_regs->
 4170              		.loc 2 2445 0
 4171 0080 7B69     		ldr	r3, [r7, #20]
 4172 0082 5B68     		ldr	r3, [r3, #4]
 4173 0084 03F15802 		add	r2, r3, #88
 4174 0088 BB68     		ldr	r3, [r7, #8]
 4175 008a 1046     		mov	r0, r2
 4176 008c 1946     		mov	r1, r3
 4177 008e 4FF00002 		mov	r2, #0
 4178 0092 FFF7FEFF 		bl	DWC_MODIFY_REG32
2446:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 						 gpwrdn, gpwrdn.d32, 0);
2447:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2448:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				/*
2449:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				 * Initialize the Core for Device mode.
2450:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				 */
2451:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				core_if->op_state = B_PERIPHERAL;
 4179              		.loc 2 2451 0
 4180 0096 7B69     		ldr	r3, [r7, #20]
 4181 0098 4FF00402 		mov	r2, #4
 4182 009c 83F86420 		strb	r2, [r3, #100]
2452:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dwc_otg_core_init(core_if);
 4183              		.loc 2 2452 0
 4184 00a0 7869     		ldr	r0, [r7, #20]
 4185 00a2 FFF7FEFF 		bl	dwc_otg_core_init
2453:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dwc_otg_enable_global_interrupts(core_if);
 4186              		.loc 2 2453 0
 4187 00a6 7869     		ldr	r0, [r7, #20]
 4188 00a8 FFF7FEFF 		bl	dwc_otg_enable_global_interrupts
2454:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				cil_pcd_start(core_if);
 4189              		.loc 2 2454 0
 4190 00ac 7869     		ldr	r0, [r7, #20]
 4191 00ae FFF7FEFF 		bl	cil_pcd_start
2455:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2456:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				dwc_otg_initiate_srp(core_if);
 4192              		.loc 2 2456 0
 4193 00b2 7869     		ldr	r0, [r7, #20]
 4194 00b4 FFF7FEFF 		bl	dwc_otg_initiate_srp
 4195              	.L197:
 4196              	.LBE9:
2457:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			}
2458:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2459:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dctl.b.rmtwkupsig = 1;
 4197              		.loc 2 2459 0
 4198 00b8 3B69     		ldr	r3, [r7, #16]
 4199 00ba 43F00103 		orr	r3, r3, #1
 4200 00be 3B61     		str	r3, [r7, #16]
2460:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_MODIFY_REG32(&core_if->dev_if->
 4201              		.loc 2 2460 0
 4202 00c0 7B69     		ldr	r3, [r7, #20]
 4203 00c2 9B68     		ldr	r3, [r3, #8]
 4204 00c4 1B68     		ldr	r3, [r3, #0]
 4205 00c6 03F10402 		add	r2, r3, #4
 4206 00ca 3B69     		ldr	r3, [r7, #16]
 4207 00cc 1046     		mov	r0, r2
 4208 00ce 4FF00001 		mov	r1, #0
 4209 00d2 1A46     		mov	r2, r3
 4210 00d4 FFF7FEFF 		bl	DWC_MODIFY_REG32
2461:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					 dev_global_regs->dctl, 0, dctl.d32);
2462:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_DEBUGPL(DBG_PCD, "Set Remote Wakeup\n");
2463:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2464:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dwc_mdelay(2);
 4211              		.loc 2 2464 0
 4212 00d8 4FF00200 		mov	r0, #2
 4213 00dc FFF7FEFF 		bl	DWC_MDELAY
2465:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_MODIFY_REG32(&core_if->dev_if->
 4214              		.loc 2 2465 0
 4215 00e0 7B69     		ldr	r3, [r7, #20]
 4216 00e2 9B68     		ldr	r3, [r3, #8]
 4217 00e4 1B68     		ldr	r3, [r3, #0]
 4218 00e6 03F10402 		add	r2, r3, #4
 4219 00ea 3B69     		ldr	r3, [r7, #16]
 4220 00ec 1046     		mov	r0, r2
 4221 00ee 1946     		mov	r1, r3
 4222 00f0 4FF00002 		mov	r2, #0
 4223 00f4 FFF7FEFF 		bl	DWC_MODIFY_REG32
 4224              	.L195:
2466:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 					 dev_global_regs->dctl, dctl.d32, 0);
2467:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			DWC_DEBUGPL(DBG_PCD, "Clear Remote Wakeup\n");
2468:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
2469:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	} else {
2470:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_DEBUGPL(DBG_PCD, "Remote Wakeup is disabled\n");
2471:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
2472:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 4225              		.loc 2 2472 0
 4226 00f8 07F11807 		add	r7, r7, #24
 4227 00fc BD46     		mov	sp, r7
 4228 00fe 80BD     		pop	{r7, pc}
 4229              		.cfi_endproc
 4230              	.LFE47:
 4232              		.section	.text.dwc_otg_pcd_remote_wakeup,"ax",%progbits
 4233              		.align	2
 4234              		.global	dwc_otg_pcd_remote_wakeup
 4235              		.thumb
 4236              		.thumb_func
 4238              	dwc_otg_pcd_remote_wakeup:
 4239              	.LFB48:
2473:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2474:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #ifdef CONFIG_USB_DWC_OTG_LPM
2475:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
2476:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * This function initiates remote wakeup of the host from L1 sleep state.
2477:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
2478:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** void dwc_otg_pcd_rem_wkup_from_sleep(dwc_otg_pcd_t * pcd, int set)
2479:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
2480:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	glpmcfg_data_t lpmcfg;
2481:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_core_if_t *core_if = GET_CORE_IF(pcd);
2482:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2483:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	lpmcfg.d32 = DWC_READ_REG32(&core_if->core_global_regs->glpmcfg);
2484:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2485:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* Check if we are in L1 state */
2486:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (!lpmcfg.b.prt_sleep_sts) {
2487:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_DEBUGPL(DBG_PCD, "Device is not in sleep state\n");
2488:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		return;
2489:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
2490:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2491:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* Check if host allows remote wakeup */
2492:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (!lpmcfg.b.rem_wkup_en) {
2493:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_DEBUGPL(DBG_PCD, "Host does not allow remote wakeup\n");
2494:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		return;
2495:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
2496:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2497:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* Check if Resume OK */
2498:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (!lpmcfg.b.sleep_state_resumeok) {
2499:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_DEBUGPL(DBG_PCD, "Sleep state resume is not OK\n");
2500:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		return;
2501:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
2502:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2503:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	lpmcfg.d32 = DWC_READ_REG32(&core_if->core_global_regs->glpmcfg);
2504:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	lpmcfg.b.en_utmi_sleep = 0;
2505:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	lpmcfg.b.hird_thres &= (~(1 << 4));
2506:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_WRITE_REG32(&core_if->core_global_regs->glpmcfg, lpmcfg.d32);
2507:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2508:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (set) {
2509:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dctl_data_t dctl = {.d32 = 0 };
2510:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dctl.b.rmtwkupsig = 1;
2511:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		/* Set RmtWkUpSig bit to start remote wakup signaling.
2512:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		 * Hardware will automatically clear this bit.
2513:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		 */
2514:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_MODIFY_REG32(&core_if->dev_if->dev_global_regs->dctl,
2515:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				 0, dctl.d32);
2516:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_DEBUGPL(DBG_PCD, "Set Remote Wakeup\n");
2517:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
2518:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2519:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
2520:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #endif
2521:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2522:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
2523:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * Performs remote wakeup.
2524:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
2525:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** void dwc_otg_pcd_remote_wakeup(dwc_otg_pcd_t * pcd, int set)
2526:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 4240              		.loc 2 2526 0
 4241              		.cfi_startproc
 4242              		@ args = 0, pretend = 0, frame = 16
 4243              		@ frame_needed = 1, uses_anonymous_args = 0
 4244 0000 80B5     		push	{r7, lr}
 4245              	.LCFI87:
 4246              		.cfi_def_cfa_offset 8
 4247              		.cfi_offset 7, -8
 4248              		.cfi_offset 14, -4
 4249 0002 84B0     		sub	sp, sp, #16
 4250              	.LCFI88:
 4251              		.cfi_def_cfa_offset 24
 4252 0004 00AF     		add	r7, sp, #0
 4253              	.LCFI89:
 4254              		.cfi_def_cfa_register 7
 4255 0006 7860     		str	r0, [r7, #4]
 4256 0008 3960     		str	r1, [r7, #0]
2527:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_core_if_t *core_if = GET_CORE_IF(pcd);
 4257              		.loc 2 2527 0
 4258 000a 7B68     		ldr	r3, [r7, #4]
 4259 000c 9B68     		ldr	r3, [r3, #8]
 4260 000e FB60     		str	r3, [r7, #12]
2528:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_irqflags_t flags;
2529:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (dwc_otg_is_device_mode(core_if)) {
 4261              		.loc 2 2529 0
 4262 0010 F868     		ldr	r0, [r7, #12]
 4263 0012 FFF7FEFF 		bl	dwc_otg_is_device_mode
 4264 0016 0346     		mov	r3, r0
 4265 0018 002B     		cmp	r3, #0
 4266 001a 14D0     		beq	.L198
2530:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_SPINLOCK_IRQSAVE(pcd->lock, &flags);
 4267              		.loc 2 2530 0
 4268 001c 7B68     		ldr	r3, [r7, #4]
 4269 001e D3F82024 		ldr	r2, [r3, #1056]
 4270 0022 07F10803 		add	r3, r7, #8
 4271 0026 1046     		mov	r0, r2
 4272 0028 1946     		mov	r1, r3
 4273 002a FFF7FEFF 		bl	DWC_SPINLOCK_IRQSAVE
2531:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #ifdef CONFIG_USB_DWC_OTG_LPM
2532:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (core_if->lx_state == DWC_OTG_L1) {
2533:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dwc_otg_pcd_rem_wkup_from_sleep(pcd, set);
2534:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		} else {
2535:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #endif
2536:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dwc_otg_pcd_rem_wkup_from_suspend(pcd, set);
 4274              		.loc 2 2536 0
 4275 002e 7868     		ldr	r0, [r7, #4]
 4276 0030 3968     		ldr	r1, [r7, #0]
 4277 0032 FFF7FEFF 		bl	dwc_otg_pcd_rem_wkup_from_suspend
2537:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #ifdef CONFIG_USB_DWC_OTG_LPM
2538:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
2539:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** #endif
2540:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_SPINUNLOCK_IRQRESTORE(pcd->lock, flags);
 4278              		.loc 2 2540 0
 4279 0036 7B68     		ldr	r3, [r7, #4]
 4280 0038 D3F82024 		ldr	r2, [r3, #1056]
 4281 003c BB68     		ldr	r3, [r7, #8]
 4282 003e 1046     		mov	r0, r2
 4283 0040 1946     		mov	r1, r3
 4284 0042 FFF7FEFF 		bl	DWC_SPINUNLOCK_IRQRESTORE
 4285              	.L198:
2541:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
2542:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return;
2543:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 4286              		.loc 2 2543 0
 4287 0046 07F11007 		add	r7, r7, #16
 4288 004a BD46     		mov	sp, r7
 4289 004c 80BD     		pop	{r7, pc}
 4290              		.cfi_endproc
 4291              	.LFE48:
 4293 004e 00BF     		.section	.text.dwc_otg_pcd_disconnect_us,"ax",%progbits
 4294              		.align	2
 4295              		.global	dwc_otg_pcd_disconnect_us
 4296              		.thumb
 4297              		.thumb_func
 4299              	dwc_otg_pcd_disconnect_us:
 4300              	.LFB49:
2544:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2545:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** void dwc_otg_pcd_disconnect_us(dwc_otg_pcd_t * pcd, int no_of_usecs)
2546:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 4301              		.loc 2 2546 0
 4302              		.cfi_startproc
 4303              		@ args = 0, pretend = 0, frame = 16
 4304              		@ frame_needed = 1, uses_anonymous_args = 0
 4305 0000 80B5     		push	{r7, lr}
 4306              	.LCFI90:
 4307              		.cfi_def_cfa_offset 8
 4308              		.cfi_offset 7, -8
 4309              		.cfi_offset 14, -4
 4310 0002 84B0     		sub	sp, sp, #16
 4311              	.LCFI91:
 4312              		.cfi_def_cfa_offset 24
 4313 0004 00AF     		add	r7, sp, #0
 4314              	.LCFI92:
 4315              		.cfi_def_cfa_register 7
 4316 0006 7860     		str	r0, [r7, #4]
 4317 0008 3960     		str	r1, [r7, #0]
2547:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_core_if_t *core_if = GET_CORE_IF(pcd);
 4318              		.loc 2 2547 0
 4319 000a 7B68     		ldr	r3, [r7, #4]
 4320 000c 9B68     		ldr	r3, [r3, #8]
 4321 000e FB60     		str	r3, [r7, #12]
2548:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dctl_data_t dctl = { 0 };
 4322              		.loc 2 2548 0
 4323 0010 4FF00003 		mov	r3, #0
 4324 0014 BB60     		str	r3, [r7, #8]
2549:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2550:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (dwc_otg_is_device_mode(core_if)) {
 4325              		.loc 2 2550 0
 4326 0016 F868     		ldr	r0, [r7, #12]
 4327 0018 FFF7FEFF 		bl	dwc_otg_is_device_mode
 4328 001c 0346     		mov	r3, r0
 4329 001e 002B     		cmp	r3, #0
 4330 0020 1FD0     		beq	.L201
2551:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dctl.b.sftdiscon = 1;
 4331              		.loc 2 2551 0
 4332 0022 BB68     		ldr	r3, [r7, #8]
 4333 0024 43F00203 		orr	r3, r3, #2
 4334 0028 BB60     		str	r3, [r7, #8]
2552:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_PRINTF("Soft disconnect for %d useconds\n",no_of_usecs);
2553:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_MODIFY_REG32(&core_if->dev_if->dev_global_regs->dctl, 0, dctl.d32);
 4335              		.loc 2 2553 0
 4336 002a FB68     		ldr	r3, [r7, #12]
 4337 002c 9B68     		ldr	r3, [r3, #8]
 4338 002e 1B68     		ldr	r3, [r3, #0]
 4339 0030 03F10402 		add	r2, r3, #4
 4340 0034 BB68     		ldr	r3, [r7, #8]
 4341 0036 1046     		mov	r0, r2
 4342 0038 4FF00001 		mov	r1, #0
 4343 003c 1A46     		mov	r2, r3
 4344 003e FFF7FEFF 		bl	DWC_MODIFY_REG32
2554:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwc_udelay(no_of_usecs);
 4345              		.loc 2 2554 0
 4346 0042 3B68     		ldr	r3, [r7, #0]
 4347 0044 1846     		mov	r0, r3
 4348 0046 FFF7FEFF 		bl	DWC_UDELAY
2555:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_MODIFY_REG32(&core_if->dev_if->dev_global_regs->dctl, dctl.d32,0);
 4349              		.loc 2 2555 0
 4350 004a FB68     		ldr	r3, [r7, #12]
 4351 004c 9B68     		ldr	r3, [r3, #8]
 4352 004e 1B68     		ldr	r3, [r3, #0]
 4353 0050 03F10402 		add	r2, r3, #4
 4354 0054 BB68     		ldr	r3, [r7, #8]
 4355 0056 1046     		mov	r0, r2
 4356 0058 1946     		mov	r1, r3
 4357 005a 4FF00002 		mov	r2, #0
 4358 005e FFF7FEFF 		bl	DWC_MODIFY_REG32
 4359              	.L201:
2556:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		
2557:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	} else{
2558:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		DWC_PRINTF("NOT SUPPORTED IN HOST MODE\n");
2559:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
2560:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return;
2561:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2562:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 4360              		.loc 2 2562 0
 4361 0062 07F11007 		add	r7, r7, #16
 4362 0066 BD46     		mov	sp, r7
 4363 0068 80BD     		pop	{r7, pc}
 4364              		.cfi_endproc
 4365              	.LFE49:
 4367 006a 00BF     		.section	.text.dwc_otg_pcd_wakeup,"ax",%progbits
 4368              		.align	2
 4369              		.global	dwc_otg_pcd_wakeup
 4370              		.thumb
 4371              		.thumb_func
 4373              	dwc_otg_pcd_wakeup:
 4374              	.LFB50:
2563:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2564:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** int dwc_otg_pcd_wakeup(dwc_otg_pcd_t * pcd)
2565:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 4375              		.loc 2 2565 0
 4376              		.cfi_startproc
 4377              		@ args = 0, pretend = 0, frame = 16
 4378              		@ frame_needed = 1, uses_anonymous_args = 0
 4379 0000 80B5     		push	{r7, lr}
 4380              	.LCFI93:
 4381              		.cfi_def_cfa_offset 8
 4382              		.cfi_offset 7, -8
 4383              		.cfi_offset 14, -4
 4384 0002 84B0     		sub	sp, sp, #16
 4385              	.LCFI94:
 4386              		.cfi_def_cfa_offset 24
 4387 0004 00AF     		add	r7, sp, #0
 4388              	.LCFI95:
 4389              		.cfi_def_cfa_register 7
 4390 0006 7860     		str	r0, [r7, #4]
2566:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dsts_data_t dsts;
2567:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	gotgctl_data_t gotgctl;
2568:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2569:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/*
2570:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	 * This function starts the Protocol if no session is in progress. If
2571:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	 * a session is already in progress, but the device is suspended,
2572:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	 * remote wakeup signaling is started.
2573:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	 */
2574:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2575:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	/* Check if valid session */
2576:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	gotgctl.d32 =
2577:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	    DWC_READ_REG32(&(GET_CORE_IF(pcd)->core_global_regs->gotgctl));
 4391              		.loc 2 2577 0
 4392 0008 7B68     		ldr	r3, [r7, #4]
 4393 000a 9B68     		ldr	r3, [r3, #8]
 4394 000c 5B68     		ldr	r3, [r3, #4]
 4395 000e 1846     		mov	r0, r3
 4396 0010 FFF7FEFF 		bl	DWC_READ_REG32
 4397 0014 0346     		mov	r3, r0
2576:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	gotgctl.d32 =
 4398              		.loc 2 2576 0
 4399 0016 BB60     		str	r3, [r7, #8]
2578:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	if (gotgctl.b.bsesvld) {
 4400              		.loc 2 2578 0
 4401 0018 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 4402 001a 03F00803 		and	r3, r3, #8
 4403 001e DBB2     		uxtb	r3, r3
 4404 0020 002B     		cmp	r3, #0
 4405 0022 16D0     		beq	.L205
2579:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		/* Check if suspend state */
2580:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dsts.d32 =
2581:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    DWC_READ_REG32(&
2582:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				   (GET_CORE_IF(pcd)->dev_if->
 4406              		.loc 2 2582 0
 4407 0024 7B68     		ldr	r3, [r7, #4]
 4408 0026 9B68     		ldr	r3, [r3, #8]
 4409 0028 9B68     		ldr	r3, [r3, #8]
 4410 002a 1B68     		ldr	r3, [r3, #0]
2581:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		    DWC_READ_REG32(&
 4411              		.loc 2 2581 0
 4412 002c 03F10803 		add	r3, r3, #8
 4413 0030 1846     		mov	r0, r3
 4414 0032 FFF7FEFF 		bl	DWC_READ_REG32
 4415 0036 0346     		mov	r3, r0
2580:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dsts.d32 =
 4416              		.loc 2 2580 0
 4417 0038 FB60     		str	r3, [r7, #12]
2583:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 				    dev_global_regs->dsts));
2584:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		if (dsts.b.suspsts) {
 4418              		.loc 2 2584 0
 4419 003a 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 4420 003c 03F00103 		and	r3, r3, #1
 4421 0040 DBB2     		uxtb	r3, r3
 4422 0042 002B     		cmp	r3, #0
 4423 0044 08D0     		beq	.L206
2585:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 			dwc_otg_pcd_remote_wakeup(pcd, 1);
 4424              		.loc 2 2585 0
 4425 0046 7868     		ldr	r0, [r7, #4]
 4426 0048 4FF00101 		mov	r1, #1
 4427 004c FFF7FEFF 		bl	dwc_otg_pcd_remote_wakeup
 4428 0050 02E0     		b	.L206
 4429              	.L205:
2586:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		}
2587:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	} else {
2588:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 		dwc_otg_pcd_initiate_srp(pcd);
 4430              		.loc 2 2588 0
 4431 0052 7868     		ldr	r0, [r7, #4]
 4432 0054 FFF7FEFF 		bl	dwc_otg_pcd_initiate_srp
 4433              	.L206:
2589:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	}
2590:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2591:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return 0;
 4434              		.loc 2 2591 0
 4435 0058 4FF00003 		mov	r3, #0
2592:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2593:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 4436              		.loc 2 2593 0
 4437 005c 1846     		mov	r0, r3
 4438 005e 07F11007 		add	r7, r7, #16
 4439 0062 BD46     		mov	sp, r7
 4440 0064 80BD     		pop	{r7, pc}
 4441              		.cfi_endproc
 4442              	.LFE50:
 4444 0066 00BF     		.section	.text.dwc_otg_pcd_initiate_srp,"ax",%progbits
 4445              		.align	2
 4446              		.global	dwc_otg_pcd_initiate_srp
 4447              		.thumb
 4448              		.thumb_func
 4450              	dwc_otg_pcd_initiate_srp:
 4451              	.LFB51:
2594:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2595:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** /**
2596:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * Start the SRP timer to detect when the SRP does not complete within
2597:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * 6 seconds.
2598:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  *
2599:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  * @param pcd the pcd structure.
2600:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c ****  */
2601:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** void dwc_otg_pcd_initiate_srp(dwc_otg_pcd_t * pcd)
2602:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 4452              		.loc 2 2602 0
 4453              		.cfi_startproc
 4454              		@ args = 0, pretend = 0, frame = 16
 4455              		@ frame_needed = 1, uses_anonymous_args = 0
 4456 0000 80B5     		push	{r7, lr}
 4457              	.LCFI96:
 4458              		.cfi_def_cfa_offset 8
 4459              		.cfi_offset 7, -8
 4460              		.cfi_offset 14, -4
 4461 0002 84B0     		sub	sp, sp, #16
 4462              	.LCFI97:
 4463              		.cfi_def_cfa_offset 24
 4464 0004 00AF     		add	r7, sp, #0
 4465              	.LCFI98:
 4466              		.cfi_def_cfa_register 7
 4467 0006 7860     		str	r0, [r7, #4]
2603:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_irqflags_t flags;
2604:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_SPINLOCK_IRQSAVE(pcd->lock, &flags);
 4468              		.loc 2 2604 0
 4469 0008 7B68     		ldr	r3, [r7, #4]
 4470 000a D3F82024 		ldr	r2, [r3, #1056]
 4471 000e 07F10C03 		add	r3, r7, #12
 4472 0012 1046     		mov	r0, r2
 4473 0014 1946     		mov	r1, r3
 4474 0016 FFF7FEFF 		bl	DWC_SPINLOCK_IRQSAVE
2605:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	dwc_otg_initiate_srp(GET_CORE_IF(pcd));
 4475              		.loc 2 2605 0
 4476 001a 7B68     		ldr	r3, [r7, #4]
 4477 001c 9B68     		ldr	r3, [r3, #8]
 4478 001e 1846     		mov	r0, r3
 4479 0020 FFF7FEFF 		bl	dwc_otg_initiate_srp
2606:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	DWC_SPINUNLOCK_IRQRESTORE(pcd->lock, flags);
 4480              		.loc 2 2606 0
 4481 0024 7B68     		ldr	r3, [r7, #4]
 4482 0026 D3F82024 		ldr	r2, [r3, #1056]
 4483 002a FB68     		ldr	r3, [r7, #12]
 4484 002c 1046     		mov	r0, r2
 4485 002e 1946     		mov	r1, r3
 4486 0030 FFF7FEFF 		bl	DWC_SPINUNLOCK_IRQRESTORE
2607:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 4487              		.loc 2 2607 0
 4488 0034 07F11007 		add	r7, r7, #16
 4489 0038 BD46     		mov	sp, r7
 4490 003a 80BD     		pop	{r7, pc}
 4491              		.cfi_endproc
 4492              	.LFE51:
 4494              		.section	.text.dwc_otg_pcd_get_frame_number,"ax",%progbits
 4495              		.align	2
 4496              		.global	dwc_otg_pcd_get_frame_number
 4497              		.thumb
 4498              		.thumb_func
 4500              	dwc_otg_pcd_get_frame_number:
 4501              	.LFB52:
2608:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2609:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** int dwc_otg_pcd_get_frame_number(dwc_otg_pcd_t * pcd)
2610:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 4502              		.loc 2 2610 0
 4503              		.cfi_startproc
 4504              		@ args = 0, pretend = 0, frame = 8
 4505              		@ frame_needed = 1, uses_anonymous_args = 0
 4506 0000 80B5     		push	{r7, lr}
 4507              	.LCFI99:
 4508              		.cfi_def_cfa_offset 8
 4509              		.cfi_offset 7, -8
 4510              		.cfi_offset 14, -4
 4511 0002 82B0     		sub	sp, sp, #8
 4512              	.LCFI100:
 4513              		.cfi_def_cfa_offset 16
 4514 0004 00AF     		add	r7, sp, #0
 4515              	.LCFI101:
 4516              		.cfi_def_cfa_register 7
 4517 0006 7860     		str	r0, [r7, #4]
2611:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return dwc_otg_get_frame_number(GET_CORE_IF(pcd));
 4518              		.loc 2 2611 0
 4519 0008 7B68     		ldr	r3, [r7, #4]
 4520 000a 9B68     		ldr	r3, [r3, #8]
 4521 000c 1846     		mov	r0, r3
 4522 000e FFF7FEFF 		bl	dwc_otg_get_frame_number
 4523 0012 0346     		mov	r3, r0
2612:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 4524              		.loc 2 2612 0
 4525 0014 1846     		mov	r0, r3
 4526 0016 07F10807 		add	r7, r7, #8
 4527 001a BD46     		mov	sp, r7
 4528 001c 80BD     		pop	{r7, pc}
 4529              		.cfi_endproc
 4530              	.LFE52:
 4532 001e 00BF     		.section	.text.dwc_otg_pcd_is_lpm_enabled,"ax",%progbits
 4533              		.align	2
 4534              		.global	dwc_otg_pcd_is_lpm_enabled
 4535              		.thumb
 4536              		.thumb_func
 4538              	dwc_otg_pcd_is_lpm_enabled:
 4539              	.LFB53:
2613:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2614:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** int dwc_otg_pcd_is_lpm_enabled(dwc_otg_pcd_t * pcd)
2615:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 4540              		.loc 2 2615 0
 4541              		.cfi_startproc
 4542              		@ args = 0, pretend = 0, frame = 8
 4543              		@ frame_needed = 1, uses_anonymous_args = 0
 4544              		@ link register save eliminated.
 4545 0000 80B4     		push	{r7}
 4546              	.LCFI102:
 4547              		.cfi_def_cfa_offset 4
 4548              		.cfi_offset 7, -4
 4549 0002 83B0     		sub	sp, sp, #12
 4550              	.LCFI103:
 4551              		.cfi_def_cfa_offset 16
 4552 0004 00AF     		add	r7, sp, #0
 4553              	.LCFI104:
 4554              		.cfi_def_cfa_register 7
 4555 0006 7860     		str	r0, [r7, #4]
2616:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return GET_CORE_IF(pcd)->core_params->lpm_enable;
 4556              		.loc 2 2616 0
 4557 0008 7B68     		ldr	r3, [r7, #4]
 4558 000a 9B68     		ldr	r3, [r3, #8]
 4559 000c 1B68     		ldr	r3, [r3, #0]
 4560 000e D3F8F030 		ldr	r3, [r3, #240]
2617:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 4561              		.loc 2 2617 0
 4562 0012 1846     		mov	r0, r3
 4563 0014 07F10C07 		add	r7, r7, #12
 4564 0018 BD46     		mov	sp, r7
 4565 001a 80BC     		pop	{r7}
 4566 001c 7047     		bx	lr
 4567              		.cfi_endproc
 4568              	.LFE53:
 4570 001e 00BF     		.section	.text.get_b_hnp_enable,"ax",%progbits
 4571              		.align	2
 4572              		.global	get_b_hnp_enable
 4573              		.thumb
 4574              		.thumb_func
 4576              	get_b_hnp_enable:
 4577              	.LFB54:
2618:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2619:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** uint32_t get_b_hnp_enable(dwc_otg_pcd_t * pcd)
2620:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 4578              		.loc 2 2620 0
 4579              		.cfi_startproc
 4580              		@ args = 0, pretend = 0, frame = 8
 4581              		@ frame_needed = 1, uses_anonymous_args = 0
 4582              		@ link register save eliminated.
 4583 0000 80B4     		push	{r7}
 4584              	.LCFI105:
 4585              		.cfi_def_cfa_offset 4
 4586              		.cfi_offset 7, -4
 4587 0002 83B0     		sub	sp, sp, #12
 4588              	.LCFI106:
 4589              		.cfi_def_cfa_offset 16
 4590 0004 00AF     		add	r7, sp, #0
 4591              	.LCFI107:
 4592              		.cfi_def_cfa_register 7
 4593 0006 7860     		str	r0, [r7, #4]
2621:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return pcd->b_hnp_enable;
 4594              		.loc 2 2621 0
 4595 0008 7B68     		ldr	r3, [r7, #4]
 4596 000a 5B7B     		ldrb	r3, [r3, #13]
 4597 000c C3F3C003 		ubfx	r3, r3, #3, #1
 4598 0010 DBB2     		uxtb	r3, r3
2622:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 4599              		.loc 2 2622 0
 4600 0012 1846     		mov	r0, r3
 4601 0014 07F10C07 		add	r7, r7, #12
 4602 0018 BD46     		mov	sp, r7
 4603 001a 80BC     		pop	{r7}
 4604 001c 7047     		bx	lr
 4605              		.cfi_endproc
 4606              	.LFE54:
 4608 001e 00BF     		.section	.text.get_a_hnp_support,"ax",%progbits
 4609              		.align	2
 4610              		.global	get_a_hnp_support
 4611              		.thumb
 4612              		.thumb_func
 4614              	get_a_hnp_support:
 4615              	.LFB55:
2623:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2624:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** uint32_t get_a_hnp_support(dwc_otg_pcd_t * pcd)
2625:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 4616              		.loc 2 2625 0
 4617              		.cfi_startproc
 4618              		@ args = 0, pretend = 0, frame = 8
 4619              		@ frame_needed = 1, uses_anonymous_args = 0
 4620              		@ link register save eliminated.
 4621 0000 80B4     		push	{r7}
 4622              	.LCFI108:
 4623              		.cfi_def_cfa_offset 4
 4624              		.cfi_offset 7, -4
 4625 0002 83B0     		sub	sp, sp, #12
 4626              	.LCFI109:
 4627              		.cfi_def_cfa_offset 16
 4628 0004 00AF     		add	r7, sp, #0
 4629              	.LCFI110:
 4630              		.cfi_def_cfa_register 7
 4631 0006 7860     		str	r0, [r7, #4]
2626:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return pcd->a_hnp_support;
 4632              		.loc 2 2626 0
 4633 0008 7B68     		ldr	r3, [r7, #4]
 4634 000a 5B7B     		ldrb	r3, [r3, #13]
 4635 000c C3F30013 		ubfx	r3, r3, #4, #1
 4636 0010 DBB2     		uxtb	r3, r3
2627:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 4637              		.loc 2 2627 0
 4638 0012 1846     		mov	r0, r3
 4639 0014 07F10C07 		add	r7, r7, #12
 4640 0018 BD46     		mov	sp, r7
 4641 001a 80BC     		pop	{r7}
 4642 001c 7047     		bx	lr
 4643              		.cfi_endproc
 4644              	.LFE55:
 4646 001e 00BF     		.section	.text.get_a_alt_hnp_support,"ax",%progbits
 4647              		.align	2
 4648              		.global	get_a_alt_hnp_support
 4649              		.thumb
 4650              		.thumb_func
 4652              	get_a_alt_hnp_support:
 4653              	.LFB56:
2628:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2629:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** uint32_t get_a_alt_hnp_support(dwc_otg_pcd_t * pcd)
2630:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 4654              		.loc 2 2630 0
 4655              		.cfi_startproc
 4656              		@ args = 0, pretend = 0, frame = 8
 4657              		@ frame_needed = 1, uses_anonymous_args = 0
 4658              		@ link register save eliminated.
 4659 0000 80B4     		push	{r7}
 4660              	.LCFI111:
 4661              		.cfi_def_cfa_offset 4
 4662              		.cfi_offset 7, -4
 4663 0002 83B0     		sub	sp, sp, #12
 4664              	.LCFI112:
 4665              		.cfi_def_cfa_offset 16
 4666 0004 00AF     		add	r7, sp, #0
 4667              	.LCFI113:
 4668              		.cfi_def_cfa_register 7
 4669 0006 7860     		str	r0, [r7, #4]
2631:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return pcd->a_alt_hnp_support;
 4670              		.loc 2 2631 0
 4671 0008 7B68     		ldr	r3, [r7, #4]
 4672 000a 5B7B     		ldrb	r3, [r3, #13]
 4673 000c C3F34013 		ubfx	r3, r3, #5, #1
 4674 0010 DBB2     		uxtb	r3, r3
2632:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 4675              		.loc 2 2632 0
 4676 0012 1846     		mov	r0, r3
 4677 0014 07F10C07 		add	r7, r7, #12
 4678 0018 BD46     		mov	sp, r7
 4679 001a 80BC     		pop	{r7}
 4680 001c 7047     		bx	lr
 4681              		.cfi_endproc
 4682              	.LFE56:
 4684 001e 00BF     		.section	.text.dwc_otg_pcd_get_rmwkup_enable,"ax",%progbits
 4685              		.align	2
 4686              		.global	dwc_otg_pcd_get_rmwkup_enable
 4687              		.thumb
 4688              		.thumb_func
 4690              	dwc_otg_pcd_get_rmwkup_enable:
 4691              	.LFB57:
2633:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 
2634:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** int dwc_otg_pcd_get_rmwkup_enable(dwc_otg_pcd_t * pcd)
2635:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** {
 4692              		.loc 2 2635 0
 4693              		.cfi_startproc
 4694              		@ args = 0, pretend = 0, frame = 8
 4695              		@ frame_needed = 1, uses_anonymous_args = 0
 4696              		@ link register save eliminated.
 4697 0000 80B4     		push	{r7}
 4698              	.LCFI114:
 4699              		.cfi_def_cfa_offset 4
 4700              		.cfi_offset 7, -4
 4701 0002 83B0     		sub	sp, sp, #12
 4702              	.LCFI115:
 4703              		.cfi_def_cfa_offset 16
 4704 0004 00AF     		add	r7, sp, #0
 4705              	.LCFI116:
 4706              		.cfi_def_cfa_register 7
 4707 0006 7860     		str	r0, [r7, #4]
2636:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** 	return pcd->remote_wakeup_enable;
 4708              		.loc 2 2636 0
 4709 0008 7B68     		ldr	r3, [r7, #4]
 4710 000a 5B7B     		ldrb	r3, [r3, #13]
 4711 000c C3F38003 		ubfx	r3, r3, #2, #1
 4712 0010 DBB2     		uxtb	r3, r3
2637:../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.c **** }
 4713              		.loc 2 2637 0
 4714 0012 1846     		mov	r0, r3
 4715 0014 07F10C07 		add	r7, r7, #12
 4716 0018 BD46     		mov	sp, r7
 4717 001a 80BC     		pop	{r7}
 4718 001c 7047     		bx	lr
 4719              		.cfi_endproc
 4720              	.LFE57:
 4722 001e 00BF     		.text
 4723              	.Letext0:
 4724              		.file 3 "c:\\dave-3.1.10\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/i
 4725              		.file 4 "../Dave/Generated/src/USBLD001/driver/../type_CM.h"
 4726              		.file 5 "../Dave/Generated/src/USBLD001/driver/usb.h"
 4727              		.file 6 "../Dave/Generated/src/USBLD001/driver/../dwc_common_port/dwc_os.h"
 4728              		.file 7 "../Dave/Generated/src/USBLD001/driver/dwc_otg_core_if.h"
 4729              		.file 8 "../Dave/Generated/src/USBLD001/driver/dwc_otg_regs.h"
 4730              		.file 9 "../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.h"
 4731              		.file 10 "../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd_if.h"
 4732              		.file 11 "../Dave/Generated/src/USBLD001/driver/dwc_otg_pcd.h"
 4733              		.file 12 "../Dave/Generated/src/USBLD001/driver/dwc_otg_dbg.h"
DEFINED SYMBOLS
                            *ABS*:00000000 dwc_otg_pcd.c
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:20     .text.cil_pcd_start:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:24     .text.cil_pcd_start:00000000 cil_pcd_start
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:72     .text.get_ep_from_handle:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:76     .text.get_ep_from_handle:00000000 get_ep_from_handle
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:183    .text.dwc_otg_request_done:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:188    .text.dwc_otg_request_done:00000000 dwc_otg_request_done
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:324    .text.dwc_otg_request_nuke:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:329    .text.dwc_otg_request_nuke:00000000 dwc_otg_request_nuke
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:381    .text.dwc_otg_pcd_start:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:386    .text.dwc_otg_pcd_start:00000000 dwc_otg_pcd_start
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:418    .text.dwc_otg_pcd_start_cb:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:422    .text.dwc_otg_pcd_start_cb:00000000 dwc_otg_pcd_start_cb
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:473    .text.dwc_otg_pcd_resume_cb:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:477    .text.dwc_otg_pcd_resume_cb:00000000 dwc_otg_pcd_resume_cb
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:555    .text.dwc_otg_pcd_suspend_cb:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:559    .text.dwc_otg_pcd_suspend_cb:00000000 dwc_otg_pcd_suspend_cb
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:614    .text.dwc_otg_pcd_stop_cb:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:618    .text.dwc_otg_pcd_stop_cb:00000000 dwc_otg_pcd_stop_cb
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:653    .data:00000000 $d
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:656    .data:00000000 pcd_callbacks
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:665    .text.dwc_otg_ep_alloc_desc_chain:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:670    .text.dwc_otg_ep_alloc_desc_chain:00000000 dwc_otg_ep_alloc_desc_chain
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:706    .text.dwc_otg_ep_free_desc_chain:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:711    .text.dwc_otg_ep_free_desc_chain:00000000 dwc_otg_ep_free_desc_chain
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:747    .text.dwc_otg_pcd_init_ep:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:751    .text.dwc_otg_pcd_init_ep:00000000 dwc_otg_pcd_init_ep
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:888    .text.dwc_otg_pcd_reinit:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:892    .text.dwc_otg_pcd_reinit:00000000 dwc_otg_pcd_reinit
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:1089   .text.srp_timeout:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:1093   .text.srp_timeout:00000000 srp_timeout
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:1301   .text.start_xfer_tasklet_func:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:1305   .text.start_xfer_tasklet_func:00000000 start_xfer_tasklet_func
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:1414   .rodata:00000000 $d
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:1415   .rodata:00000000 .LC0
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:1418   .rodata:00000010 .LC1
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:1421   .rodata:00000024 .LC2
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:1424   .text.dwc_otg_pcd_init:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:1429   .text.dwc_otg_pcd_init:00000000 dwc_otg_pcd_init
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:1822   .text.dwc_otg_pcd_remove:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:1827   .text.dwc_otg_pcd_remove:00000000 dwc_otg_pcd_remove
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:1969   .text.dwc_otg_pcd_is_dualspeed:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:1974   .text.dwc_otg_pcd_is_dualspeed:00000000 dwc_otg_pcd_is_dualspeed
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:2043   .text.dwc_otg_pcd_is_otg:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:2048   .text.dwc_otg_pcd_is_otg:00000000 dwc_otg_pcd_is_otg
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:2110   .text.assign_tx_fifo:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:2114   .text.assign_tx_fifo:00000000 assign_tx_fifo
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:2190   .text.assign_perio_tx_fifo:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:2194   .text.assign_perio_tx_fifo:00000000 assign_perio_tx_fifo
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:2270   .text.release_perio_tx_fifo:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:2274   .text.release_perio_tx_fifo:00000000 release_perio_tx_fifo
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:2314   .text.release_tx_fifo:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:2318   .text.release_tx_fifo:00000000 release_tx_fifo
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:2358   .text.dwc_otg_pcd_ep_enable:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:2363   .text.dwc_otg_pcd_ep_enable:00000000 dwc_otg_pcd_ep_enable
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:2828   .text.dwc_otg_pcd_ep_disable:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:2833   .text.dwc_otg_pcd_ep_disable:00000000 dwc_otg_pcd_ep_disable
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:3055   .text.dwc_otg_pcd_ep_queue:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:3060   .text.dwc_otg_pcd_ep_queue:00000000 dwc_otg_pcd_ep_queue
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:3674   .text.dwc_otg_pcd_ep_dequeue:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:3679   .text.dwc_otg_pcd_ep_dequeue:00000000 dwc_otg_pcd_ep_dequeue
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:3827   .text.dwc_otg_pcd_ep_halt:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:3832   .text.dwc_otg_pcd_ep_halt:00000000 dwc_otg_pcd_ep_halt
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:4087   .text.dwc_otg_pcd_rem_wkup_from_suspend:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:4092   .text.dwc_otg_pcd_rem_wkup_from_suspend:00000000 dwc_otg_pcd_rem_wkup_from_suspend
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:4233   .text.dwc_otg_pcd_remote_wakeup:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:4238   .text.dwc_otg_pcd_remote_wakeup:00000000 dwc_otg_pcd_remote_wakeup
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:4294   .text.dwc_otg_pcd_disconnect_us:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:4299   .text.dwc_otg_pcd_disconnect_us:00000000 dwc_otg_pcd_disconnect_us
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:4368   .text.dwc_otg_pcd_wakeup:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:4373   .text.dwc_otg_pcd_wakeup:00000000 dwc_otg_pcd_wakeup
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:4450   .text.dwc_otg_pcd_initiate_srp:00000000 dwc_otg_pcd_initiate_srp
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:4445   .text.dwc_otg_pcd_initiate_srp:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:4495   .text.dwc_otg_pcd_get_frame_number:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:4500   .text.dwc_otg_pcd_get_frame_number:00000000 dwc_otg_pcd_get_frame_number
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:4533   .text.dwc_otg_pcd_is_lpm_enabled:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:4538   .text.dwc_otg_pcd_is_lpm_enabled:00000000 dwc_otg_pcd_is_lpm_enabled
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:4571   .text.get_b_hnp_enable:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:4576   .text.get_b_hnp_enable:00000000 get_b_hnp_enable
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:4609   .text.get_a_hnp_support:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:4614   .text.get_a_hnp_support:00000000 get_a_hnp_support
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:4647   .text.get_a_alt_hnp_support:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:4652   .text.get_a_alt_hnp_support:00000000 get_a_alt_hnp_support
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:4685   .text.dwc_otg_pcd_get_rmwkup_enable:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccWTkNSy.s:4690   .text.dwc_otg_pcd_get_rmwkup_enable:00000000 dwc_otg_pcd_get_rmwkup_enable
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.84cfd71c6d2dc0bd4021712beaa9efd8
                           .group:00000000 wm4.stdarg.h.31.b70f21342353634f7b44d85f85f13832
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.stddef.h.187.9e651b6b8b16e149c1353259404973ea
                           .group:00000000 wm4.string.h.17.f8d12df81104836a3f2a5d589ae830d8
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.stddef.h.40.cf962ebbec441b3ac67502735f0765db
                           .group:00000000 wm4.types.h.60.e75c47576398c648cdcf9000ace5e3d8
                           .group:00000000 wm4.type_CM.h.61.3660c940695d7d5fef91de9c4081d0f0
                           .group:00000000 wm4.usb.h.42.867fe1c62636cc2a68970490ddaffd98
                           .group:00000000 wm4.dwc_list.h.80.8da47a4d46ff6c633100fe5858ae15ea
                           .group:00000000 wm4.dwc_otg_dbg.h.74.dce17e0e4baa7dab653ff5db193ad2a8
                           .group:00000000 wm4.dwc_os.h.82.db2ca40c41e2f648d146b8942e5157d9
                           .group:00000000 wm4.dwc_otg_core_if.h.95.37e41eee47e9a4502e4044edf60ea92d
                           .group:00000000 wm4.dwc_otg_regs.h.126.2e3ceb012c63b4493a7f3895cc69d724
                           .group:00000000 wm4.dwc_otg_adp.h.77.1b967e1ac3ef3726f9d560a2ab3c7ddc
                           .group:00000000 wm4.dwc_otg_cil.h.115.51e9f472a778bee570c9e431e948c25d
                           .group:00000000 wm4.dwc_otg_pcd_if.h.81.ec5a07f769dfb405a61cd7f396c2e0b7
                           .group:00000000 wm4.dwc_otg_pcd.h.107.232f5c29d1286a080dc384183199d471

UNDEFINED SYMBOLS
__DWC_FREE
dwc_otg_is_device_mode
dwc_otg_core_dev_init
DWC_TIMER_CANCEL
DWC_SPINUNLOCK
DWC_SPINLOCK
dwc_otg_pcd_stop
__DWC_DMA_ALLOC
__DWC_DMA_FREE
DWC_READ_REG32
DWC_MODIFY_REG32
DWC_WRITE_REG32
dwc_otg_adp_probe_start
dwc_otg_core_init
dwc_otg_enable_global_interrupts
start_next_request
__DWC_ALLOC
DWC_SPINLOCK_ALLOC
dwc_otg_cil_register_pcd_callbacks
DWC_TASK_ALLOC
do_test_mode
DWC_TIMER_ALLOC
DWC_SPINLOCK_FREE
DWC_TASK_FREE
DWC_SPINLOCK_IRQSAVE
DWC_SPINUNLOCK_IRQRESTORE
dwc_otg_ep_activate
dwc_otg_ep_deactivate
dwc_otg_flush_tx_fifo
__DWC_ALLOC_ATOMIC
dwc_otg_ep0_start_transfer
dwc_otg_ep_start_transfer
dwc_otg_ep_clear_stall
dwc_otg_ep_set_stall
dwc_otg_adp_probe_stop
dwc_otg_initiate_srp
DWC_MDELAY
DWC_UDELAY
dwc_otg_get_frame_number
