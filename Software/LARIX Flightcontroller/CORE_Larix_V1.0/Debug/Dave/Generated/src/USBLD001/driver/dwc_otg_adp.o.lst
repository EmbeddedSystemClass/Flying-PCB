   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"dwc_otg_adp.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.dwc_otg_read_hprt0,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	dwc_otg_read_hprt0:
  25              	.LFB1:
  26              		.file 1 "../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h"
   1:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /* ==========================================================================
   2:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * $File: //dwh/usb_iip/dev/software/otg/linux/drivers/dwc_otg_cil.h $
   3:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * $Revision: #115 $
   4:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * $Date: 2010/11/29 $
   5:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * $Change: 1636033 $
   6:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
   7:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Synopsys HS OTG Linux Software Driver and documentation (hereinafter,
   8:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * "Software") is an Unsupported proprietary work of Synopsys, Inc. unless
   9:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * otherwise expressly agreed to in writing between Synopsys and you.
  10:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
  11:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * The Software IS NOT an item of Licensed Software or Licensed Product under
  12:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * any End User Software License Agreement or Agreement for Licensed Product
  13:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * with Synopsys or any supplement thereto. You are permitted to use and
  14:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * redistribute this Software in source and binary forms, with or without
  15:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * modification, provided that redistributions of source code must retain this
  16:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * notice. You may not view, use, disclose, copy or distribute this file or
  17:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * any information contained herein except pursuant to this license grant from
  18:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Synopsys. If you do not agree with this notice, including the disclaimer
  19:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * below, then you are not authorized to use the Software.
  20:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
  21:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * THIS SOFTWARE IS BEING DISTRIBUTED BY SYNOPSYS SOLELY ON AN "AS IS" BASIS
  22:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * ARE HEREBY DISCLAIMED. IN NO EVENT SHALL SYNOPSYS BE LIABLE FOR ANY DIRECT,
  25:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  26:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  28:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  29:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
  30:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
  31:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * DAMAGE.
  32:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * ========================================================================== */
  33:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  34:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /* THIS FILE IS PROVIDED BY DAVE.
  35:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * THIS FILE IS GENERATED.
  36:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
  37:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  38:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /*******************************************************************************
  39:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
  40:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Copyright (C) 2011 Infineon Technologies AG. All rights reserved.
  41:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
  42:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Infineon Technologies AG (Infineon) is supplying this software for use with
  43:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Infineon's microcontrollers.
  44:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This file can be freely distributed within development tools that are
  45:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * supporting such microcontrollers.
  46:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
  47:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  48:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  49:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  50:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
  51:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  52:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
  53:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** ********************************************************************************
  54:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** **                                                                            **
  55:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** **                                                                            **
  56:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** ** PLATFORM : Infineon XMC4000 Series                                         **
  57:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** **                                                                            **
  58:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** ** COMPILER : Compiler Independent                                            **
  59:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** **                                                                            **
  60:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** ** AUTHOR : App Developer                                                     **
  61:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** **                                                                            **
  62:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** ** MAY BE CHANGED BY USER [yes/no]: Yes                                       **
  63:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** **                                                                            **
  64:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** ** MODIFICATION DATE : Apr 8, 2012                                            **
  65:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** **                                                                            **
  66:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** *******************************************************************************/
  67:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  68:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /*******************************************************************************
  69:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** **                       Author(s) Identity                                   **
  70:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** ********************************************************************************
  71:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** **                                                                            **
  72:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** ** Initials    Name                                                           **
  73:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** ** ---------------------------------------------------------------------------**
  74:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** ** CM          App Developer                                                  **
  75:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** *******************************************************************************/
  76:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  77:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  78:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #if !defined(__DWC_CIL_H__)
  79:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define __DWC_CIL_H__
  80:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  81:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef __cplusplus
  82:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern "C"{
  83:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
  84:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  85:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #include "../dwc_common_port/dwc_list.h"
  86:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #include "dwc_otg_dbg.h"
  87:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #include "dwc_otg_regs.h"
  88:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  89:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #include "dwc_otg_core_if.h"
  90:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #include "dwc_otg_adp.h"
  91:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  92:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
  93:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * @file
  94:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This file contains the interface to the Core Interface Layer.
  95:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
  96:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  97:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef DWC_UTE_CFI
  98:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  99:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define MAX_DMA_DESCS_PER_EP	256
 100:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 101:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
 102:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Enumeration for the data buffer mode
 103:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
 104:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** typedef enum _data_buffer_mode {
 105:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	BM_STANDARD = 0,	/* data buffer is in normal mode */
 106:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	BM_SG = 1,		/* data buffer uses the scatter/gather mode */
 107:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	BM_CONCAT = 2,		/* data buffer uses the concatenation mode */
 108:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	BM_CIRCULAR = 3,	/* data buffer uses the circular DMA mode */
 109:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	BM_ALIGN = 4		/* data buffer is in buffer alignment mode */
 110:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } data_buffer_mode_e;
 111:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif //DWC_UTE_CFI
 112:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 113:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Macros defined for DWC OTG HW Release verison */
 114:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 115:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define OTG_CORE_REV_2_60a	0x4F54260A
 116:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define OTG_CORE_REV_2_71a	0x4F54271A
 117:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define OTG_CORE_REV_2_72a	0x4F54272A
 118:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define OTG_CORE_REV_2_80a	0x4F54280A
 119:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define OTG_CORE_REV_2_81a	0x4F54281A
 120:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define OTG_CORE_REV_2_90a	0x4F54290A
 121:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define OTG_CORE_REV_2_91a	0x4F54291A
 122:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define OTG_CORE_REV_2_92a	0x4F54292A
 123:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 124:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
 125:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Information for each ISOC packet.
 126:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
 127:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** typedef struct iso_pkt_info {
 128:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t offset;
 129:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t length;
 130:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t status;
 131:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } iso_pkt_info_t;
 132:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 133:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
 134:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * The <code>dwc_ep</code> structure represents the state of a single
 135:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * endpoint when acting in device mode. It contains the data items
 136:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * needed for an endpoint to be activated and transfer packets.
 137:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
 138:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** typedef struct dwc_ep {
 139:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** EP number used for register address lookup */
 140:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t num;
 141:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** EP direction 0 = OUT */
 142:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned is_in:1;
 143:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** EP active. */
 144:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned active:1;
 145:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 146:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 147:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *Periodic Tx FIFO # for IN EPs For INTR EP set to 0 to use non-periodic Tx FIFO
 148:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * If dedicated Tx FIFOs are enabled for all IN Eps - Tx FIFO # FOR IN EPs*/
 149:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned tx_fifo_num:4;
 150:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** EP type: 0 - Control, 1 - ISOC,	 2 - BULK,	3 - INTR */
 151:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned type:2;
 152:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_EP_TYPE_CONTROL	   0
 153:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_EP_TYPE_ISOC	   1
 154:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_EP_TYPE_BULK	   2
 155:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_EP_TYPE_INTR	   3
 156:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 157:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** DATA start PID for INTR and BULK EP */
 158:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned data_pid_start:1;
 159:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Frame (even/odd) for ISOC EP */
 160:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned even_odd_frame:1;
 161:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Max Packet bytes */
 162:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned maxpacket:11;
 163:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 164:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Max Transfer size */
 165:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t maxxfer;
 166:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 167:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** @name Transfer state */
 168:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** @{ */
 169:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 170:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 171:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Pointer to the beginning of the transfer buffer -- do not modify
 172:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * during transfer.
 173:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 174:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 175:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_dma_t dma_addr;
 176:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 177:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_dma_t dma_desc_addr;
 178:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_dev_dma_desc_t *desc_addr;
 179:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 180:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t *start_xfer_buff;
 181:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** pointer to the transfer buffer */
 182:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t *xfer_buff;
 183:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of bytes to transfer */
 184:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned xfer_len:19;
 185:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of bytes transferred. */
 186:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned xfer_count:19;
 187:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Sent ZLP */
 188:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned sent_zlp:1;
 189:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Total len for control transfer */
 190:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned total_len:19;
 191:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 192:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** stall clear flag */
 193:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned stall_clear_flag:1;
 194:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 195:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef DWC_UTE_CFI
 196:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/* The buffer mode */
 197:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	data_buffer_mode_e buff_mode;
 198:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 199:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/* The chain of DMA descriptors.
 200:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * MAX_DMA_DESCS_PER_EP will be allocated for each active EP.
 201:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 202:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_dma_desc_t *descs;
 203:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 204:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/* The DMA address of the descriptors chain start */
 205:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dma_addr_t descs_dma_addr;
 206:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** This variable stores the length of the last enqueued request */
 207:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t cfi_req_len;
 208:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif				//DWC_UTE_CFI
 209:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 210:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Allocated DMA Desc count */
 211:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t desc_cnt;
 212:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 213:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef DWC_UTE_PER_IO
 214:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Next frame num for which will be setup DMA Desc */
 215:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t xiso_frame_num;
 216:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** bInterval */
 217:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t xiso_bInterval;
 218:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Count of currently active transfers - shall be either 0 or 1 */
 219:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int xiso_active_xfers;
 220:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int xiso_queued_xfers;
 221:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
 222:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef DWC_EN_ISOC
 223:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 224:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Variables specific for ISOC EPs
 225:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *
 226:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 227:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** DMA addresses of ISOC buffers */
 228:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_dma_t dma_addr0;
 229:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_dma_t dma_addr1;
 230:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 231:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_dma_t iso_dma_desc_addr;
 232:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_dev_dma_desc_t *iso_desc_addr;
 233:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 234:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** pointer to the transfer buffers */
 235:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t *xfer_buff0;
 236:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t *xfer_buff1;
 237:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 238:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** number of ISOC Buffer is processing */
 239:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t proc_buf_num;
 240:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Interval of ISOC Buffer processing */
 241:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t buf_proc_intrvl;
 242:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Data size for regular frame */
 243:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t data_per_frame;
 244:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 245:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/* todo - pattern data support is to be implemented in the future */
 246:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Data size for pattern frame */
 247:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t data_pattern_frame;
 248:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Frame number of pattern data */
 249:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t sync_frame;
 250:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 251:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** bInterval */
 252:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t bInterval;
 253:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** ISO Packet number per frame */
 254:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t pkt_per_frm;
 255:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Next frame num for which will be setup DMA Desc */
 256:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t next_frame;
 257:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of packets per buffer processing */
 258:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t pkt_cnt;
 259:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Info for all isoc packets */
 260:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	iso_pkt_info_t *pkt_info;
 261:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** current pkt number */
 262:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t cur_pkt;
 263:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** current pkt number */
 264:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t *cur_pkt_addr;
 265:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** current pkt number */
 266:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t cur_pkt_dma_addr;
 267:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif				/* DWC_EN_ISOC */
 268:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 269:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** @} */
 270:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } dwc_ep_t;
 271:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 272:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /*
 273:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Reasons for halting a host channel.
 274:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
 275:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** typedef enum dwc_otg_halt_status {
 276:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_NO_HALT_STATUS,
 277:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_COMPLETE,
 278:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_URB_COMPLETE,
 279:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_ACK,
 280:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_NAK,
 281:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_NYET,
 282:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_STALL,
 283:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_XACT_ERR,
 284:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_FRAME_OVERRUN,
 285:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_BABBLE_ERR,
 286:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_DATA_TOGGLE_ERR,
 287:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_AHB_ERR,
 288:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_PERIODIC_INCOMPLETE,
 289:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_URB_DEQUEUE
 290:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } dwc_otg_halt_status_e;
 291:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 292:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
 293:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Host channel descriptor. This structure represents the state of a single
 294:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * host channel when acting in host mode. It contains the data items needed to
 295:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * transfer packets to an endpoint via a host channel.
 296:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
 297:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** typedef struct dwc_hc {
 298:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Host channel number used for register address lookup */
 299:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t hc_num;
 300:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 301:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Device to access */
 302:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned dev_addr:7;
 303:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 304:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** EP to access */
 305:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned ep_num:4;
 306:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 307:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** EP direction. 0: OUT, 1: IN */
 308:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned ep_is_in:1;
 309:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 310:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 311:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * EP speed.
 312:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * One of the following values:
 313:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	- DWC_OTG_EP_SPEED_LOW
 314:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	- DWC_OTG_EP_SPEED_FULL
 315:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	- DWC_OTG_EP_SPEED_HIGH
 316:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 317:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned speed:2;
 318:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_EP_SPEED_LOW	0
 319:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_EP_SPEED_FULL	1
 320:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_EP_SPEED_HIGH	2
 321:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 322:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 323:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Endpoint type.
 324:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * One of the following values:
 325:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	- DWC_OTG_EP_TYPE_CONTROL: 0
 326:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	- DWC_OTG_EP_TYPE_ISOC: 1
 327:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	- DWC_OTG_EP_TYPE_BULK: 2
 328:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	- DWC_OTG_EP_TYPE_INTR: 3
 329:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 330:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned ep_type:2;
 331:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 332:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Max packet size in bytes */
 333:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned max_packet:11;
 334:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 335:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 336:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * PID for initial transaction.
 337:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0: DATA0,<br>
 338:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1: DATA2,<br>
 339:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 2: DATA1,<br>
 340:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 3: MDATA (non-Control EP),
 341:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	  SETUP (Control EP)
 342:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 343:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned data_pid_start:2;
 344:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_HC_PID_DATA0 0
 345:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_HC_PID_DATA2 1
 346:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_HC_PID_DATA1 2
 347:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_HC_PID_MDATA 3
 348:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_HC_PID_SETUP 3
 349:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 350:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of periodic transactions per (micro)frame */
 351:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned multi_count:2;
 352:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 353:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** @name Transfer State */
 354:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** @{ */
 355:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 356:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Pointer to the current transfer buffer position. */
 357:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t *xfer_buff;
 358:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 359:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * In Buffer DMA mode this buffer will be used
 360:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * if xfer_buff is not DWORD aligned.
 361:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 362:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_dma_t align_buff;
 363:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Total number of bytes to transfer. */
 364:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t xfer_len;
 365:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of bytes transferred so far. */
 366:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t xfer_count;
 367:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Packet count at start of transfer.*/
 368:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t start_pkt_count;
 369:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 370:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 371:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Flag to indicate whether the transfer has been started. Set to 1 if
 372:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * it has been started, 0 otherwise.
 373:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 374:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t xfer_started;
 375:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 376:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 377:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Set to 1 to indicate that a PING request should be issued on this
 378:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * channel. If 0, process normally.
 379:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 380:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t do_ping;
 381:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 382:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 383:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Set to 1 to indicate that the error count for this transaction is
 384:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * non-zero. Set to 0 if the error count is 0.
 385:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 386:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t error_state;
 387:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 388:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 389:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Set to 1 to indicate that this channel should be halted the next
 390:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * time a request is queued for the channel. This is necessary in
 391:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * slave mode if no request queue space is available when an attempt
 392:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * is made to halt the channel.
 393:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 394:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t halt_on_queue;
 395:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 396:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 397:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Set to 1 if the host channel has been halted, but the core is not
 398:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * finished flushing queued requests. Otherwise 0.
 399:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 400:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t halt_pending;
 401:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 402:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 403:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Reason for halting the host channel.
 404:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 405:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_halt_status_e halt_status;
 406:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 407:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/*
 408:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Split settings for the host channel
 409:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 410:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t do_split;		   /**< Enable split for the channel */
 411:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t complete_split;	   /**< Enable complete split */
 412:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t hub_addr;		   /**< Address of high speed hub */
 413:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 414:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t port_addr;		   /**< Port of the low/full speed device */
 415:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Split transaction position
 416:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * One of the following values:
 417:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	  - DWC_HCSPLIT_XACTPOS_MID
 418:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	  - DWC_HCSPLIT_XACTPOS_BEGIN
 419:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	  - DWC_HCSPLIT_XACTPOS_END
 420:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	  - DWC_HCSPLIT_XACTPOS_ALL */
 421:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t xact_pos;
 422:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 423:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Set when the host channel does a short read. */
 424:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t short_read;
 425:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 426:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 427:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Number of requests issued for this channel since it was assigned to
 428:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * the current transfer (not counting PINGs).
 429:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 430:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t requests;
 431:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 432:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 433:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Queue Head for the transfer being processed by this channel.
 434:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 435:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	struct dwc_otg_qh *qh;
 436:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 437:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** @} */
 438:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 439:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Entry in list of host channels. */
 440:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 DWC_CIRCLEQ_ENTRY(dwc_hc) hc_list_entry;
 441:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 442:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** @name Descriptor DMA support */
 443:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** @{ */
 444:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 445:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of Transfer Descriptors */
 446:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t ntd;
 447:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 448:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Descriptor List DMA address */
 449:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_dma_t desc_list_addr;
 450:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 451:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Scheduling micro-frame bitmap. */
 452:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t schinfo;
 453:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 454:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** @} */
 455:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } dwc_hc_t;
 456:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 457:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
 458:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * The following parameters may be specified when starting the module. These
 459:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * parameters define how the DWC_otg controller should be configured.
 460:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
 461:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** typedef struct dwc_otg_core_params {
 462:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t opt;
 463:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 464:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 465:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Specifies the OTG capabilities. The driver will automatically
 466:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * detect the value for this parameter if none is specified.
 467:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - HNP and SRP capable (default)
 468:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - SRP Only capable
 469:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 2 - No HNP/SRP capable
 470:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 471:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t otg_cap;
 472:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 473:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 474:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Specifies whether to use slave or DMA mode for accessing the data
 475:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * FIFOs. The driver will automatically detect the value for this
 476:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * parameter if none is specified.
 477:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - Slave
 478:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - DMA (default, if available)
 479:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 480:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t dma_enable;
 481:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 482:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 483:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * When DMA mode is enabled specifies whether to use address DMA or DMA Descritor mode for accessi
 484:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * FIFOs in device mode. The driver will automatically detect the value for this
 485:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * parameter if none is specified.
 486:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - address DMA
 487:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - DMA Descriptor(default, if available)
 488:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 489:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t dma_desc_enable;
 490:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** The DMA Burst size (applicable only for External DMA
 491:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Mode). 1, 4, 8 16, 32, 64, 128, 256 (default 32)
 492:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 493:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t dma_burst_size;	/* Translate this to GAHBCFG values */
 494:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 495:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 496:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Specifies the maximum speed of operation in host and device mode.
 497:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * The actual speed depends on the speed of the attached device and
 498:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * the value of phy_type. The actual speed depends on the speed of the
 499:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * attached device.
 500:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - High Speed (default)
 501:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Full Speed
 502:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 503:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t speed;
 504:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Specifies whether low power mode is supported when attached
 505:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	to a Full Speed or Low Speed device in host mode.
 506:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - Don't support low power mode (default)
 507:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Support low power mode
 508:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 509:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t host_support_fs_ls_low_power;
 510:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 511:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Specifies the PHY clock rate in low power mode when connected to a
 512:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Low Speed device in host mode. This parameter is applicable only if
 513:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * HOST_SUPPORT_FS_LS_LOW_POWER is enabled. If PHY_TYPE is set to FS
 514:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * then defaults to 6 MHZ otherwise 48 MHZ.
 515:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *
 516:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - 48 MHz
 517:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - 6 MHz
 518:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 519:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t host_ls_low_power_phy_clk;
 520:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 521:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 522:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - Use cC FIFO size parameters
 523:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Allow dynamic FIFO sizing (default)
 524:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 525:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t enable_dynamic_fifo;
 526:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 527:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Total number of 4-byte words in the data FIFO memory. This
 528:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * memory includes the Rx FIFO, non-periodic Tx FIFO, and periodic
 529:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Tx FIFOs.
 530:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 32 to 32768 (default 8192)
 531:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Note: The total FIFO memory depth in the FPGA configuration is 8192.
 532:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 533:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t data_fifo_size;
 534:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 535:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of 4-byte words in the Rx FIFO in device mode when dynamic
 536:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * FIFO sizing is enabled.
 537:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 16 to 32768 (default 1064)
 538:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 539:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t dev_rx_fifo_size;
 540:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 541:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of 4-byte words in the non-periodic Tx FIFO in device mode
 542:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * when dynamic FIFO sizing is enabled.
 543:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 16 to 32768 (default 1024)
 544:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 545:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t dev_nperio_tx_fifo_size;
 546:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 547:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of 4-byte words in each of the periodic Tx FIFOs in device
 548:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * mode when dynamic FIFO sizing is enabled.
 549:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 4 to 768 (default 256)
 550:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 551:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t dev_perio_tx_fifo_size[MAX_PERIO_FIFOS];
 552:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 553:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of 4-byte words in the Rx FIFO in host mode when dynamic
 554:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * FIFO sizing is enabled.
 555:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 16 to 32768 (default 1024)
 556:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 557:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t host_rx_fifo_size;
 558:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 559:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of 4-byte words in the non-periodic Tx FIFO in host mode
 560:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * when Dynamic FIFO sizing is enabled in the core.
 561:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 16 to 32768 (default 1024)
 562:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 563:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t host_nperio_tx_fifo_size;
 564:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 565:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of 4-byte words in the host periodic Tx FIFO when dynamic
 566:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * FIFO sizing is enabled.
 567:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 16 to 32768 (default 1024)
 568:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 569:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t host_perio_tx_fifo_size;
 570:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 571:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** The maximum transfer size supported in bytes.
 572:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 2047 to 65,535  (default 65,535)
 573:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 574:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t max_transfer_size;
 575:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 576:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** The maximum number of packets in a transfer.
 577:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 15 to 511  (default 511)
 578:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 579:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t max_packet_count;
 580:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 581:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** The number of host channel registers to use.
 582:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 to 16 (default 12)
 583:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Note: The FPGA configuration supports a maximum of 12 host channels.
 584:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 585:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t host_channels;
 586:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 587:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** The number of endpoints in addition to EP0 available for device
 588:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * mode operations.
 589:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 to 15 (default 6 IN and OUT)
 590:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Note: The FPGA configuration supports a maximum of 6 IN and OUT
 591:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * endpoints in addition to EP0.
 592:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 593:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t dev_endpoints;
 594:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 595:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		/**
 596:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		 * Specifies the type of PHY interface to use. By default, the driver
 597:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		 * will automatically detect the phy_type.
 598:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		 *
 599:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		 * 0 - Full Speed PHY
 600:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		 * 1 - UTMI+ (default)
 601:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		 * 2 - ULPI
 602:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		 */
 603:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t phy_type;
 604:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 605:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 606:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Specifies the UTMI+ Data Width. This parameter is
 607:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * applicable for a PHY_TYPE of UTMI+ or ULPI. (For a ULPI
 608:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * PHY_TYPE, this parameter indicates the data width between
 609:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * the MAC and the ULPI Wrapper.) Also, this parameter is
 610:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * applicable only if the OTG_HSPHY_WIDTH cC parameter was set
 611:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * to "8 and 16 bits", meaning that the core has been
 612:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * configured to work at either data path width.
 613:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *
 614:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 8 or 16 bits (default 16)
 615:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 616:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t phy_utmi_width;
 617:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 618:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 619:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Specifies whether the ULPI operates at double or single
 620:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * data rate. This parameter is only applicable if PHY_TYPE is
 621:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * ULPI.
 622:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *
 623:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - single data rate ULPI interface with 8 bit wide data
 624:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * bus (default)
 625:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - double data rate ULPI interface with 4 bit wide data
 626:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * bus
 627:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 628:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t phy_ulpi_ddr;
 629:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 630:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 631:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Specifies whether to use the internal or external supply to
 632:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * drive the vbus with a ULPI phy.
 633:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 634:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t phy_ulpi_ext_vbus;
 635:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 636:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 637:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Specifies whether to use the I2Cinterface for full speed PHY. This
 638:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * parameter is only applicable if PHY_TYPE is FS.
 639:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - No (default)
 640:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Yes
 641:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 642:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t i2c_enable;
 643:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 644:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t ulpi_fs_ls;
 645:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 646:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t ts_dline;
 647:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 648:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 649:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Specifies whether dedicated transmit FIFOs are
 650:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * enabled for non periodic IN endpoints in device mode
 651:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - No
 652:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Yes
 653:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 654:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t en_multiple_tx_fifo;
 655:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 656:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of 4-byte words in each of the Tx FIFOs in device
 657:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * mode when dynamic FIFO sizing is enabled.
 658:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 4 to 768 (default 256)
 659:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 660:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t dev_tx_fifo_size[MAX_TX_FIFOS];
 661:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 662:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Thresholding enable flag-
 663:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * bit 0 - enable non-ISO Tx thresholding
 664:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * bit 1 - enable ISO Tx thresholding
 665:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * bit 2 - enable Rx thresholding
 666:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 667:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t thr_ctl;
 668:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 669:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Thresholding length for Tx
 670:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	FIFOs in 32 bit DWORDs
 671:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 672:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t tx_thr_length;
 673:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 674:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Thresholding length for Rx
 675:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	FIFOs in 32 bit DWORDs
 676:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 677:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t rx_thr_length;
 678:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 679:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 680:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Specifies whether LPM (Link Power Management) support is enabled
 681:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 682:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t lpm_enable;
 683:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 684:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Per Transfer Interrupt
 685:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	mode enable flag
 686:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Enabled
 687:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - Disabled
 688:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 689:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t pti_enable;
 690:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 691:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Multi Processor Interrupt
 692:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	mode enable flag
 693:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Enabled
 694:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - Disabled
 695:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 696:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t mpi_enable;
 697:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 698:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** IS_USB Capability
 699:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Enabled
 700:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - Disabled
 701:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 702:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t ic_usb_cap;
 703:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 704:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** AHB Threshold Ratio
 705:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 2'b00 AHB Threshold = 	MAC Threshold
 706:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 2'b01 AHB Threshold = 1/2 	MAC Threshold
 707:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 2'b10 AHB Threshold = 1/4	MAC Threshold
 708:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 2'b11 AHB Threshold = 1/8	MAC Threshold
 709:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 710:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t ahb_thr_ratio;
 711:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 712:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** ADP Support
 713:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Enabled
 714:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - Disabled
 715:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 716:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t adp_supp_enable;
 717:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 718:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** HFIR Reload Control
 719:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - The HFIR cannot be reloaded dynamically.
 720:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Allow dynamic reloading of the HFIR register during runtime.
 721:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 722:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t reload_ctl;
 723:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 724:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Core Power down mode
 725:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - No Power Down is enabled
 726:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Reserved
 727:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 2 - Complete Power Down (Hibernation)
 728:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 729:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t power_down;
 730:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 731:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** OTG revision supported
 732:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - OTG 1.3 revision
 733:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - OTG 2.0 revision
 734:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 735:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t otg_ver;
 736:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 737:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } dwc_otg_core_params_t;
 738:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 739:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef DEBUG
 740:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** struct dwc_otg_core_if;
 741:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** typedef struct hc_xfer_info {
 742:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	struct dwc_otg_core_if *core_if;
 743:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_hc_t *hc;
 744:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } hc_xfer_info_t;
 745:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
 746:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /*
 747:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Device States
 748:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
 749:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** typedef enum dwc_otg_lx_state {
 750:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** On state */
 751:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_L0,
 752:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** LPM sleep state*/
 753:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_L1,
 754:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** USB suspend state*/
 755:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_L2,
 756:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Off state*/
 757:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_L3
 758:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } dwc_otg_lx_state_e;
 759:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 760:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** struct dwc_otg_global_regs_backup {
 761:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t gotgctl_local;
 762:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t gintmsk_local;
 763:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t gahbcfg_local;
 764:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t gusbcfg_local;
 765:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t grxfsiz_local;
 766:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t gnptxfsiz_local;
 767:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef CONFIG_USB_DWC_OTG_LPM
 768:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t glpmcfg_local;
 769:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
 770:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t gi2cctl_local;
 771:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t hptxfsiz_local;
 772:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t pcgcctl_local;
 773:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t gdfifocfg_local;
 774:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t dtxfsiz_local[MAX_EPS_CHANNELS];
 775:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t gpwrdn_local;
 776:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** };
 777:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 778:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** struct dwc_otg_host_regs_backup {
 779:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t hcfg_local;
 780:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t haintmsk_local;
 781:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t hcintmsk_local[MAX_EPS_CHANNELS];
 782:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t hprt0_local;
 783:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t hfir_local;
 784:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** };
 785:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 786:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** struct dwc_otg_dev_regs_backup {
 787:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t dcfg;
 788:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t dctl;
 789:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t daintmsk;
 790:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t diepmsk;
 791:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t doepmsk;
 792:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t diepctl[MAX_EPS_CHANNELS];
 793:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t dieptsiz[MAX_EPS_CHANNELS];
 794:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t diepdma[MAX_EPS_CHANNELS];
 795:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t doepfn[MAX_EPS_CHANNELS];
 796:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** };
 797:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
 798:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * The <code>dwc_otg_core_if</code> structure contains information needed to manage
 799:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * the DWC_otg controller acting in either host or device mode. It
 800:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * represents the programming view of the controller as a whole.
 801:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
 802:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** struct dwc_otg_core_if {
 803:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Parameters that define how the core should be configured.*/
 804:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_core_params_t *core_params;
 805:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 806:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Core Global registers starting at offset 000h. */
 807:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_core_global_regs_t *core_global_regs;
 808:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 809:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Device-specific information */
 810:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_dev_if_t *dev_if;
 811:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Host-specific information */
 812:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_host_if_t *host_if;
 813:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 814:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Value from SNPSID register */
 815:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t snpsid;
 816:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 817:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/*
 818:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Set to 1 if the core PHY interface bits in USBCFG have been
 819:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * initialized.
 820:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 821:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t phy_init_done;
 822:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 823:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/*
 824:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * SRP Success flag, set by srp success interrupt in FS I2C mode
 825:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 826:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t srp_success;
 827:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t srp_timer_started;
 828:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Timer for SRP. If it expires before SRP is successful
 829:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * clear the SRP. */
 830:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_timer_t *srp_timer;
 831:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 832:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef DWC_DEV_SRPCAP
 833:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/* This timer is needed to power on the hibernated host core if SRP is not
 834:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * initiated on connected SRP capable device for limited period of time
 835:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 836:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t pwron_timer_started;
 837:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_timer_t *pwron_timer;
 838:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
 839:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/* Common configuration information */
 840:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Power and Clock Gating Control Register */
 841:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	volatile uint32_t *pcgcctl;
 842:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_PCGCCTL_OFFSET 0xE00
 843:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 844:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Push/pop addresses for endpoints or host channels.*/
 845:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t *data_fifo[MAX_EPS_CHANNELS];
 846:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_DATA_FIFO_OFFSET 0x1000
 847:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_DATA_FIFO_SIZE 0x1000
 848:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 849:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Total RAM for FIFOs (Bytes) */
 850:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t total_fifo_size;
 851:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Size of Rx FIFO (Bytes) */
 852:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t rx_fifo_size;
 853:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Size of Non-periodic Tx FIFO (Bytes) */
 854:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t nperio_tx_fifo_size;
 855:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 856:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** 1 if DMA is enabled, 0 otherwise. */
 857:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t dma_enable;
 858:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 859:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** 1 if DMA descriptor is enabled, 0 otherwise. */
 860:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t dma_desc_enable;
 861:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 862:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** 1 if PTI Enhancement mode is enabled, 0 otherwise. */
 863:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t pti_enh_enable;
 864:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 865:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** 1 if MPI Enhancement mode is enabled, 0 otherwise. */
 866:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t multiproc_int_enable;
 867:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 868:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** 1 if dedicated Tx FIFOs are enabled, 0 otherwise. */
 869:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t en_multiple_tx_fifo;
 870:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 871:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Set to 1 if multiple packets of a high-bandwidth transfer is in
 872:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * process of being queued */
 873:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t queuing_high_bandwidth;
 874:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 875:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Hardware Configuration -- stored here for convenience.*/
 876:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hwcfg1_data_t hwcfg1;
 877:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hwcfg2_data_t hwcfg2;
 878:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hwcfg3_data_t hwcfg3;
 879:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hwcfg4_data_t hwcfg4;
 880:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 881:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Host and Device Configuration -- stored here for convenience.*/
 882:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hcfg_data_t hcfg;
 883:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dcfg_data_t dcfg;
 884:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 885:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** The operational State, during transations
 886:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * (a_host>>a_peripherial and b_device=>b_host) this may not
 887:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * match the core but allows the software to determine
 888:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * transitions.
 889:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 890:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t op_state;
 891:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 892:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 893:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Set to 1 if the HCD needs to be restarted on a session request
 894:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * interrupt. This is required if no connector ID status change has
 895:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * occurred since the HCD was last disconnected.
 896:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 897:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t restart_hcd_on_session_req;
 898:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 899:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** HCD callbacks */
 900:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** A-Device is a_host */
 901:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define A_HOST		(1)
 902:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** A-Device is a_suspend */
 903:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define A_SUSPEND	(2)
 904:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** A-Device is a_peripherial */
 905:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define A_PERIPHERAL	(3)
 906:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** B-Device is operating as a Peripheral. */
 907:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define B_PERIPHERAL	(4)
 908:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** B-Device is operating as a Host. */
 909:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define B_HOST		(5)
 910:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 911:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** HCD callbacks */
 912:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	struct dwc_otg_cil_callbacks *hcd_cb;
 913:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** PCD callbacks */
 914:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	struct dwc_otg_cil_callbacks *pcd_cb;
 915:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 916:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Device mode Periodic Tx FIFO Mask */
 917:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t p_tx_msk;
 918:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Device mode Periodic Tx FIFO Mask */
 919:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t tx_msk;
 920:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 921:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Workqueue object used for handling several interrupts */
 922:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_workq_t *wq_otg;
 923:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 924:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Timer object used for handling "Wakeup Detected" Interrupt */
 925:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_timer_t *wkp_timer;
 926:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 927:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef DEBUG
 928:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t start_hcchar_val[MAX_EPS_CHANNELS];
 929:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 930:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hc_xfer_info_t hc_xfer_info[MAX_EPS_CHANNELS];
 931:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_timer_t *hc_xfer_timer[MAX_EPS_CHANNELS];
 932:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 933:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t hfnum_7_samples;
 934:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint64_t hfnum_7_frrem_accum;
 935:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t hfnum_0_samples;
 936:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint64_t hfnum_0_frrem_accum;
 937:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t hfnum_other_samples;
 938:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint64_t hfnum_other_frrem_accum;
 939:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
 940:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 941:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef DWC_UTE_CFI
 942:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t pwron_rxfsiz;
 943:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t pwron_gnptxfsiz;
 944:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t pwron_txfsiz[15];
 945:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 946:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t init_rxfsiz;
 947:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t init_gnptxfsiz;
 948:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t init_txfsiz[15];
 949:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
 950:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 951:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Lx state of device */
 952:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_lx_state_e lx_state;
 953:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 954:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Saved Core Global registers */
 955:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	struct dwc_otg_global_regs_backup *gr_backup;
 956:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Saved Host registers */
 957:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	struct dwc_otg_host_regs_backup *hr_backup;
 958:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Saved Device registers */
 959:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	struct dwc_otg_dev_regs_backup *dr_backup;
 960:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 961:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Power Down Enable */
 962:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t power_down;
 963:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 964:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** ADP support Enable */
 965:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t adp_enable;
 966:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 967:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** ADP structure object */
 968:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_adp_t adp;
 969:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 970:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** hibernation/suspend flag */
 971:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int hibernation_suspend;
 972:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 973:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** OTG revision supported */
 974:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t otg_ver;
 975:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 976:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** OTG status flag used for HNP polling */
 977:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t otg_sts;
 978:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 979:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Pointer to either hcd->lock or pcd->lock */
 980:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_spinlock_t *lock;
 981:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** };
 982:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 983:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef DEBUG
 984:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /*
 985:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This function is called when transfer is timed out.
 986:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
 987:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void hc_xfer_timeout(void *ptr);
 988:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
 989:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 990:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /*
 991:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * The following functions are functions for works
 992:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * using during handling some interrupts
 993:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
 994:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void w_conn_id_status_change(void *p);
 995:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 996:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void w_wakeup_detected(void *p);
 997:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 998:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Saves global register values into system memory. */
 999:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int dwc_otg_save_global_regs(dwc_otg_core_if_t * core_if);
1000:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Saves device register values into system memory. */
1001:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int dwc_otg_save_dev_regs(dwc_otg_core_if_t * core_if);
1002:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Saves host register values into system memory. */
1003:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int dwc_otg_save_host_regs(dwc_otg_core_if_t * core_if);
1004:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Restore global register values. */
1005:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int dwc_otg_restore_global_regs(dwc_otg_core_if_t * core_if);
1006:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Restore host register values. */
1007:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int dwc_otg_restore_host_regs(dwc_otg_core_if_t * core_if, int reset);
1008:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Restore device register values. */
1009:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int dwc_otg_restore_dev_regs(dwc_otg_core_if_t * core_if,
1010:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				    int rem_wakeup);
1011:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int restore_lpm_i2c_regs(dwc_otg_core_if_t * core_if);
1012:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int restore_essential_regs(dwc_otg_core_if_t * core_if, int rmode,
1013:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				  int is_host);
1014:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1015:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int dwc_otg_host_hibernation_restore(dwc_otg_core_if_t * core_if,
1016:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					    int restore_mode, int reset);
1017:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int dwc_otg_device_hibernation_restore(dwc_otg_core_if_t * core_if,
1018:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					      int rem_wakeup, int reset);
1019:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1020:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /*
1021:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * The following functions support initialization of the CIL driver component
1022:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * and the DWC_otg controller.
1023:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1024:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_core_host_init(dwc_otg_core_if_t * _core_if);
1025:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_core_dev_init(dwc_otg_core_if_t * _core_if);
1026:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1027:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** @name Device CIL Functions
1028:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * The following functions support managing the DWC_otg controller in device
1029:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * mode.
1030:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1031:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**@{*/
1032:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_wakeup(dwc_otg_core_if_t * _core_if);
1033:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_read_setup_packet(dwc_otg_core_if_t * _core_if,
1034:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				      uint32_t * _dest);
1035:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern uint32_t dwc_otg_get_frame_number(dwc_otg_core_if_t * _core_if);
1036:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_ep0_activate(dwc_otg_core_if_t * _core_if, dwc_ep_t * _ep);
1037:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_ep_activate(dwc_otg_core_if_t * _core_if, dwc_ep_t * _ep);
1038:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_ep_deactivate(dwc_otg_core_if_t * _core_if, dwc_ep_t * _ep);
1039:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_ep_start_transfer(dwc_otg_core_if_t * _core_if,
1040:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				      dwc_ep_t * _ep);
1041:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_ep_start_zl_transfer(dwc_otg_core_if_t * _core_if,
1042:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					 dwc_ep_t * _ep);
1043:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_ep0_start_transfer(dwc_otg_core_if_t * _core_if,
1044:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				       dwc_ep_t * _ep);
1045:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_ep0_continue_transfer(dwc_otg_core_if_t * _core_if,
1046:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					  dwc_ep_t * _ep);
1047:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_ep_write_packet(dwc_otg_core_if_t * _core_if,
1048:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				    dwc_ep_t * _ep, int _dma);
1049:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_ep_set_stall(dwc_otg_core_if_t * _core_if, dwc_ep_t * _ep);
1050:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_ep_clear_stall(dwc_otg_core_if_t * _core_if,
1051:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   dwc_ep_t * _ep);
1052:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_enable_device_interrupts(dwc_otg_core_if_t * _core_if);
1053:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1054:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef DWC_EN_ISOC
1055:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_iso_ep_start_frm_transfer(dwc_otg_core_if_t * core_if,
1056:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					      dwc_ep_t * ep);
1057:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_iso_ep_start_buf_transfer(dwc_otg_core_if_t * core_if,
1058:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					      dwc_ep_t * ep);
1059:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif /* DWC_EN_ISOC */
1060:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**@}*/
1061:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1062:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** @name Host CIL Functions
1063:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * The following functions support managing the DWC_otg controller in host
1064:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * mode.
1065:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1066:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**@{*/
1067:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_hc_init(dwc_otg_core_if_t * _core_if, dwc_hc_t * _hc);
1068:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_hc_halt(dwc_otg_core_if_t * _core_if,
1069:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 			    dwc_hc_t * _hc, dwc_otg_halt_status_e _halt_status);
1070:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_hc_cleanup(dwc_otg_core_if_t * _core_if, dwc_hc_t * _hc);
1071:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_hc_start_transfer(dwc_otg_core_if_t * _core_if,
1072:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				      dwc_hc_t * _hc);
1073:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int dwc_otg_hc_continue_transfer(dwc_otg_core_if_t * _core_if,
1074:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					dwc_hc_t * _hc);
1075:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_hc_do_ping(dwc_otg_core_if_t * _core_if, dwc_hc_t * _hc);
1076:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_hc_write_packet(dwc_otg_core_if_t * _core_if,
1077:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				    dwc_hc_t * _hc);
1078:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_enable_host_interrupts(dwc_otg_core_if_t * _core_if);
1079:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_disable_host_interrupts(dwc_otg_core_if_t * _core_if);
1080:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1081:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_hc_start_transfer_ddma(dwc_otg_core_if_t * core_if,
1082:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					   dwc_hc_t * hc);
1083:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1084:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern uint32_t calc_frame_interval(dwc_otg_core_if_t * core_if);
1085:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1086:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef USE_IFX_DEV 
1087:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** int32_t dwc_otg_handle_disconnect_intr(dwc_otg_core_if_t * core_if);
1088:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
1089:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1090:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /* Macro used to clear one channel interrupt */
1091:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define clear_hc_int(_hc_regs_, _intr_) \
1092:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** do { \
1093:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hcint_data_t hcint_clear = {.d32 = 0}; \
1094:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hcint_clear.b._intr_ = 1; \
1095:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_WRITE_REG32(&(_hc_regs_)->hcint, hcint_clear.d32); \
1096:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } while (0)
1097:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1098:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1099:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1100:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /*
1101:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Macro used to disable one channel interrupt. Channel interrupts are
1102:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * disabled when the channel is halted or released by the interrupt handler.
1103:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * There is no need to handle further interrupts of that type until the
1104:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * channel is re-assigned. In fact, subsequent handling may cause crashes
1105:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * because the channel structures are cleaned up when the channel is released.
1106:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1107:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define disable_hc_int(_hc_regs_, _intr_) \
1108:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** do { \
1109:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hcintmsk_data_t hcintmsk = {.d32 = 0}; \
1110:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hcintmsk.b._intr_ = 1; \
1111:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_MODIFY_REG32(&(_hc_regs_)->hcintmsk, hcintmsk.d32, 0); \
1112:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } while (0)
1113:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1114:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1115:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This function Reads HPRT0 in preparation to modify. It keeps the
1116:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * WC bits 0 so that if they are read as 1, they won't clear when you
1117:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * write it back
1118:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1119:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline uint32_t dwc_otg_read_hprt0(dwc_otg_core_if_t * _core_if)
1120:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
  27              		.loc 1 1120 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 84B0     		sub	sp, sp, #16
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 24
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
1121:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hprt0_data_t hprt0;
1122:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hprt0.d32 = DWC_READ_REG32(_core_if->host_if->hprt0);
  43              		.loc 1 1122 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a DB68     		ldr	r3, [r3, #12]
  46 000c 5B68     		ldr	r3, [r3, #4]
  47 000e 1846     		mov	r0, r3
  48 0010 FFF7FEFF 		bl	DWC_READ_REG32
  49 0014 0346     		mov	r3, r0
  50 0016 FB60     		str	r3, [r7, #12]
1123:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hprt0.b.prtena = 0;
  51              		.loc 1 1123 0
  52 0018 FB68     		ldr	r3, [r7, #12]
  53 001a 6FF38203 		bfc	r3, #2, #1
  54 001e FB60     		str	r3, [r7, #12]
1124:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hprt0.b.prtconndet = 0;
  55              		.loc 1 1124 0
  56 0020 FB68     		ldr	r3, [r7, #12]
  57 0022 6FF34103 		bfc	r3, #1, #1
  58 0026 FB60     		str	r3, [r7, #12]
1125:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hprt0.b.prtenchng = 0;
  59              		.loc 1 1125 0
  60 0028 FB68     		ldr	r3, [r7, #12]
  61 002a 6FF3C303 		bfc	r3, #3, #1
  62 002e FB60     		str	r3, [r7, #12]
1126:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hprt0.b.prtovrcurrchng = 0;
  63              		.loc 1 1126 0
  64 0030 FB68     		ldr	r3, [r7, #12]
  65 0032 6FF34513 		bfc	r3, #5, #1
  66 0036 FB60     		str	r3, [r7, #12]
1127:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	return hprt0.d32;
  67              		.loc 1 1127 0
  68 0038 FB68     		ldr	r3, [r7, #12]
1128:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
  69              		.loc 1 1128 0
  70 003a 1846     		mov	r0, r3
  71 003c 07F11007 		add	r7, r7, #16
  72 0040 BD46     		mov	sp, r7
  73 0042 80BD     		pop	{r7, pc}
  74              		.cfi_endproc
  75              	.LFE1:
  77              		.section	.text.cil_hcd_start,"ax",%progbits
  78              		.align	2
  79              		.thumb
  80              		.thumb_func
  82              	cil_hcd_start:
  83              	.LFB11:
1129:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1130:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**@}*/
1131:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1132:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** @name Common CIL Functions
1133:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * The following functions support managing the DWC_otg controller in either
1134:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * device or host mode.
1135:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1136:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**@{*/
1137:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1138:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_read_packet(dwc_otg_core_if_t * core_if,
1139:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				uint8_t * dest, uint16_t bytes);
1140:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1141:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_flush_tx_fifo(dwc_otg_core_if_t * _core_if, const int _num);
1142:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_flush_rx_fifo(dwc_otg_core_if_t * _core_if);
1143:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_core_reset(dwc_otg_core_if_t * _core_if);
1144:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1145:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1146:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This function returns the Core Interrupt register.
1147:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1148:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline uint32_t dwc_otg_read_core_intr(dwc_otg_core_if_t * core_if)
1149:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1150:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	return (DWC_READ_REG32(&core_if->core_global_regs->gintsts) &
1151:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		DWC_READ_REG32(&core_if->core_global_regs->gintmsk));
1152:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1153:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1154:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1155:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This function returns the OTG Interrupt register.
1156:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1157:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline uint32_t dwc_otg_read_otg_intr(dwc_otg_core_if_t * core_if)
1158:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1159:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	return (DWC_READ_REG32(&core_if->core_global_regs->gotgint));
1160:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1161:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1162:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1163:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This function reads the Device All Endpoints Interrupt register and
1164:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * returns the IN endpoint interrupt bits.
1165:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1166:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline uint32_t dwc_otg_read_dev_all_in_ep_intr(dwc_otg_core_if_t *
1167:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 						       core_if)
1168:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1169:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1170:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t v;
1171:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1172:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->multiproc_int_enable) {
1173:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		v = DWC_READ_REG32(&core_if->dev_if->
1174:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   dev_global_regs->deachint) &
1175:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		    DWC_READ_REG32(&core_if->
1176:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   dev_if->dev_global_regs->deachintmsk);
1177:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	} else {
1178:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		v = DWC_READ_REG32(&core_if->dev_if->dev_global_regs->daint) &
1179:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		    DWC_READ_REG32(&core_if->dev_if->dev_global_regs->daintmsk);
1180:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1181:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	return (v & 0xffff);
1182:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1183:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1184:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1185:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This function reads the Device All Endpoints Interrupt register and
1186:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * returns the OUT endpoint interrupt bits.
1187:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1188:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline uint32_t dwc_otg_read_dev_all_out_ep_intr(dwc_otg_core_if_t *
1189:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 							core_if)
1190:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1191:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t v;
1192:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1193:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->multiproc_int_enable) {
1194:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		v = DWC_READ_REG32(&core_if->dev_if->
1195:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   dev_global_regs->deachint) &
1196:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		    DWC_READ_REG32(&core_if->
1197:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   dev_if->dev_global_regs->deachintmsk);
1198:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	} else {
1199:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		v = DWC_READ_REG32(&core_if->dev_if->dev_global_regs->daint) &
1200:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		    DWC_READ_REG32(&core_if->dev_if->dev_global_regs->daintmsk);
1201:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1202:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1203:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	return ((v & 0xffff0000) >> 16);
1204:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1205:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1206:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1207:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This function returns the Device IN EP Interrupt register
1208:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1209:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline uint32_t dwc_otg_read_dev_in_ep_intr(dwc_otg_core_if_t * core_if,
1210:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 						   dwc_ep_t * ep)
1211:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1212:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_dev_if_t *dev_if = core_if->dev_if;
1213:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t v, msk, emp;
1214:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1215:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->multiproc_int_enable) {
1216:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		msk =
1217:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		    DWC_READ_REG32(&dev_if->
1218:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   dev_global_regs->diepeachintmsk[ep->num]);
1219:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		emp =
1220:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		    DWC_READ_REG32(&dev_if->
1221:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   dev_global_regs->dtknqr4_fifoemptymsk);
1222:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		msk |= ((emp >> ep->num) & 0x1) << 7;
1223:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		v = DWC_READ_REG32(&dev_if->in_ep_regs[ep->num]->diepint) & msk;
1224:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	} else {
1225:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		msk = DWC_READ_REG32(&dev_if->dev_global_regs->diepmsk);
1226:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		emp =
1227:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		    DWC_READ_REG32(&dev_if->
1228:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   dev_global_regs->dtknqr4_fifoemptymsk);
1229:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		msk |= ((emp >> ep->num) & 0x1) << 7;
1230:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		v = DWC_READ_REG32(&dev_if->in_ep_regs[ep->num]->diepint) & msk;
1231:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1232:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1233:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	return v;
1234:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1235:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1236:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1237:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This function returns the Device OUT EP Interrupt register
1238:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1239:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline uint32_t dwc_otg_read_dev_out_ep_intr(dwc_otg_core_if_t *
1240:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 						    _core_if, dwc_ep_t * _ep)
1241:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1242:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_dev_if_t *dev_if = _core_if->dev_if;
1243:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t v;
1244:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	//doepmsk_data_t msk = {.d32 = 0 };
1245:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	doepmsk_data_t msk;
1246:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1247:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (_core_if->multiproc_int_enable) {
1248:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		msk.d32 =
1249:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		    DWC_READ_REG32(&dev_if->
1250:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   dev_global_regs->doepeachintmsk[_ep->num]);
1251:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		if (_core_if->pti_enh_enable) {
1252:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 			msk.b.pktdrpsts = 1;
1253:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		}
1254:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		v = DWC_READ_REG32(&dev_if->
1255:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   out_ep_regs[_ep->num]->doepint) & msk.d32;
1256:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	} else {
1257:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		msk.d32 = DWC_READ_REG32(&dev_if->dev_global_regs->doepmsk);
1258:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		if (_core_if->pti_enh_enable) {
1259:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 			msk.b.pktdrpsts = 1;
1260:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		}
1261:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		v = DWC_READ_REG32(&dev_if->
1262:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   out_ep_regs[_ep->num]->doepint) & msk.d32;
1263:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1264:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	return v;
1265:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1266:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1267:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1268:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This function returns the Host All Channel Interrupt register
1269:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1270:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline uint32_t dwc_otg_read_host_all_channels_intr(dwc_otg_core_if_t *
1271:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 							   _core_if)
1272:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1273:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	return (DWC_READ_REG32(&_core_if->host_if->host_global_regs->haint));
1274:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1275:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1276:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline uint32_t dwc_otg_read_host_channel_intr(dwc_otg_core_if_t *
1277:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 						      _core_if, dwc_hc_t * _hc)
1278:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1279:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	return (DWC_READ_REG32
1280:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		(&_core_if->host_if->hc_regs[_hc->hc_num]->hcint));
1281:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1282:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1283:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1284:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This function returns the mode of the operation, host or device.
1285:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
1286:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * @return 0 - Device Mode, 1 - Host Mode
1287:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1288:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline uint32_t dwc_otg_mode(dwc_otg_core_if_t * _core_if)
1289:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1290:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	return (DWC_READ_REG32(&_core_if->core_global_regs->gintsts) & 0x1);
1291:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1292:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1293:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**@}*/
1294:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1295:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1296:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * DWC_otg CIL callback structure. This structure allows the HCD and
1297:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * PCD to register functions used for starting and stopping the PCD
1298:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * and HCD for role change on for a DRD.
1299:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1300:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** typedef struct dwc_otg_cil_callbacks {
1301:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Start function for role change */
1302:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int (*start) (void *_p);
1303:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Stop Function for role change */
1304:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int (*stop) (void *_p);
1305:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Disconnect Function for role change */
1306:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int (*disconnect) (void *_p);
1307:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Resume/Remote wakeup Function */
1308:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int (*resume_wakeup) (void *_p);
1309:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Suspend function */
1310:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int (*suspend) (void *_p);
1311:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Session Start (SRP) */
1312:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int (*session_start) (void *_p);
1313:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef CONFIG_USB_DWC_OTG_LPM
1314:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Sleep (switch to L0 state) */
1315:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int (*sleep) (void *_p);
1316:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
1317:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Pointer passed to start() and stop() */
1318:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	void *p;
1319:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } dwc_otg_cil_callbacks_t;
1320:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1321:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_cil_register_pcd_callbacks(dwc_otg_core_if_t * _core_if,
1322:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					       dwc_otg_cil_callbacks_t * _cb,
1323:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					       void *_p);
1324:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_cil_register_hcd_callbacks(dwc_otg_core_if_t * _core_if,
1325:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					       dwc_otg_cil_callbacks_t * _cb,
1326:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					       void *_p);
1327:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1328:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** void dwc_otg_initiate_srp(dwc_otg_core_if_t * core_if);
1329:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1330:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** //////////////////////////////////////////////////////////////////////
1331:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Start the HCD.  Helper function for using the HCD callbacks.
1332:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
1333:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * @param core_if Programming view of DWC_otg controller.
1334:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1335:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline void cil_hcd_start(dwc_otg_core_if_t * core_if)
1336:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
  84              		.loc 1 1336 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 8
  87              		@ frame_needed = 1, uses_anonymous_args = 0
  88 0000 80B5     		push	{r7, lr}
  89              	.LCFI3:
  90              		.cfi_def_cfa_offset 8
  91              		.cfi_offset 7, -8
  92              		.cfi_offset 14, -4
  93 0002 82B0     		sub	sp, sp, #8
  94              	.LCFI4:
  95              		.cfi_def_cfa_offset 16
  96 0004 00AF     		add	r7, sp, #0
  97              	.LCFI5:
  98              		.cfi_def_cfa_register 7
  99 0006 7860     		str	r0, [r7, #4]
1337:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->hcd_cb && core_if->hcd_cb->start) {
 100              		.loc 1 1337 0
 101 0008 7B68     		ldr	r3, [r7, #4]
 102 000a 9B6E     		ldr	r3, [r3, #104]
 103 000c 002B     		cmp	r3, #0
 104 000e 0CD0     		beq	.L3
 105              		.loc 1 1337 0 is_stmt 0 discriminator 1
 106 0010 7B68     		ldr	r3, [r7, #4]
 107 0012 9B6E     		ldr	r3, [r3, #104]
 108 0014 1B68     		ldr	r3, [r3, #0]
 109 0016 002B     		cmp	r3, #0
 110 0018 07D0     		beq	.L3
1338:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		core_if->hcd_cb->start(core_if->hcd_cb->p);
 111              		.loc 1 1338 0 is_stmt 1
 112 001a 7B68     		ldr	r3, [r7, #4]
 113 001c 9B6E     		ldr	r3, [r3, #104]
 114 001e 1B68     		ldr	r3, [r3, #0]
 115 0020 7A68     		ldr	r2, [r7, #4]
 116 0022 926E     		ldr	r2, [r2, #104]
 117 0024 9269     		ldr	r2, [r2, #24]
 118 0026 1046     		mov	r0, r2
 119 0028 9847     		blx	r3
 120              	.L3:
1339:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1340:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
 121              		.loc 1 1340 0
 122 002a 07F10807 		add	r7, r7, #8
 123 002e BD46     		mov	sp, r7
 124 0030 80BD     		pop	{r7, pc}
 125              		.cfi_endproc
 126              	.LFE11:
 128 0032 00BF     		.section	.text.cil_hcd_session_start,"ax",%progbits
 129              		.align	2
 130              		.thumb
 131              		.thumb_func
 133              	cil_hcd_session_start:
 134              	.LFB14:
1341:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1342:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Stop the HCD.  Helper function for using the HCD callbacks.
1343:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
1344:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * @param core_if Programming view of DWC_otg controller.
1345:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1346:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline void cil_hcd_stop(dwc_otg_core_if_t * core_if)
1347:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1348:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->hcd_cb && core_if->hcd_cb->stop) {
1349:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		core_if->hcd_cb->stop(core_if->hcd_cb->p);
1350:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1351:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1352:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1353:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Disconnect the HCD.  Helper function for using the HCD callbacks.
1354:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
1355:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * @param core_if Programming view of DWC_otg controller.
1356:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1357:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline void cil_hcd_disconnect(dwc_otg_core_if_t * core_if)
1358:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1359:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->hcd_cb && core_if->hcd_cb->disconnect) {
1360:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		core_if->hcd_cb->disconnect(core_if->hcd_cb->p);
1361:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1362:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1363:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1364:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Inform the HCD the a New Session has begun.  Helper function for
1365:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * using the HCD callbacks.
1366:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
1367:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * @param core_if Programming view of DWC_otg controller.
1368:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1369:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline void cil_hcd_session_start(dwc_otg_core_if_t * core_if)
1370:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
 135              		.loc 1 1370 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 8
 138              		@ frame_needed = 1, uses_anonymous_args = 0
 139 0000 80B5     		push	{r7, lr}
 140              	.LCFI6:
 141              		.cfi_def_cfa_offset 8
 142              		.cfi_offset 7, -8
 143              		.cfi_offset 14, -4
 144 0002 82B0     		sub	sp, sp, #8
 145              	.LCFI7:
 146              		.cfi_def_cfa_offset 16
 147 0004 00AF     		add	r7, sp, #0
 148              	.LCFI8:
 149              		.cfi_def_cfa_register 7
 150 0006 7860     		str	r0, [r7, #4]
1371:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->hcd_cb && core_if->hcd_cb->session_start) {
 151              		.loc 1 1371 0
 152 0008 7B68     		ldr	r3, [r7, #4]
 153 000a 9B6E     		ldr	r3, [r3, #104]
 154 000c 002B     		cmp	r3, #0
 155 000e 0CD0     		beq	.L5
 156              		.loc 1 1371 0 is_stmt 0 discriminator 1
 157 0010 7B68     		ldr	r3, [r7, #4]
 158 0012 9B6E     		ldr	r3, [r3, #104]
 159 0014 5B69     		ldr	r3, [r3, #20]
 160 0016 002B     		cmp	r3, #0
 161 0018 07D0     		beq	.L5
1372:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		core_if->hcd_cb->session_start(core_if->hcd_cb->p);
 162              		.loc 1 1372 0 is_stmt 1
 163 001a 7B68     		ldr	r3, [r7, #4]
 164 001c 9B6E     		ldr	r3, [r3, #104]
 165 001e 5B69     		ldr	r3, [r3, #20]
 166 0020 7A68     		ldr	r2, [r7, #4]
 167 0022 926E     		ldr	r2, [r2, #104]
 168 0024 9269     		ldr	r2, [r2, #24]
 169 0026 1046     		mov	r0, r2
 170 0028 9847     		blx	r3
 171              	.L5:
1373:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1374:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
 172              		.loc 1 1374 0
 173 002a 07F10807 		add	r7, r7, #8
 174 002e BD46     		mov	sp, r7
 175 0030 80BD     		pop	{r7, pc}
 176              		.cfi_endproc
 177              	.LFE14:
 179 0032 00BF     		.section	.text.cil_pcd_start,"ax",%progbits
 180              		.align	2
 181              		.thumb
 182              		.thumb_func
 184              	cil_pcd_start:
 185              	.LFB16:
1375:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1376:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef CONFIG_USB_DWC_OTG_LPM
1377:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1378:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Inform the HCD about LPM sleep.
1379:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Helper function for using the HCD callbacks.
1380:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
1381:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * @param core_if Programming view of DWC_otg controller.
1382:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1383:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline void cil_hcd_sleep(dwc_otg_core_if_t * core_if)
1384:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1385:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->hcd_cb && core_if->hcd_cb->sleep) {
1386:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		core_if->hcd_cb->sleep(core_if->hcd_cb->p);
1387:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1388:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1389:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
1390:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1391:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Resume the HCD.  Helper function for using the HCD callbacks.
1392:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
1393:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * @param core_if Programming view of DWC_otg controller.
1394:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1395:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline void cil_hcd_resume(dwc_otg_core_if_t * core_if)
1396:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1397:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->hcd_cb && core_if->hcd_cb->resume_wakeup) {
1398:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		core_if->hcd_cb->resume_wakeup(core_if->hcd_cb->p);
1399:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1400:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1401:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1402:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Start the PCD.  Helper function for using the PCD callbacks.
1403:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
1404:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * @param core_if Programming view of DWC_otg controller.
1405:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1406:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline void cil_pcd_start(dwc_otg_core_if_t * core_if)
1407:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
 186              		.loc 1 1407 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 8
 189              		@ frame_needed = 1, uses_anonymous_args = 0
 190 0000 80B5     		push	{r7, lr}
 191              	.LCFI9:
 192              		.cfi_def_cfa_offset 8
 193              		.cfi_offset 7, -8
 194              		.cfi_offset 14, -4
 195 0002 82B0     		sub	sp, sp, #8
 196              	.LCFI10:
 197              		.cfi_def_cfa_offset 16
 198 0004 00AF     		add	r7, sp, #0
 199              	.LCFI11:
 200              		.cfi_def_cfa_register 7
 201 0006 7860     		str	r0, [r7, #4]
1408:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->pcd_cb && core_if->pcd_cb->start) {
 202              		.loc 1 1408 0
 203 0008 7B68     		ldr	r3, [r7, #4]
 204 000a DB6E     		ldr	r3, [r3, #108]
 205 000c 002B     		cmp	r3, #0
 206 000e 0CD0     		beq	.L7
 207              		.loc 1 1408 0 is_stmt 0 discriminator 1
 208 0010 7B68     		ldr	r3, [r7, #4]
 209 0012 DB6E     		ldr	r3, [r3, #108]
 210 0014 1B68     		ldr	r3, [r3, #0]
 211 0016 002B     		cmp	r3, #0
 212 0018 07D0     		beq	.L7
1409:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		core_if->pcd_cb->start(core_if->pcd_cb->p);
 213              		.loc 1 1409 0 is_stmt 1
 214 001a 7B68     		ldr	r3, [r7, #4]
 215 001c DB6E     		ldr	r3, [r3, #108]
 216 001e 1B68     		ldr	r3, [r3, #0]
 217 0020 7A68     		ldr	r2, [r7, #4]
 218 0022 D26E     		ldr	r2, [r2, #108]
 219 0024 9269     		ldr	r2, [r2, #24]
 220 0026 1046     		mov	r0, r2
 221 0028 9847     		blx	r3
 222              	.L7:
1410:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1411:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
 223              		.loc 1 1411 0
 224 002a 07F10807 		add	r7, r7, #8
 225 002e BD46     		mov	sp, r7
 226 0030 80BD     		pop	{r7, pc}
 227              		.cfi_endproc
 228              	.LFE16:
 230 0032 00BF     		.section	.text.dwc_otg_adp_write_reg,"ax",%progbits
 231              		.align	2
 232              		.global	dwc_otg_adp_write_reg
 233              		.thumb
 234              		.thumb_func
 236              	dwc_otg_adp_write_reg:
 237              	.LFB20:
 238              		.file 2 "../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c"
   1:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** /* ==========================================================================
   2:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * $File: //dwh/usb_iip/dev/software/otg/linux/drivers/dwc_otg_adp.c $
   3:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * $Revision: #8 $
   4:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * $Date: 2010/11/29 $
   5:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * $Change: 1636033 $
   6:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  *
   7:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * Synopsys HS OTG Linux Software Driver and documentation (hereinafter,
   8:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * "Software") is an Unsupported proprietary work of Synopsys, Inc. unless
   9:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * otherwise expressly agreed to in writing between Synopsys and you.
  10:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  *
  11:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * The Software IS NOT an item of Licensed Software or Licensed Product under
  12:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * any End User Software License Agreement or Agreement for Licensed Product
  13:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * with Synopsys or any supplement thereto. You are permitted to use and
  14:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * redistribute this Software in source and binary forms, with or without
  15:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * modification, provided that redistributions of source code must retain this
  16:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * notice. You may not view, use, disclose, copy or distribute this file or
  17:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * any information contained herein except pursuant to this license grant from
  18:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * Synopsys. If you do not agree with this notice, including the disclaimer
  19:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * below, then you are not authorized to use the Software.
  20:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  *
  21:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * THIS SOFTWARE IS BEING DISTRIBUTED BY SYNOPSYS SOLELY ON AN "AS IS" BASIS
  22:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * ARE HEREBY DISCLAIMED. IN NO EVENT SHALL SYNOPSYS BE LIABLE FOR ANY DIRECT,
  25:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  26:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  28:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  29:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
  30:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
  31:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * DAMAGE.
  32:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * ========================================================================== */
  33:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** /*******************************************************************************
  34:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  Copyright (c) 2011, Infineon Technologies AG                                 **
  35:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  All rights reserved.                                                         **
  36:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****                                                                               **
  37:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  Redistribution and use in source and binary forms, with or without           **
  38:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  modification,are permitted provided that the following conditions are met:   **
  39:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****                                                                               **
  40:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  *Redistributions of source code must retain the above copyright notice,      **
  41:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  this list of conditions and the following disclaimer.                        **
  42:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  *Redistributions in binary form must reproduce the above copyright notice,   **
  43:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  this list of conditions and the following disclaimer in the documentation    **
  44:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  and/or other materials provided with the distribution.                       **
  45:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  *Neither the name of the copyright holders nor the names of its contributors **
  46:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  may be used to endorse or promote products derived from this software without**
  47:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  specific prior written permission.                                           **
  48:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****                                                                               **
  49:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  **
  50:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    **
  51:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   **
  52:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   **
  53:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         **
  54:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         **
  55:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    **
  56:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      **
  57:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       **
  58:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   **
  59:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  POSSIBILITY OF SUCH DAMAGE.                                                  **
  60:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****                                                                               **
  61:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  To improve the quality of the software, users are encouraged to share        **
  62:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  modifications, enhancements or bug fixes with Infineon Technologies AG       **
  63:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  dave@infineon.com).                                                          **
  64:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****                                                                               **
  65:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** ********************************************************************************
  66:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** **                                                                            **
  67:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** **                                                                            **
  68:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** ** PLATFORM : Infineon XMC4000 Series                                         **
  69:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** **                                                                            **
  70:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** ** COMPILER : Compiler Independent                                            **
  71:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** **                                                                            **
  72:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** ** AUTHOR : App Developer                                                     **
  73:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** **                                                                            **
  74:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** ** MAY BE CHANGED BY USER [yes/no]: Yes                                       **
  75:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** **                                                                            **
  76:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** ** MODIFICATION DATE : Apr 8, 2012                                           **
  77:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** **                                                                            **
  78:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** *******************************************************************************/
  79:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
  80:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** /*******************************************************************************
  81:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** **                       Author(s) Identity                                   **
  82:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** ********************************************************************************
  83:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** **                                                                            **
  84:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** ** Initials    Name                                                           **
  85:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** ** ---------------------------------------------------------------------------**
  86:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** ** CM          App Developer                                                  **
  87:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** *******************************************************************************/
  88:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
  89:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
  90:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** #include "../type_CM.h"
  91:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** #include "../dwc_common_port/dwc_os.h"
  92:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** #include "dwc_otg_regs.h"
  93:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** #include "dwc_otg_cil.h"
  94:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** #include "dwc_otg_adp.h"
  95:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
  96:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** /** @file
  97:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  *
  98:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * This file contains the most of the Attach Detect Protocol implementation for
  99:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * the driver to support OTG Rev2.0.
 100:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  *
 101:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  */
 102:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 103:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** void dwc_otg_adp_write_reg(dwc_otg_core_if_t * core_if, uint32_t value)
 104:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** {
 239              		.loc 2 104 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 16
 242              		@ frame_needed = 1, uses_anonymous_args = 0
 243 0000 80B5     		push	{r7, lr}
 244              	.LCFI12:
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 7, -8
 247              		.cfi_offset 14, -4
 248 0002 84B0     		sub	sp, sp, #16
 249              	.LCFI13:
 250              		.cfi_def_cfa_offset 24
 251 0004 00AF     		add	r7, sp, #0
 252              	.LCFI14:
 253              		.cfi_def_cfa_register 7
 254 0006 7860     		str	r0, [r7, #4]
 255 0008 3960     		str	r1, [r7, #0]
 105:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl_data_t adpctl;
 106:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 107:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl.d32 = value;
 256              		.loc 2 107 0
 257 000a 3B68     		ldr	r3, [r7, #0]
 258 000c FB60     		str	r3, [r7, #12]
 108:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl.b.ar = 0x2;
 259              		.loc 2 108 0
 260 000e FB68     		ldr	r3, [r7, #12]
 261 0010 4FF00202 		mov	r2, #2
 262 0014 62F3DC63 		bfi	r3, r2, #27, #2
 263 0018 FB60     		str	r3, [r7, #12]
 109:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 110:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	DWC_WRITE_REG32(&core_if->core_global_regs->adpctl, adpctl.d32);
 264              		.loc 2 110 0
 265 001a 7B68     		ldr	r3, [r7, #4]
 266 001c 5B68     		ldr	r3, [r3, #4]
 267 001e 03F16002 		add	r2, r3, #96
 268 0022 FB68     		ldr	r3, [r7, #12]
 269 0024 1046     		mov	r0, r2
 270 0026 1946     		mov	r1, r3
 271 0028 FFF7FEFF 		bl	DWC_WRITE_REG32
 111:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 112:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	while (adpctl.b.ar) {
 272              		.loc 2 112 0
 273 002c 08E0     		b	.L10
 274              	.L11:
 113:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		adpctl.d32 = DWC_READ_REG32(&core_if->core_global_regs->adpctl);
 275              		.loc 2 113 0
 276 002e 7B68     		ldr	r3, [r7, #4]
 277 0030 5B68     		ldr	r3, [r3, #4]
 278 0032 03F16003 		add	r3, r3, #96
 279 0036 1846     		mov	r0, r3
 280 0038 FFF7FEFF 		bl	DWC_READ_REG32
 281 003c 0346     		mov	r3, r0
 282 003e FB60     		str	r3, [r7, #12]
 283              	.L10:
 112:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	while (adpctl.b.ar) {
 284              		.loc 2 112 0 discriminator 1
 285 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 286 0042 03F01803 		and	r3, r3, #24
 287 0046 DBB2     		uxtb	r3, r3
 288 0048 002B     		cmp	r3, #0
 289 004a F0D1     		bne	.L11
 114:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	}
 115:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 116:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** }
 290              		.loc 2 116 0
 291 004c 07F11007 		add	r7, r7, #16
 292 0050 BD46     		mov	sp, r7
 293 0052 80BD     		pop	{r7, pc}
 294              		.cfi_endproc
 295              	.LFE20:
 297              		.section	.text.dwc_otg_adp_read_reg,"ax",%progbits
 298              		.align	2
 299              		.global	dwc_otg_adp_read_reg
 300              		.thumb
 301              		.thumb_func
 303              	dwc_otg_adp_read_reg:
 304              	.LFB21:
 117:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 118:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** /**
 119:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * Function is called to read ADP registers
 120:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  */
 121:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** uint32_t dwc_otg_adp_read_reg(dwc_otg_core_if_t * core_if)
 122:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** {
 305              		.loc 2 122 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 16
 308              		@ frame_needed = 1, uses_anonymous_args = 0
 309 0000 80B5     		push	{r7, lr}
 310              	.LCFI15:
 311              		.cfi_def_cfa_offset 8
 312              		.cfi_offset 7, -8
 313              		.cfi_offset 14, -4
 314 0002 84B0     		sub	sp, sp, #16
 315              	.LCFI16:
 316              		.cfi_def_cfa_offset 24
 317 0004 00AF     		add	r7, sp, #0
 318              	.LCFI17:
 319              		.cfi_def_cfa_register 7
 320 0006 7860     		str	r0, [r7, #4]
 123:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl_data_t adpctl;
 124:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 125:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl.d32 = 0;
 321              		.loc 2 125 0
 322 0008 4FF00003 		mov	r3, #0
 323 000c FB60     		str	r3, [r7, #12]
 126:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl.b.ar = 0x1;
 324              		.loc 2 126 0
 325 000e FB68     		ldr	r3, [r7, #12]
 326 0010 4FF00102 		mov	r2, #1
 327 0014 62F3DC63 		bfi	r3, r2, #27, #2
 328 0018 FB60     		str	r3, [r7, #12]
 127:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 128:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	DWC_WRITE_REG32(&core_if->core_global_regs->adpctl, adpctl.d32);
 329              		.loc 2 128 0
 330 001a 7B68     		ldr	r3, [r7, #4]
 331 001c 5B68     		ldr	r3, [r3, #4]
 332 001e 03F16002 		add	r2, r3, #96
 333 0022 FB68     		ldr	r3, [r7, #12]
 334 0024 1046     		mov	r0, r2
 335 0026 1946     		mov	r1, r3
 336 0028 FFF7FEFF 		bl	DWC_WRITE_REG32
 129:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 130:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	while (adpctl.b.ar) {
 337              		.loc 2 130 0
 338 002c 08E0     		b	.L13
 339              	.L14:
 131:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		adpctl.d32 = DWC_READ_REG32(&core_if->core_global_regs->adpctl);
 340              		.loc 2 131 0
 341 002e 7B68     		ldr	r3, [r7, #4]
 342 0030 5B68     		ldr	r3, [r3, #4]
 343 0032 03F16003 		add	r3, r3, #96
 344 0036 1846     		mov	r0, r3
 345 0038 FFF7FEFF 		bl	DWC_READ_REG32
 346 003c 0346     		mov	r3, r0
 347 003e FB60     		str	r3, [r7, #12]
 348              	.L13:
 130:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	while (adpctl.b.ar) {
 349              		.loc 2 130 0 discriminator 1
 350 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 351 0042 03F01803 		and	r3, r3, #24
 352 0046 DBB2     		uxtb	r3, r3
 353 0048 002B     		cmp	r3, #0
 354 004a F0D1     		bne	.L14
 132:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	}
 133:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 134:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	return adpctl.d32;
 355              		.loc 2 134 0
 356 004c FB68     		ldr	r3, [r7, #12]
 135:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** }
 357              		.loc 2 135 0
 358 004e 1846     		mov	r0, r3
 359 0050 07F11007 		add	r7, r7, #16
 360 0054 BD46     		mov	sp, r7
 361 0056 80BD     		pop	{r7, pc}
 362              		.cfi_endproc
 363              	.LFE21:
 365              		.section	.text.dwc_otg_adp_modify_reg,"ax",%progbits
 366              		.align	2
 367              		.global	dwc_otg_adp_modify_reg
 368              		.thumb
 369              		.thumb_func
 371              	dwc_otg_adp_modify_reg:
 372              	.LFB22:
 136:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 137:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** /**
 138:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * Function is called to write ADP registers
 139:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  */
 140:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** void dwc_otg_adp_modify_reg(dwc_otg_core_if_t * core_if, uint32_t clr,
 141:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			    uint32_t set)
 142:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** {
 373              		.loc 2 142 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 16
 376              		@ frame_needed = 1, uses_anonymous_args = 0
 377 0000 80B5     		push	{r7, lr}
 378              	.LCFI18:
 379              		.cfi_def_cfa_offset 8
 380              		.cfi_offset 7, -8
 381              		.cfi_offset 14, -4
 382 0002 84B0     		sub	sp, sp, #16
 383              	.LCFI19:
 384              		.cfi_def_cfa_offset 24
 385 0004 00AF     		add	r7, sp, #0
 386              	.LCFI20:
 387              		.cfi_def_cfa_register 7
 388 0006 F860     		str	r0, [r7, #12]
 389 0008 B960     		str	r1, [r7, #8]
 390 000a 7A60     		str	r2, [r7, #4]
 143:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	dwc_otg_adp_write_reg(core_if,
 144:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			      (dwc_otg_adp_read_reg(core_if) & (~clr)) | set);
 391              		.loc 2 144 0
 392 000c F868     		ldr	r0, [r7, #12]
 393 000e FFF7FEFF 		bl	dwc_otg_adp_read_reg
 394 0012 0246     		mov	r2, r0
 395 0014 BB68     		ldr	r3, [r7, #8]
 396 0016 6FEA0303 		mvn	r3, r3
 397 001a 1A40     		ands	r2, r2, r3
 143:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	dwc_otg_adp_write_reg(core_if,
 398              		.loc 2 143 0
 399 001c 7B68     		ldr	r3, [r7, #4]
 400 001e 1343     		orrs	r3, r3, r2
 401 0020 F868     		ldr	r0, [r7, #12]
 402 0022 1946     		mov	r1, r3
 403 0024 FFF7FEFF 		bl	dwc_otg_adp_write_reg
 145:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** }
 404              		.loc 2 145 0
 405 0028 07F11007 		add	r7, r7, #16
 406 002c BD46     		mov	sp, r7
 407 002e 80BD     		pop	{r7, pc}
 408              		.cfi_endproc
 409              	.LFE22:
 411              		.section	.text.adp_sense_timeout,"ax",%progbits
 412              		.align	2
 413              		.thumb
 414              		.thumb_func
 416              	adp_sense_timeout:
 417              	.LFB23:
 146:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 147:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** static void adp_sense_timeout(void *ptr)
 148:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** {
 418              		.loc 2 148 0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 16
 421              		@ frame_needed = 1, uses_anonymous_args = 0
 422 0000 80B5     		push	{r7, lr}
 423              	.LCFI21:
 424              		.cfi_def_cfa_offset 8
 425              		.cfi_offset 7, -8
 426              		.cfi_offset 14, -4
 427 0002 84B0     		sub	sp, sp, #16
 428              	.LCFI22:
 429              		.cfi_def_cfa_offset 24
 430 0004 00AF     		add	r7, sp, #0
 431              	.LCFI23:
 432              		.cfi_def_cfa_register 7
 433 0006 7860     		str	r0, [r7, #4]
 149:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	dwc_otg_core_if_t *core_if = (dwc_otg_core_if_t *) ptr;
 434              		.loc 2 149 0
 435 0008 7B68     		ldr	r3, [r7, #4]
 436 000a FB60     		str	r3, [r7, #12]
 150:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	core_if->adp.sense_timer_started = 0;
 437              		.loc 2 150 0
 438 000c FB68     		ldr	r3, [r7, #12]
 439 000e 4FF00002 		mov	r2, #0
 440 0012 C3F8B020 		str	r2, [r3, #176]
 151:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 152:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	if (core_if->adp_enable) {
 441              		.loc 2 152 0
 442 0016 FB68     		ldr	r3, [r7, #12]
 443 0018 D3F89430 		ldr	r3, [r3, #148]
 444 001c 002B     		cmp	r3, #0
 445 001e 05D0     		beq	.L17
 153:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		dwc_otg_adp_sense_stop(core_if);
 446              		.loc 2 153 0
 447 0020 F868     		ldr	r0, [r7, #12]
 448 0022 FFF7FEFF 		bl	dwc_otg_adp_sense_stop
 154:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		dwc_otg_adp_probe_start(core_if);
 449              		.loc 2 154 0
 450 0026 F868     		ldr	r0, [r7, #12]
 451 0028 FFF7FEFF 		bl	dwc_otg_adp_probe_start
 452              	.L17:
 155:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	}
 156:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** }
 453              		.loc 2 156 0
 454 002c 07F11007 		add	r7, r7, #16
 455 0030 BD46     		mov	sp, r7
 456 0032 80BD     		pop	{r7, pc}
 457              		.cfi_endproc
 458              	.LFE23:
 460              		.section	.text.adp_vbuson_timeout,"ax",%progbits
 461              		.align	2
 462              		.thumb
 463              		.thumb_func
 465              	adp_vbuson_timeout:
 466              	.LFB24:
 157:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 158:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** /**
 159:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * This function is called when the SRP timer expires. The SRP should
 160:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * complete within 6 seconds.
 161:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  */
 162:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** static void adp_vbuson_timeout(void *ptr)
 163:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** {
 467              		.loc 2 163 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 24
 470              		@ frame_needed = 1, uses_anonymous_args = 0
 471 0000 80B5     		push	{r7, lr}
 472              	.LCFI24:
 473              		.cfi_def_cfa_offset 8
 474              		.cfi_offset 7, -8
 475              		.cfi_offset 14, -4
 476 0002 86B0     		sub	sp, sp, #24
 477              	.LCFI25:
 478              		.cfi_def_cfa_offset 32
 479 0004 00AF     		add	r7, sp, #0
 480              	.LCFI26:
 481              		.cfi_def_cfa_register 7
 482 0006 7860     		str	r0, [r7, #4]
 164:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	gpwrdn_data_t gpwrdn;
 165:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	dwc_otg_core_if_t *core_if = (dwc_otg_core_if_t *) ptr;
 483              		.loc 2 165 0
 484 0008 7B68     		ldr	r3, [r7, #4]
 485 000a 7B61     		str	r3, [r7, #20]
 166:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 167:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	hprt0_data_t hprt0 = {.d32 = 0 };
 486              		.loc 2 167 0
 487 000c 4FF00003 		mov	r3, #0
 488 0010 FB60     		str	r3, [r7, #12]
 168:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	pcgcctl_data_t pcgcctl = {.d32 = 0 };
 489              		.loc 2 168 0
 490 0012 4FF00003 		mov	r3, #0
 491 0016 BB60     		str	r3, [r7, #8]
 169:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 170:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	core_if->adp.vbuson_timer_started = 0;
 492              		.loc 2 170 0
 493 0018 7B69     		ldr	r3, [r7, #20]
 494 001a 4FF00002 		mov	r2, #0
 495 001e C3F8B820 		str	r2, [r3, #184]
 171:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 172:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	if (core_if) {
 496              		.loc 2 172 0
 497 0022 7B69     		ldr	r3, [r7, #20]
 498 0024 002B     		cmp	r3, #0
 499 0026 00F08D80 		beq	.L19
 173:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		/* Turn off vbus */
 174:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		hprt0.b.prtpwr = 1;
 500              		.loc 2 174 0
 501 002a FB68     		ldr	r3, [r7, #12]
 502 002c 43F48053 		orr	r3, r3, #4096
 503 0030 FB60     		str	r3, [r7, #12]
 175:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		DWC_MODIFY_REG32(core_if->host_if->hprt0, 0, hprt0.d32);
 504              		.loc 2 175 0
 505 0032 7B69     		ldr	r3, [r7, #20]
 506 0034 DB68     		ldr	r3, [r3, #12]
 507 0036 5A68     		ldr	r2, [r3, #4]
 508 0038 FB68     		ldr	r3, [r7, #12]
 509 003a 1046     		mov	r0, r2
 510 003c 4FF00001 		mov	r1, #0
 511 0040 1A46     		mov	r2, r3
 512 0042 FFF7FEFF 		bl	DWC_MODIFY_REG32
 176:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 177:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		gpwrdn.d32 = 0;
 513              		.loc 2 177 0
 514 0046 4FF00003 		mov	r3, #0
 515 004a 3B61     		str	r3, [r7, #16]
 178:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 179:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		/* Power off the core */
 180:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		if (core_if->power_down == 2) {
 516              		.loc 2 180 0
 517 004c 7B69     		ldr	r3, [r7, #20]
 518 004e D3F89030 		ldr	r3, [r3, #144]
 519 0052 022B     		cmp	r3, #2
 520 0054 3BD1     		bne	.L21
 181:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			/* Enable Wakeup Logic */
 182:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** //                      gpwrdn.b.wkupactiv = 1;
 183:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			gpwrdn.b.pmuactv = 0;
 521              		.loc 2 183 0
 522 0056 3B69     		ldr	r3, [r7, #16]
 523 0058 6FF34103 		bfc	r3, #1, #1
 524 005c 3B61     		str	r3, [r7, #16]
 184:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			gpwrdn.b.pwrdnrstn = 1;
 525              		.loc 2 184 0
 526 005e 3B69     		ldr	r3, [r7, #16]
 527 0060 43F01003 		orr	r3, r3, #16
 528 0064 3B61     		str	r3, [r7, #16]
 185:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			gpwrdn.b.pwrdnclmp = 1;
 529              		.loc 2 185 0
 530 0066 3B69     		ldr	r3, [r7, #16]
 531 0068 43F00803 		orr	r3, r3, #8
 532 006c 3B61     		str	r3, [r7, #16]
 186:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, 0,
 533              		.loc 2 186 0
 534 006e 7B69     		ldr	r3, [r7, #20]
 535 0070 5B68     		ldr	r3, [r3, #4]
 536 0072 03F15802 		add	r2, r3, #88
 537 0076 3B69     		ldr	r3, [r7, #16]
 538 0078 1046     		mov	r0, r2
 539 007a 4FF00001 		mov	r1, #0
 540 007e 1A46     		mov	r2, r3
 541 0080 FFF7FEFF 		bl	DWC_MODIFY_REG32
 187:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 					 gpwrdn.d32);
 188:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 189:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			/* Suspend the Phy Clock */
 190:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			pcgcctl.b.stoppclk = 1;
 542              		.loc 2 190 0
 543 0084 BB68     		ldr	r3, [r7, #8]
 544 0086 43F00103 		orr	r3, r3, #1
 545 008a BB60     		str	r3, [r7, #8]
 191:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			DWC_MODIFY_REG32(core_if->pcgcctl, 0, pcgcctl.d32);
 546              		.loc 2 191 0
 547 008c 7B69     		ldr	r3, [r7, #20]
 548 008e DA69     		ldr	r2, [r3, #28]
 549 0090 BB68     		ldr	r3, [r7, #8]
 550 0092 1046     		mov	r0, r2
 551 0094 4FF00001 		mov	r1, #0
 552 0098 1A46     		mov	r2, r3
 553 009a FFF7FEFF 		bl	DWC_MODIFY_REG32
 192:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 193:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			/* Switch on VDD */
 194:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** //                      gpwrdn.b.wkupactiv = 1;
 195:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			gpwrdn.b.pmuactv = 1;
 554              		.loc 2 195 0
 555 009e 3B69     		ldr	r3, [r7, #16]
 556 00a0 43F00203 		orr	r3, r3, #2
 557 00a4 3B61     		str	r3, [r7, #16]
 196:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			gpwrdn.b.pwrdnrstn = 1;
 558              		.loc 2 196 0
 559 00a6 3B69     		ldr	r3, [r7, #16]
 560 00a8 43F01003 		orr	r3, r3, #16
 561 00ac 3B61     		str	r3, [r7, #16]
 197:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			gpwrdn.b.pwrdnclmp = 1;
 562              		.loc 2 197 0
 563 00ae 3B69     		ldr	r3, [r7, #16]
 564 00b0 43F00803 		orr	r3, r3, #8
 565 00b4 3B61     		str	r3, [r7, #16]
 198:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, 0,
 566              		.loc 2 198 0
 567 00b6 7B69     		ldr	r3, [r7, #20]
 568 00b8 5B68     		ldr	r3, [r3, #4]
 569 00ba 03F15802 		add	r2, r3, #88
 570 00be 3B69     		ldr	r3, [r7, #16]
 571 00c0 1046     		mov	r0, r2
 572 00c2 4FF00001 		mov	r1, #0
 573 00c6 1A46     		mov	r2, r3
 574 00c8 FFF7FEFF 		bl	DWC_MODIFY_REG32
 575 00cc 0EE0     		b	.L22
 576              	.L21:
 199:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 					 gpwrdn.d32);
 200:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		} else {
 201:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			/* Enable Power Down Logic */
 202:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			gpwrdn.b.pmuactv = 1;
 577              		.loc 2 202 0
 578 00ce 3B69     		ldr	r3, [r7, #16]
 579 00d0 43F00203 		orr	r3, r3, #2
 580 00d4 3B61     		str	r3, [r7, #16]
 203:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, 0, gpwrdn.d32);
 581              		.loc 2 203 0
 582 00d6 7B69     		ldr	r3, [r7, #20]
 583 00d8 5B68     		ldr	r3, [r3, #4]
 584 00da 03F15802 		add	r2, r3, #88
 585 00de 3B69     		ldr	r3, [r7, #16]
 586 00e0 1046     		mov	r0, r2
 587 00e2 4FF00001 		mov	r1, #0
 588 00e6 1A46     		mov	r2, r3
 589 00e8 FFF7FEFF 		bl	DWC_MODIFY_REG32
 590              	.L22:
 204:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		}
 205:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 206:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		/* Power off the core */
 207:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		if (core_if->power_down == 2) {
 591              		.loc 2 207 0
 592 00ec 7B69     		ldr	r3, [r7, #20]
 593 00ee D3F89030 		ldr	r3, [r3, #144]
 594 00f2 022B     		cmp	r3, #2
 595 00f4 11D1     		bne	.L23
 208:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			gpwrdn.d32 = 0;
 596              		.loc 2 208 0
 597 00f6 4FF00003 		mov	r3, #0
 598 00fa 3B61     		str	r3, [r7, #16]
 209:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			gpwrdn.b.pwrdnswtch = 1;
 599              		.loc 2 209 0
 600 00fc 3B69     		ldr	r3, [r7, #16]
 601 00fe 43F02003 		orr	r3, r3, #32
 602 0102 3B61     		str	r3, [r7, #16]
 210:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn,
 603              		.loc 2 210 0
 604 0104 7B69     		ldr	r3, [r7, #20]
 605 0106 5B68     		ldr	r3, [r3, #4]
 606 0108 03F15802 		add	r2, r3, #88
 607 010c 3B69     		ldr	r3, [r7, #16]
 608 010e 1046     		mov	r0, r2
 609 0110 1946     		mov	r1, r3
 610 0112 4FF00002 		mov	r2, #0
 611 0116 FFF7FEFF 		bl	DWC_MODIFY_REG32
 612              	.L23:
 211:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 					 gpwrdn.d32, 0);
 212:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		}
 213:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 214:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		/* Unmask SRP detected interrupt from Power Down Logic */
 215:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		gpwrdn.d32 = 0;
 613              		.loc 2 215 0
 614 011a 4FF00003 		mov	r3, #0
 615 011e 3B61     		str	r3, [r7, #16]
 216:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		gpwrdn.b.srp_det_msk = 1;
 616              		.loc 2 216 0
 617 0120 3B69     		ldr	r3, [r7, #16]
 618 0122 43F48033 		orr	r3, r3, #65536
 619 0126 3B61     		str	r3, [r7, #16]
 217:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, 0, gpwrdn.d32);
 620              		.loc 2 217 0
 621 0128 7B69     		ldr	r3, [r7, #20]
 622 012a 5B68     		ldr	r3, [r3, #4]
 623 012c 03F15802 		add	r2, r3, #88
 624 0130 3B69     		ldr	r3, [r7, #16]
 625 0132 1046     		mov	r0, r2
 626 0134 4FF00001 		mov	r1, #0
 627 0138 1A46     		mov	r2, r3
 628 013a FFF7FEFF 		bl	DWC_MODIFY_REG32
 218:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 219:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		dwc_otg_adp_probe_start(core_if);
 629              		.loc 2 219 0
 630 013e 7869     		ldr	r0, [r7, #20]
 631 0140 FFF7FEFF 		bl	dwc_otg_adp_probe_start
 632              	.L19:
 220:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	}
 221:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 222:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** }
 633              		.loc 2 222 0
 634 0144 07F11807 		add	r7, r7, #24
 635 0148 BD46     		mov	sp, r7
 636 014a 80BD     		pop	{r7, pc}
 637              		.cfi_endproc
 638              	.LFE24:
 640              		.section	.text.dwc_otg_adp_vbuson_timer_start,"ax",%progbits
 641              		.align	2
 642              		.global	dwc_otg_adp_vbuson_timer_start
 643              		.thumb
 644              		.thumb_func
 646              	dwc_otg_adp_vbuson_timer_start:
 647              	.LFB25:
 223:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 224:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** /**
 225:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * Start the ADP Initial Probe timer to detect if Port Connected interrupt is not asserted within
 226:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * 1.1 seconds.
 227:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  *
 228:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * @param core_if the pointer to core_if strucure.
 229:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  */
 230:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** void dwc_otg_adp_vbuson_timer_start(dwc_otg_core_if_t * core_if)
 231:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** {
 648              		.loc 2 231 0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 8
 651              		@ frame_needed = 1, uses_anonymous_args = 0
 652 0000 80B5     		push	{r7, lr}
 653              	.LCFI27:
 654              		.cfi_def_cfa_offset 8
 655              		.cfi_offset 7, -8
 656              		.cfi_offset 14, -4
 657 0002 82B0     		sub	sp, sp, #8
 658              	.LCFI28:
 659              		.cfi_def_cfa_offset 16
 660 0004 00AF     		add	r7, sp, #0
 661              	.LCFI29:
 662              		.cfi_def_cfa_register 7
 663 0006 7860     		str	r0, [r7, #4]
 232:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	core_if->adp.vbuson_timer_started = 1;
 664              		.loc 2 232 0
 665 0008 7B68     		ldr	r3, [r7, #4]
 666 000a 4FF00102 		mov	r2, #1
 667 000e C3F8B820 		str	r2, [r3, #184]
 233:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	DWC_TIMER_SCHEDULE(core_if->adp.vbuson_timer, 1100 /* 1.1 secs */ );
 668              		.loc 2 233 0
 669 0012 7B68     		ldr	r3, [r7, #4]
 670 0014 D3F8B430 		ldr	r3, [r3, #180]
 671 0018 1846     		mov	r0, r3
 672 001a 40F24C41 		movw	r1, #1100
 673 001e FFF7FEFF 		bl	DWC_TIMER_SCHEDULE
 234:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** }
 674              		.loc 2 234 0
 675 0022 07F10807 		add	r7, r7, #8
 676 0026 BD46     		mov	sp, r7
 677 0028 80BD     		pop	{r7, pc}
 678              		.cfi_endproc
 679              	.LFE25:
 681 002a 00BF     		.section	.text.mask_all_interrupts,"ax",%progbits
 682              		.align	2
 683              		.thumb
 684              		.thumb_func
 686              	mask_all_interrupts:
 687              	.LFB26:
 235:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 236:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** /**
 237:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * Masks all DWC OTG core interrupts
 238:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  *
 239:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  */
 240:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** static void mask_all_interrupts(dwc_otg_core_if_t * core_if)
 241:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** {
 688              		.loc 2 241 0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 16
 691              		@ frame_needed = 1, uses_anonymous_args = 0
 692 0000 80B5     		push	{r7, lr}
 693              	.LCFI30:
 694              		.cfi_def_cfa_offset 8
 695              		.cfi_offset 7, -8
 696              		.cfi_offset 14, -4
 697 0002 84B0     		sub	sp, sp, #16
 698              	.LCFI31:
 699              		.cfi_def_cfa_offset 24
 700 0004 00AF     		add	r7, sp, #0
 701              	.LCFI32:
 702              		.cfi_def_cfa_register 7
 703 0006 7860     		str	r0, [r7, #4]
 242:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	int i;
 243:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 244:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	gahbcfg_data_t ahbcfg = {.d32 = 0 };
 704              		.loc 2 244 0
 705 0008 4FF00003 		mov	r3, #0
 706 000c BB60     		str	r3, [r7, #8]
 245:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 246:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	/* Mask Host Interrupts */
 247:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 248:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	/* Clear and disable HCINTs */
 249:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	for (i = 0; i < core_if->core_params->host_channels; i++) {
 707              		.loc 2 249 0
 708 000e 4FF00003 		mov	r3, #0
 709 0012 FB60     		str	r3, [r7, #12]
 710 0014 1FE0     		b	.L26
 711              	.L27:
 250:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		DWC_WRITE_REG32(&core_if->host_if->hc_regs[i]->hcintmsk, 0);
 712              		.loc 2 250 0 discriminator 2
 713 0016 7B68     		ldr	r3, [r7, #4]
 714 0018 DB68     		ldr	r3, [r3, #12]
 715 001a FA68     		ldr	r2, [r7, #12]
 716 001c 02F10202 		add	r2, r2, #2
 717 0020 53F82230 		ldr	r3, [r3, r2, lsl #2]
 718 0024 03F10C03 		add	r3, r3, #12
 719 0028 1846     		mov	r0, r3
 720 002a 4FF00001 		mov	r1, #0
 721 002e FFF7FEFF 		bl	DWC_WRITE_REG32
 251:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		DWC_WRITE_REG32(&core_if->host_if->hc_regs[i]->hcint, 0xFFFFFFFF);
 722              		.loc 2 251 0 discriminator 2
 723 0032 7B68     		ldr	r3, [r7, #4]
 724 0034 DB68     		ldr	r3, [r3, #12]
 725 0036 FA68     		ldr	r2, [r7, #12]
 726 0038 02F10202 		add	r2, r2, #2
 727 003c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 728 0040 03F10803 		add	r3, r3, #8
 729 0044 1846     		mov	r0, r3
 730 0046 4FF0FF31 		mov	r1, #-1
 731 004a FFF7FEFF 		bl	DWC_WRITE_REG32
 249:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	for (i = 0; i < core_if->core_params->host_channels; i++) {
 732              		.loc 2 249 0 discriminator 2
 733 004e FB68     		ldr	r3, [r7, #12]
 734 0050 03F10103 		add	r3, r3, #1
 735 0054 FB60     		str	r3, [r7, #12]
 736              	.L26:
 249:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	for (i = 0; i < core_if->core_params->host_channels; i++) {
 737              		.loc 2 249 0 is_stmt 0 discriminator 1
 738 0056 7B68     		ldr	r3, [r7, #4]
 739 0058 1B68     		ldr	r3, [r3, #0]
 740 005a D3F88020 		ldr	r2, [r3, #128]
 741 005e FB68     		ldr	r3, [r7, #12]
 742 0060 9A42     		cmp	r2, r3
 743 0062 D8DC     		bgt	.L27
 252:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 253:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	}
 254:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 255:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	/* Clear and disable HAINT */
 256:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	DWC_WRITE_REG32(&core_if->host_if->host_global_regs->haintmsk, 0x0000);
 744              		.loc 2 256 0 is_stmt 1
 745 0064 7B68     		ldr	r3, [r7, #4]
 746 0066 DB68     		ldr	r3, [r3, #12]
 747 0068 1B68     		ldr	r3, [r3, #0]
 748 006a 03F11803 		add	r3, r3, #24
 749 006e 1846     		mov	r0, r3
 750 0070 4FF00001 		mov	r1, #0
 751 0074 FFF7FEFF 		bl	DWC_WRITE_REG32
 257:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	DWC_WRITE_REG32(&core_if->host_if->host_global_regs->haint, 0xFFFFFFFF);
 752              		.loc 2 257 0
 753 0078 7B68     		ldr	r3, [r7, #4]
 754 007a DB68     		ldr	r3, [r3, #12]
 755 007c 1B68     		ldr	r3, [r3, #0]
 756 007e 03F11403 		add	r3, r3, #20
 757 0082 1846     		mov	r0, r3
 758 0084 4FF0FF31 		mov	r1, #-1
 759 0088 FFF7FEFF 		bl	DWC_WRITE_REG32
 258:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 259:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	/* Mask Device Interrupts */
 260:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	if (!core_if->multiproc_int_enable) {
 760              		.loc 2 260 0
 761 008c 7B68     		ldr	r3, [r7, #4]
 762 008e 93F84930 		ldrb	r3, [r3, #73]	@ zero_extendqisi2
 763 0092 002B     		cmp	r3, #0
 764 0094 66D1     		bne	.L28
 261:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		/* Clear and disable IN Endpoint interrupts */
 262:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		DWC_WRITE_REG32(&core_if->dev_if->dev_global_regs->diepmsk, 0);
 765              		.loc 2 262 0
 766 0096 7B68     		ldr	r3, [r7, #4]
 767 0098 9B68     		ldr	r3, [r3, #8]
 768 009a 1B68     		ldr	r3, [r3, #0]
 769 009c 03F11003 		add	r3, r3, #16
 770 00a0 1846     		mov	r0, r3
 771 00a2 4FF00001 		mov	r1, #0
 772 00a6 FFF7FEFF 		bl	DWC_WRITE_REG32
 263:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		for (i = 0; i <= core_if->dev_if->num_in_eps; i++) {
 773              		.loc 2 263 0
 774 00aa 4FF00003 		mov	r3, #0
 775 00ae FB60     		str	r3, [r7, #12]
 776 00b0 11E0     		b	.L29
 777              	.L30:
 264:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			DWC_WRITE_REG32(&core_if->dev_if->in_ep_regs[i]->
 778              		.loc 2 264 0 discriminator 2
 779 00b2 7B68     		ldr	r3, [r7, #4]
 780 00b4 9A68     		ldr	r2, [r3, #8]
 781 00b6 FB68     		ldr	r3, [r7, #12]
 782 00b8 4FEA8303 		lsl	r3, r3, #2
 783 00bc D318     		adds	r3, r2, r3
 784 00be 5B68     		ldr	r3, [r3, #4]
 785 00c0 03F10803 		add	r3, r3, #8
 786 00c4 1846     		mov	r0, r3
 787 00c6 4FF0FF31 		mov	r1, #-1
 788 00ca FFF7FEFF 		bl	DWC_WRITE_REG32
 263:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		for (i = 0; i <= core_if->dev_if->num_in_eps; i++) {
 789              		.loc 2 263 0 discriminator 2
 790 00ce FB68     		ldr	r3, [r7, #12]
 791 00d0 03F10103 		add	r3, r3, #1
 792 00d4 FB60     		str	r3, [r7, #12]
 793              	.L29:
 263:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		for (i = 0; i <= core_if->dev_if->num_in_eps; i++) {
 794              		.loc 2 263 0 is_stmt 0 discriminator 1
 795 00d6 7B68     		ldr	r3, [r7, #4]
 796 00d8 9B68     		ldr	r3, [r3, #8]
 797 00da 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 798 00de 1A46     		mov	r2, r3
 799 00e0 FB68     		ldr	r3, [r7, #12]
 800 00e2 9A42     		cmp	r2, r3
 801 00e4 E5DA     		bge	.L30
 265:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 					diepint, 0xFFFFFFFF);
 266:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		}
 267:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 268:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		/* Clear and disable OUT Endpoint interrupts */
 269:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		DWC_WRITE_REG32(&core_if->dev_if->dev_global_regs->doepmsk, 0);
 802              		.loc 2 269 0 is_stmt 1
 803 00e6 7B68     		ldr	r3, [r7, #4]
 804 00e8 9B68     		ldr	r3, [r3, #8]
 805 00ea 1B68     		ldr	r3, [r3, #0]
 806 00ec 03F11403 		add	r3, r3, #20
 807 00f0 1846     		mov	r0, r3
 808 00f2 4FF00001 		mov	r1, #0
 809 00f6 FFF7FEFF 		bl	DWC_WRITE_REG32
 270:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		for (i = 0; i <= core_if->dev_if->num_out_eps; i++) {
 810              		.loc 2 270 0
 811 00fa 4FF00003 		mov	r3, #0
 812 00fe FB60     		str	r3, [r7, #12]
 813 0100 13E0     		b	.L31
 814              	.L32:
 271:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			DWC_WRITE_REG32(&core_if->dev_if->out_ep_regs[i]->
 815              		.loc 2 271 0 discriminator 2
 816 0102 7B68     		ldr	r3, [r7, #4]
 817 0104 9A68     		ldr	r2, [r3, #8]
 818 0106 FB68     		ldr	r3, [r7, #12]
 819 0108 03F10803 		add	r3, r3, #8
 820 010c 4FEA8303 		lsl	r3, r3, #2
 821 0110 D318     		adds	r3, r2, r3
 822 0112 5B68     		ldr	r3, [r3, #4]
 823 0114 03F10803 		add	r3, r3, #8
 824 0118 1846     		mov	r0, r3
 825 011a 4FF0FF31 		mov	r1, #-1
 826 011e FFF7FEFF 		bl	DWC_WRITE_REG32
 270:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		for (i = 0; i <= core_if->dev_if->num_out_eps; i++) {
 827              		.loc 2 270 0 discriminator 2
 828 0122 FB68     		ldr	r3, [r7, #12]
 829 0124 03F10103 		add	r3, r3, #1
 830 0128 FB60     		str	r3, [r7, #12]
 831              	.L31:
 270:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		for (i = 0; i <= core_if->dev_if->num_out_eps; i++) {
 832              		.loc 2 270 0 is_stmt 0 discriminator 1
 833 012a 7B68     		ldr	r3, [r7, #4]
 834 012c 9B68     		ldr	r3, [r3, #8]
 835 012e 93F84630 		ldrb	r3, [r3, #70]	@ zero_extendqisi2
 836 0132 1A46     		mov	r2, r3
 837 0134 FB68     		ldr	r3, [r7, #12]
 838 0136 9A42     		cmp	r2, r3
 839 0138 E3DA     		bge	.L32
 272:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 					doepint, 0xFFFFFFFF);
 273:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		}
 274:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 275:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		/* Clear and disable DAINT */
 276:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		DWC_WRITE_REG32(&core_if->dev_if->dev_global_regs->daint,
 840              		.loc 2 276 0 is_stmt 1
 841 013a 7B68     		ldr	r3, [r7, #4]
 842 013c 9B68     		ldr	r3, [r3, #8]
 843 013e 1B68     		ldr	r3, [r3, #0]
 844 0140 03F11803 		add	r3, r3, #24
 845 0144 1846     		mov	r0, r3
 846 0146 4FF0FF31 		mov	r1, #-1
 847 014a FFF7FEFF 		bl	DWC_WRITE_REG32
 277:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				0xFFFFFFFF);
 278:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		DWC_WRITE_REG32(&core_if->dev_if->dev_global_regs->daintmsk, 0);
 848              		.loc 2 278 0
 849 014e 7B68     		ldr	r3, [r7, #4]
 850 0150 9B68     		ldr	r3, [r3, #8]
 851 0152 1B68     		ldr	r3, [r3, #0]
 852 0154 03F11C03 		add	r3, r3, #28
 853 0158 1846     		mov	r0, r3
 854 015a 4FF00001 		mov	r1, #0
 855 015e FFF7FEFF 		bl	DWC_WRITE_REG32
 856 0162 6DE0     		b	.L33
 857              	.L28:
 279:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	} else {
 280:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		for (i = 0; i < core_if->dev_if->num_in_eps; ++i) {
 858              		.loc 2 280 0
 859 0164 4FF00003 		mov	r3, #0
 860 0168 FB60     		str	r3, [r7, #12]
 861 016a 1FE0     		b	.L34
 862              	.L35:
 281:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			DWC_WRITE_REG32(&core_if->dev_if->dev_global_regs->
 863              		.loc 2 281 0 discriminator 2
 864 016c 7B68     		ldr	r3, [r7, #4]
 865 016e 9B68     		ldr	r3, [r3, #8]
 866 0170 1A68     		ldr	r2, [r3, #0]
 867 0172 FB68     		ldr	r3, [r7, #12]
 868 0174 03F11003 		add	r3, r3, #16
 869 0178 4FEA8303 		lsl	r3, r3, #2
 870 017c D318     		adds	r3, r2, r3
 871 017e 1846     		mov	r0, r3
 872 0180 4FF00001 		mov	r1, #0
 873 0184 FFF7FEFF 		bl	DWC_WRITE_REG32
 282:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 					diepeachintmsk[i], 0);
 283:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			DWC_WRITE_REG32(&core_if->dev_if->in_ep_regs[i]->
 874              		.loc 2 283 0 discriminator 2
 875 0188 7B68     		ldr	r3, [r7, #4]
 876 018a 9A68     		ldr	r2, [r3, #8]
 877 018c FB68     		ldr	r3, [r7, #12]
 878 018e 4FEA8303 		lsl	r3, r3, #2
 879 0192 D318     		adds	r3, r2, r3
 880 0194 5B68     		ldr	r3, [r3, #4]
 881 0196 03F10803 		add	r3, r3, #8
 882 019a 1846     		mov	r0, r3
 883 019c 4FF0FF31 		mov	r1, #-1
 884 01a0 FFF7FEFF 		bl	DWC_WRITE_REG32
 280:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		for (i = 0; i < core_if->dev_if->num_in_eps; ++i) {
 885              		.loc 2 280 0 discriminator 2
 886 01a4 FB68     		ldr	r3, [r7, #12]
 887 01a6 03F10103 		add	r3, r3, #1
 888 01aa FB60     		str	r3, [r7, #12]
 889              	.L34:
 280:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		for (i = 0; i < core_if->dev_if->num_in_eps; ++i) {
 890              		.loc 2 280 0 is_stmt 0 discriminator 1
 891 01ac 7B68     		ldr	r3, [r7, #4]
 892 01ae 9B68     		ldr	r3, [r3, #8]
 893 01b0 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 894 01b4 1A46     		mov	r2, r3
 895 01b6 FB68     		ldr	r3, [r7, #12]
 896 01b8 9A42     		cmp	r2, r3
 897 01ba D7DC     		bgt	.L35
 284:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 					diepint, 0xFFFFFFFF);
 285:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		}
 286:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 287:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		for (i = 0; i < core_if->dev_if->num_out_eps; ++i) {
 898              		.loc 2 287 0 is_stmt 1
 899 01bc 4FF00003 		mov	r3, #0
 900 01c0 FB60     		str	r3, [r7, #12]
 901 01c2 21E0     		b	.L36
 902              	.L37:
 288:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			DWC_WRITE_REG32(&core_if->dev_if->dev_global_regs->
 903              		.loc 2 288 0 discriminator 2
 904 01c4 7B68     		ldr	r3, [r7, #4]
 905 01c6 9B68     		ldr	r3, [r3, #8]
 906 01c8 1A68     		ldr	r2, [r3, #0]
 907 01ca FB68     		ldr	r3, [r7, #12]
 908 01cc 03F11803 		add	r3, r3, #24
 909 01d0 4FEA8303 		lsl	r3, r3, #2
 910 01d4 D318     		adds	r3, r2, r3
 911 01d6 1846     		mov	r0, r3
 912 01d8 4FF00001 		mov	r1, #0
 913 01dc FFF7FEFF 		bl	DWC_WRITE_REG32
 289:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 					doepeachintmsk[i], 0);
 290:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			DWC_WRITE_REG32(&core_if->dev_if->out_ep_regs[i]->
 914              		.loc 2 290 0 discriminator 2
 915 01e0 7B68     		ldr	r3, [r7, #4]
 916 01e2 9A68     		ldr	r2, [r3, #8]
 917 01e4 FB68     		ldr	r3, [r7, #12]
 918 01e6 03F10803 		add	r3, r3, #8
 919 01ea 4FEA8303 		lsl	r3, r3, #2
 920 01ee D318     		adds	r3, r2, r3
 921 01f0 5B68     		ldr	r3, [r3, #4]
 922 01f2 03F10803 		add	r3, r3, #8
 923 01f6 1846     		mov	r0, r3
 924 01f8 4FF0FF31 		mov	r1, #-1
 925 01fc FFF7FEFF 		bl	DWC_WRITE_REG32
 287:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		for (i = 0; i < core_if->dev_if->num_out_eps; ++i) {
 926              		.loc 2 287 0 discriminator 2
 927 0200 FB68     		ldr	r3, [r7, #12]
 928 0202 03F10103 		add	r3, r3, #1
 929 0206 FB60     		str	r3, [r7, #12]
 930              	.L36:
 287:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		for (i = 0; i < core_if->dev_if->num_out_eps; ++i) {
 931              		.loc 2 287 0 is_stmt 0 discriminator 1
 932 0208 7B68     		ldr	r3, [r7, #4]
 933 020a 9B68     		ldr	r3, [r3, #8]
 934 020c 93F84630 		ldrb	r3, [r3, #70]	@ zero_extendqisi2
 935 0210 1A46     		mov	r2, r3
 936 0212 FB68     		ldr	r3, [r7, #12]
 937 0214 9A42     		cmp	r2, r3
 938 0216 D5DC     		bgt	.L37
 291:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 					doepint, 0xFFFFFFFF);
 292:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		}
 293:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 294:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		DWC_WRITE_REG32(&core_if->dev_if->dev_global_regs->deachintmsk,
 939              		.loc 2 294 0 is_stmt 1
 940 0218 7B68     		ldr	r3, [r7, #4]
 941 021a 9B68     		ldr	r3, [r3, #8]
 942 021c 1B68     		ldr	r3, [r3, #0]
 943 021e 03F13C03 		add	r3, r3, #60
 944 0222 1846     		mov	r0, r3
 945 0224 4FF00001 		mov	r1, #0
 946 0228 FFF7FEFF 		bl	DWC_WRITE_REG32
 295:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				0);
 296:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		DWC_WRITE_REG32(&core_if->dev_if->dev_global_regs->deachint,
 947              		.loc 2 296 0
 948 022c 7B68     		ldr	r3, [r7, #4]
 949 022e 9B68     		ldr	r3, [r3, #8]
 950 0230 1B68     		ldr	r3, [r3, #0]
 951 0232 03F13803 		add	r3, r3, #56
 952 0236 1846     		mov	r0, r3
 953 0238 4FF0FF31 		mov	r1, #-1
 954 023c FFF7FEFF 		bl	DWC_WRITE_REG32
 955              	.L33:
 297:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				0xFFFFFFFF);
 298:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 299:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	}
 300:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 301:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	/* Disable interrupts */
 302:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	ahbcfg.b.glblintrmsk = 1;
 956              		.loc 2 302 0
 957 0240 BB68     		ldr	r3, [r7, #8]
 958 0242 43F00103 		orr	r3, r3, #1
 959 0246 BB60     		str	r3, [r7, #8]
 303:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	DWC_MODIFY_REG32(&core_if->core_global_regs->gahbcfg, ahbcfg.d32, 0);
 960              		.loc 2 303 0
 961 0248 7B68     		ldr	r3, [r7, #4]
 962 024a 5B68     		ldr	r3, [r3, #4]
 963 024c 03F10802 		add	r2, r3, #8
 964 0250 BB68     		ldr	r3, [r7, #8]
 965 0252 1046     		mov	r0, r2
 966 0254 1946     		mov	r1, r3
 967 0256 4FF00002 		mov	r2, #0
 968 025a FFF7FEFF 		bl	DWC_MODIFY_REG32
 304:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 305:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	/* Disable all interrupts. */
 306:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	DWC_WRITE_REG32(&core_if->core_global_regs->gintmsk, 0);
 969              		.loc 2 306 0
 970 025e 7B68     		ldr	r3, [r7, #4]
 971 0260 5B68     		ldr	r3, [r3, #4]
 972 0262 03F11803 		add	r3, r3, #24
 973 0266 1846     		mov	r0, r3
 974 0268 4FF00001 		mov	r1, #0
 975 026c FFF7FEFF 		bl	DWC_WRITE_REG32
 307:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 308:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	/* Clear any pending interrupts */
 309:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	DWC_WRITE_REG32(&core_if->core_global_regs->gintsts, 0xFFFFFFFF);
 976              		.loc 2 309 0
 977 0270 7B68     		ldr	r3, [r7, #4]
 978 0272 5B68     		ldr	r3, [r3, #4]
 979 0274 03F11403 		add	r3, r3, #20
 980 0278 1846     		mov	r0, r3
 981 027a 4FF0FF31 		mov	r1, #-1
 982 027e FFF7FEFF 		bl	DWC_WRITE_REG32
 310:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 311:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	/* Clear any pending OTG Interrupts */
 312:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	DWC_WRITE_REG32(&core_if->core_global_regs->gotgint, 0xFFFFFFFF);
 983              		.loc 2 312 0
 984 0282 7B68     		ldr	r3, [r7, #4]
 985 0284 5B68     		ldr	r3, [r3, #4]
 986 0286 03F10403 		add	r3, r3, #4
 987 028a 1846     		mov	r0, r3
 988 028c 4FF0FF31 		mov	r1, #-1
 989 0290 FFF7FEFF 		bl	DWC_WRITE_REG32
 313:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** }
 990              		.loc 2 313 0
 991 0294 07F11007 		add	r7, r7, #16
 992 0298 BD46     		mov	sp, r7
 993 029a 80BD     		pop	{r7, pc}
 994              		.cfi_endproc
 995              	.LFE26:
 997              		.section	.text.unmask_sess_req_intr,"ax",%progbits
 998              		.align	2
 999              		.thumb
 1000              		.thumb_func
 1002              	unmask_sess_req_intr:
 1003              	.LFB27:
 314:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 315:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** #if 0
 316:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** /**
 317:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * Unmask Port Connection Detected interrupt
 318:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  *
 319:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  */
 320:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** static void unmask_conn_det_intr(dwc_otg_core_if_t * core_if)
 321:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** {
 322:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	gintmsk_data_t gintmsk = {.d32 = 0,.b.portintr = 1 };
 323:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 324:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	DWC_WRITE_REG32(&core_if->core_global_regs->gintmsk, gintmsk.d32);
 325:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** }
 326:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** #endif
 327:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 328:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** /**
 329:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * Unmask Session Request interrupt
 330:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  *
 331:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  */
 332:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** static void unmask_sess_req_intr(dwc_otg_core_if_t * core_if)
 333:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** {
 1004              		.loc 2 333 0
 1005              		.cfi_startproc
 1006              		@ args = 0, pretend = 0, frame = 16
 1007              		@ frame_needed = 1, uses_anonymous_args = 0
 1008 0000 80B5     		push	{r7, lr}
 1009              	.LCFI33:
 1010              		.cfi_def_cfa_offset 8
 1011              		.cfi_offset 7, -8
 1012              		.cfi_offset 14, -4
 1013 0002 84B0     		sub	sp, sp, #16
 1014              	.LCFI34:
 1015              		.cfi_def_cfa_offset 24
 1016 0004 00AF     		add	r7, sp, #0
 1017              	.LCFI35:
 1018              		.cfi_def_cfa_register 7
 1019 0006 7860     		str	r0, [r7, #4]
 334:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	gintmsk_data_t gintmsk = {.d32 = 0,.b.sessreqintr = 1 };
 1020              		.loc 2 334 0
 1021 0008 4FF00003 		mov	r3, #0
 1022 000c FB60     		str	r3, [r7, #12]
 1023 000e FB68     		ldr	r3, [r7, #12]
 1024 0010 43F08043 		orr	r3, r3, #1073741824
 1025 0014 FB60     		str	r3, [r7, #12]
 335:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 336:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	DWC_WRITE_REG32(&core_if->core_global_regs->gintmsk, gintmsk.d32);
 1026              		.loc 2 336 0
 1027 0016 7B68     		ldr	r3, [r7, #4]
 1028 0018 5B68     		ldr	r3, [r3, #4]
 1029 001a 03F11802 		add	r2, r3, #24
 1030 001e FB68     		ldr	r3, [r7, #12]
 1031 0020 1046     		mov	r0, r2
 1032 0022 1946     		mov	r1, r3
 1033 0024 FFF7FEFF 		bl	DWC_WRITE_REG32
 337:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** }
 1034              		.loc 2 337 0
 1035 0028 07F11007 		add	r7, r7, #16
 1036 002c BD46     		mov	sp, r7
 1037 002e 80BD     		pop	{r7, pc}
 1038              		.cfi_endproc
 1039              	.LFE27:
 1041              		.section	.text.dwc_otg_adp_probe_start,"ax",%progbits
 1042              		.align	2
 1043              		.global	dwc_otg_adp_probe_start
 1044              		.thumb
 1045              		.thumb_func
 1047              	dwc_otg_adp_probe_start:
 1048              	.LFB28:
 338:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 339:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** /**
 340:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * Starts the ADP Probing
 341:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  *
 342:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * @param core_if the pointer to core_if strucure.
 343:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  */
 344:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** uint32_t dwc_otg_adp_probe_start(dwc_otg_core_if_t * core_if)
 345:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** {
 1049              		.loc 2 345 0
 1050              		.cfi_startproc
 1051              		@ args = 0, pretend = 0, frame = 16
 1052              		@ frame_needed = 1, uses_anonymous_args = 0
 1053 0000 80B5     		push	{r7, lr}
 1054              	.LCFI36:
 1055              		.cfi_def_cfa_offset 8
 1056              		.cfi_offset 7, -8
 1057              		.cfi_offset 14, -4
 1058 0002 84B0     		sub	sp, sp, #16
 1059              	.LCFI37:
 1060              		.cfi_def_cfa_offset 24
 1061 0004 00AF     		add	r7, sp, #0
 1062              	.LCFI38:
 1063              		.cfi_def_cfa_register 7
 1064 0006 7860     		str	r0, [r7, #4]
 346:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 347:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl_data_t adpctl;
 348:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 349:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	dwc_otg_disable_global_interrupts(core_if);
 1065              		.loc 2 349 0
 1066 0008 7868     		ldr	r0, [r7, #4]
 1067 000a FFF7FEFF 		bl	dwc_otg_disable_global_interrupts
 350:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	// TODO - check: most probably this is not required
 351:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	mask_all_interrupts(core_if);
 1068              		.loc 2 351 0
 1069 000e 7868     		ldr	r0, [r7, #4]
 1070 0010 FFF7FEFF 		bl	mask_all_interrupts
 352:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 353:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	// TODO - check: most probably this is not required
 354:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	if (dwc_otg_is_host_mode(core_if)) {
 1071              		.loc 2 354 0
 1072 0014 7868     		ldr	r0, [r7, #4]
 1073 0016 FFF7FEFF 		bl	dwc_otg_is_host_mode
 1074 001a 0346     		mov	r3, r0
 1075 001c 002B     		cmp	r3, #0
 1076 001e 02D0     		beq	.L40
 355:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		unmask_sess_req_intr(core_if);
 1077              		.loc 2 355 0
 1078 0020 7868     		ldr	r0, [r7, #4]
 1079 0022 FFF7FEFF 		bl	unmask_sess_req_intr
 1080              	.L40:
 356:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	}
 357:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	dwc_otg_enable_global_interrupts(core_if);
 1081              		.loc 2 357 0
 1082 0026 7868     		ldr	r0, [r7, #4]
 1083 0028 FFF7FEFF 		bl	dwc_otg_enable_global_interrupts
 358:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 359:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	core_if->adp.probe_enabled = 1;
 1084              		.loc 2 359 0
 1085 002c 7B68     		ldr	r3, [r7, #4]
 1086 002e 4FF00102 		mov	r2, #1
 1087 0032 C3F8A420 		str	r2, [r3, #164]
 360:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 361:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl.b.adpres = 1;
 1088              		.loc 2 361 0
 1089 0036 FB68     		ldr	r3, [r7, #12]
 1090 0038 43F40023 		orr	r3, r3, #524288
 1091 003c FB60     		str	r3, [r7, #12]
 362:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	dwc_otg_adp_write_reg(core_if, adpctl.d32);
 1092              		.loc 2 362 0
 1093 003e FB68     		ldr	r3, [r7, #12]
 1094 0040 7868     		ldr	r0, [r7, #4]
 1095 0042 1946     		mov	r1, r3
 1096 0044 FFF7FEFF 		bl	dwc_otg_adp_write_reg
 363:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 364:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	while (adpctl.b.adpres) {
 1097              		.loc 2 364 0
 1098 0048 04E0     		b	.L41
 1099              	.L42:
 365:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		adpctl.d32 = dwc_otg_adp_read_reg(core_if);
 1100              		.loc 2 365 0
 1101 004a 7868     		ldr	r0, [r7, #4]
 1102 004c FFF7FEFF 		bl	dwc_otg_adp_read_reg
 1103 0050 0346     		mov	r3, r0
 1104 0052 FB60     		str	r3, [r7, #12]
 1105              	.L41:
 364:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	while (adpctl.b.adpres) {
 1106              		.loc 2 364 0 discriminator 1
 1107 0054 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1108 0056 03F00803 		and	r3, r3, #8
 1109 005a DBB2     		uxtb	r3, r3
 1110 005c 002B     		cmp	r3, #0
 1111 005e F4D1     		bne	.L42
 366:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	}
 367:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 368:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl.d32 = 0;
 1112              		.loc 2 368 0
 1113 0060 4FF00003 		mov	r3, #0
 1114 0064 FB60     		str	r3, [r7, #12]
 369:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl.b.adp_tmout_int_msk = 1;
 1115              		.loc 2 369 0
 1116 0066 FB68     		ldr	r3, [r7, #12]
 1117 0068 43F08063 		orr	r3, r3, #67108864
 1118 006c FB60     		str	r3, [r7, #12]
 370:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl.b.adp_prb_int_msk = 1;
 1119              		.loc 2 370 0
 1120 006e FB68     		ldr	r3, [r7, #12]
 1121 0070 43F08073 		orr	r3, r3, #16777216
 1122 0074 FB60     		str	r3, [r7, #12]
 371:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl.b.prb_dschg = 1;
 1123              		.loc 2 371 0
 1124 0076 FB68     		ldr	r3, [r7, #12]
 1125 0078 4FF00102 		mov	r2, #1
 1126 007c 62F30103 		bfi	r3, r2, #0, #2
 1127 0080 FB60     		str	r3, [r7, #12]
 372:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl.b.prb_delta = 1;
 1128              		.loc 2 372 0
 1129 0082 FB68     		ldr	r3, [r7, #12]
 1130 0084 4FF00102 		mov	r2, #1
 1131 0088 62F38303 		bfi	r3, r2, #2, #2
 1132 008c FB60     		str	r3, [r7, #12]
 373:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl.b.prb_per = 1;
 1133              		.loc 2 373 0
 1134 008e FB68     		ldr	r3, [r7, #12]
 1135 0090 4FF00102 		mov	r2, #1
 1136 0094 62F30513 		bfi	r3, r2, #4, #2
 1137 0098 FB60     		str	r3, [r7, #12]
 374:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl.b.adpen = 1;
 1138              		.loc 2 374 0
 1139 009a FB68     		ldr	r3, [r7, #12]
 1140 009c 43F48013 		orr	r3, r3, #1048576
 1141 00a0 FB60     		str	r3, [r7, #12]
 375:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl.b.enaprb = 1;
 1142              		.loc 2 375 0
 1143 00a2 FB68     		ldr	r3, [r7, #12]
 1144 00a4 43F40033 		orr	r3, r3, #131072
 1145 00a8 FB60     		str	r3, [r7, #12]
 376:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 377:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	dwc_otg_adp_write_reg(core_if, adpctl.d32);
 1146              		.loc 2 377 0
 1147 00aa FB68     		ldr	r3, [r7, #12]
 1148 00ac 7868     		ldr	r0, [r7, #4]
 1149 00ae 1946     		mov	r1, r3
 1150 00b0 FFF7FEFF 		bl	dwc_otg_adp_write_reg
 378:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 379:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	return 0;
 1151              		.loc 2 379 0
 1152 00b4 4FF00003 		mov	r3, #0
 380:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** }
 1153              		.loc 2 380 0
 1154 00b8 1846     		mov	r0, r3
 1155 00ba 07F11007 		add	r7, r7, #16
 1156 00be BD46     		mov	sp, r7
 1157 00c0 80BD     		pop	{r7, pc}
 1158              		.cfi_endproc
 1159              	.LFE28:
 1161 00c2 00BF     		.section	.text.dwc_otg_adp_sense_timer_start,"ax",%progbits
 1162              		.align	2
 1163              		.global	dwc_otg_adp_sense_timer_start
 1164              		.thumb
 1165              		.thumb_func
 1167              	dwc_otg_adp_sense_timer_start:
 1168              	.LFB29:
 381:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 382:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** /**
 383:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * Starts the ADP Sense timer to detect if ADP Sense interrupt is not asserted within
 384:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * 3 seconds.
 385:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  *
 386:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * @param core_if the pointer to core_if strucure.
 387:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  */
 388:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** void dwc_otg_adp_sense_timer_start(dwc_otg_core_if_t * core_if)
 389:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** {
 1169              		.loc 2 389 0
 1170              		.cfi_startproc
 1171              		@ args = 0, pretend = 0, frame = 8
 1172              		@ frame_needed = 1, uses_anonymous_args = 0
 1173 0000 80B5     		push	{r7, lr}
 1174              	.LCFI39:
 1175              		.cfi_def_cfa_offset 8
 1176              		.cfi_offset 7, -8
 1177              		.cfi_offset 14, -4
 1178 0002 82B0     		sub	sp, sp, #8
 1179              	.LCFI40:
 1180              		.cfi_def_cfa_offset 16
 1181 0004 00AF     		add	r7, sp, #0
 1182              	.LCFI41:
 1183              		.cfi_def_cfa_register 7
 1184 0006 7860     		str	r0, [r7, #4]
 390:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	core_if->adp.sense_timer_started = 1;
 1185              		.loc 2 390 0
 1186 0008 7B68     		ldr	r3, [r7, #4]
 1187 000a 4FF00102 		mov	r2, #1
 1188 000e C3F8B020 		str	r2, [r3, #176]
 391:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	DWC_TIMER_SCHEDULE(core_if->adp.sense_timer, 3000 /* 3 secs */ );
 1189              		.loc 2 391 0
 1190 0012 7B68     		ldr	r3, [r7, #4]
 1191 0014 D3F8AC30 		ldr	r3, [r3, #172]
 1192 0018 1846     		mov	r0, r3
 1193 001a 40F6B831 		movw	r1, #3000
 1194 001e FFF7FEFF 		bl	DWC_TIMER_SCHEDULE
 392:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** }
 1195              		.loc 2 392 0
 1196 0022 07F10807 		add	r7, r7, #8
 1197 0026 BD46     		mov	sp, r7
 1198 0028 80BD     		pop	{r7, pc}
 1199              		.cfi_endproc
 1200              	.LFE29:
 1202 002a 00BF     		.section	.text.dwc_otg_adp_sense_start,"ax",%progbits
 1203              		.align	2
 1204              		.global	dwc_otg_adp_sense_start
 1205              		.thumb
 1206              		.thumb_func
 1208              	dwc_otg_adp_sense_start:
 1209              	.LFB30:
 393:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 394:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** /**
 395:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * Starts the ADP Sense
 396:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  *
 397:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * @param core_if the pointer to core_if strucure.
 398:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  */
 399:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** uint32_t dwc_otg_adp_sense_start(dwc_otg_core_if_t * core_if)
 400:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** {
 1210              		.loc 2 400 0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 16
 1213              		@ frame_needed = 1, uses_anonymous_args = 0
 1214 0000 80B5     		push	{r7, lr}
 1215              	.LCFI42:
 1216              		.cfi_def_cfa_offset 8
 1217              		.cfi_offset 7, -8
 1218              		.cfi_offset 14, -4
 1219 0002 84B0     		sub	sp, sp, #16
 1220              	.LCFI43:
 1221              		.cfi_def_cfa_offset 24
 1222 0004 00AF     		add	r7, sp, #0
 1223              	.LCFI44:
 1224              		.cfi_def_cfa_register 7
 1225 0006 7860     		str	r0, [r7, #4]
 401:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl_data_t adpctl;
 402:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 403:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	dwc_otg_disable_global_interrupts(core_if);
 1226              		.loc 2 403 0
 1227 0008 7868     		ldr	r0, [r7, #4]
 1228 000a FFF7FEFF 		bl	dwc_otg_disable_global_interrupts
 404:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 405:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	core_if->adp.sense_enabled = 1;
 1229              		.loc 2 405 0
 1230 000e 7B68     		ldr	r3, [r7, #4]
 1231 0010 4FF00102 		mov	r2, #1
 1232 0014 C3F8A820 		str	r2, [r3, #168]
 406:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 407:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl.b.adpres = 1;
 1233              		.loc 2 407 0
 1234 0018 FB68     		ldr	r3, [r7, #12]
 1235 001a 43F40023 		orr	r3, r3, #524288
 1236 001e FB60     		str	r3, [r7, #12]
 408:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	dwc_otg_adp_write_reg(core_if, adpctl.d32);
 1237              		.loc 2 408 0
 1238 0020 FB68     		ldr	r3, [r7, #12]
 1239 0022 7868     		ldr	r0, [r7, #4]
 1240 0024 1946     		mov	r1, r3
 1241 0026 FFF7FEFF 		bl	dwc_otg_adp_write_reg
 409:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 410:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	while (adpctl.b.adpres) {
 1242              		.loc 2 410 0
 1243 002a 04E0     		b	.L46
 1244              	.L47:
 411:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		adpctl.d32 = dwc_otg_adp_read_reg(core_if);
 1245              		.loc 2 411 0
 1246 002c 7868     		ldr	r0, [r7, #4]
 1247 002e FFF7FEFF 		bl	dwc_otg_adp_read_reg
 1248 0032 0346     		mov	r3, r0
 1249 0034 FB60     		str	r3, [r7, #12]
 1250              	.L46:
 410:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	while (adpctl.b.adpres) {
 1251              		.loc 2 410 0 discriminator 1
 1252 0036 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1253 0038 03F00803 		and	r3, r3, #8
 1254 003c DBB2     		uxtb	r3, r3
 1255 003e 002B     		cmp	r3, #0
 1256 0040 F4D1     		bne	.L47
 412:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	}
 413:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 414:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl.b.adpen = 1;
 1257              		.loc 2 414 0
 1258 0042 FB68     		ldr	r3, [r7, #12]
 1259 0044 43F48013 		orr	r3, r3, #1048576
 1260 0048 FB60     		str	r3, [r7, #12]
 415:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl.b.enasns = 1;
 1261              		.loc 2 415 0
 1262 004a FB68     		ldr	r3, [r7, #12]
 1263 004c 43F48023 		orr	r3, r3, #262144
 1264 0050 FB60     		str	r3, [r7, #12]
 416:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl.b.adp_sns_int_msk = 1;
 1265              		.loc 2 416 0
 1266 0052 FB68     		ldr	r3, [r7, #12]
 1267 0054 43F00073 		orr	r3, r3, #33554432
 1268 0058 FB60     		str	r3, [r7, #12]
 417:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 418:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	dwc_otg_adp_write_reg(core_if, adpctl.d32);
 1269              		.loc 2 418 0
 1270 005a FB68     		ldr	r3, [r7, #12]
 1271 005c 7868     		ldr	r0, [r7, #4]
 1272 005e 1946     		mov	r1, r3
 1273 0060 FFF7FEFF 		bl	dwc_otg_adp_write_reg
 419:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 420:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	dwc_otg_adp_sense_timer_start(core_if);
 1274              		.loc 2 420 0
 1275 0064 7868     		ldr	r0, [r7, #4]
 1276 0066 FFF7FEFF 		bl	dwc_otg_adp_sense_timer_start
 421:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 422:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	return 0;
 1277              		.loc 2 422 0
 1278 006a 4FF00003 		mov	r3, #0
 423:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** }
 1279              		.loc 2 423 0
 1280 006e 1846     		mov	r0, r3
 1281 0070 07F11007 		add	r7, r7, #16
 1282 0074 BD46     		mov	sp, r7
 1283 0076 80BD     		pop	{r7, pc}
 1284              		.cfi_endproc
 1285              	.LFE30:
 1287              		.section	.text.dwc_otg_adp_probe_stop,"ax",%progbits
 1288              		.align	2
 1289              		.global	dwc_otg_adp_probe_stop
 1290              		.thumb
 1291              		.thumb_func
 1293              	dwc_otg_adp_probe_stop:
 1294              	.LFB31:
 424:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 425:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** /**
 426:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * Stops the ADP Probing
 427:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  *
 428:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * @param core_if the pointer to core_if strucure.
 429:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  */
 430:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** uint32_t dwc_otg_adp_probe_stop(dwc_otg_core_if_t * core_if)
 431:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** {
 1295              		.loc 2 431 0
 1296              		.cfi_startproc
 1297              		@ args = 0, pretend = 0, frame = 16
 1298              		@ frame_needed = 1, uses_anonymous_args = 0
 1299 0000 80B5     		push	{r7, lr}
 1300              	.LCFI45:
 1301              		.cfi_def_cfa_offset 8
 1302              		.cfi_offset 7, -8
 1303              		.cfi_offset 14, -4
 1304 0002 84B0     		sub	sp, sp, #16
 1305              	.LCFI46:
 1306              		.cfi_def_cfa_offset 24
 1307 0004 00AF     		add	r7, sp, #0
 1308              	.LCFI47:
 1309              		.cfi_def_cfa_register 7
 1310 0006 7860     		str	r0, [r7, #4]
 432:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 433:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl_data_t adpctl;
 434:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 435:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	core_if->adp.probe_enabled = 0;
 1311              		.loc 2 435 0
 1312 0008 7B68     		ldr	r3, [r7, #4]
 1313 000a 4FF00002 		mov	r2, #0
 1314 000e C3F8A420 		str	r2, [r3, #164]
 436:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl.b.adpres = 1;
 1315              		.loc 2 436 0
 1316 0012 FB68     		ldr	r3, [r7, #12]
 1317 0014 43F40023 		orr	r3, r3, #524288
 1318 0018 FB60     		str	r3, [r7, #12]
 437:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	dwc_otg_adp_write_reg(core_if, adpctl.d32);
 1319              		.loc 2 437 0
 1320 001a FB68     		ldr	r3, [r7, #12]
 1321 001c 7868     		ldr	r0, [r7, #4]
 1322 001e 1946     		mov	r1, r3
 1323 0020 FFF7FEFF 		bl	dwc_otg_adp_write_reg
 438:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 439:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	/** todo: check if ADP is needed to be reset */
 440:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	while (adpctl.b.adpres) {
 1324              		.loc 2 440 0
 1325 0024 04E0     		b	.L50
 1326              	.L51:
 441:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		adpctl.d32 = dwc_otg_adp_read_reg(core_if);
 1327              		.loc 2 441 0
 1328 0026 7868     		ldr	r0, [r7, #4]
 1329 0028 FFF7FEFF 		bl	dwc_otg_adp_read_reg
 1330 002c 0346     		mov	r3, r0
 1331 002e FB60     		str	r3, [r7, #12]
 1332              	.L50:
 440:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	while (adpctl.b.adpres) {
 1333              		.loc 2 440 0 discriminator 1
 1334 0030 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1335 0032 03F00803 		and	r3, r3, #8
 1336 0036 DBB2     		uxtb	r3, r3
 1337 0038 002B     		cmp	r3, #0
 1338 003a F4D1     		bne	.L51
 442:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	}
 443:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 444:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	dwc_otg_adp_write_reg(core_if, 0);
 1339              		.loc 2 444 0
 1340 003c 7868     		ldr	r0, [r7, #4]
 1341 003e 4FF00001 		mov	r1, #0
 1342 0042 FFF7FEFF 		bl	dwc_otg_adp_write_reg
 445:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 446:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	dwc_otg_enable_global_interrupts(core_if);
 1343              		.loc 2 446 0
 1344 0046 7868     		ldr	r0, [r7, #4]
 1345 0048 FFF7FEFF 		bl	dwc_otg_enable_global_interrupts
 447:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 448:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	return 0;
 1346              		.loc 2 448 0
 1347 004c 4FF00003 		mov	r3, #0
 449:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** }
 1348              		.loc 2 449 0
 1349 0050 1846     		mov	r0, r3
 1350 0052 07F11007 		add	r7, r7, #16
 1351 0056 BD46     		mov	sp, r7
 1352 0058 80BD     		pop	{r7, pc}
 1353              		.cfi_endproc
 1354              	.LFE31:
 1356 005a 00BF     		.section	.text.dwc_otg_adp_sense_stop,"ax",%progbits
 1357              		.align	2
 1358              		.global	dwc_otg_adp_sense_stop
 1359              		.thumb
 1360              		.thumb_func
 1362              	dwc_otg_adp_sense_stop:
 1363              	.LFB32:
 450:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 451:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** /**
 452:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * Stops the ADP Sensing
 453:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  *
 454:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * @param core_if the pointer to core_if strucure.
 455:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  */
 456:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** uint32_t dwc_otg_adp_sense_stop(dwc_otg_core_if_t * core_if)
 457:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** {
 1364              		.loc 2 457 0
 1365              		.cfi_startproc
 1366              		@ args = 0, pretend = 0, frame = 16
 1367              		@ frame_needed = 1, uses_anonymous_args = 0
 1368 0000 80B5     		push	{r7, lr}
 1369              	.LCFI48:
 1370              		.cfi_def_cfa_offset 8
 1371              		.cfi_offset 7, -8
 1372              		.cfi_offset 14, -4
 1373 0002 84B0     		sub	sp, sp, #16
 1374              	.LCFI49:
 1375              		.cfi_def_cfa_offset 24
 1376 0004 00AF     		add	r7, sp, #0
 1377              	.LCFI50:
 1378              		.cfi_def_cfa_register 7
 1379 0006 7860     		str	r0, [r7, #4]
 458:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl_data_t adpctl;
 459:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 460:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	core_if->adp.sense_enabled = 0;
 1380              		.loc 2 460 0
 1381 0008 7B68     		ldr	r3, [r7, #4]
 1382 000a 4FF00002 		mov	r2, #0
 1383 000e C3F8A820 		str	r2, [r3, #168]
 461:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 462:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl.b.adpres = 1;
 1384              		.loc 2 462 0
 1385 0012 FB68     		ldr	r3, [r7, #12]
 1386 0014 43F40023 		orr	r3, r3, #524288
 1387 0018 FB60     		str	r3, [r7, #12]
 463:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	dwc_otg_adp_write_reg(core_if, adpctl.d32);
 1388              		.loc 2 463 0
 1389 001a FB68     		ldr	r3, [r7, #12]
 1390 001c 7868     		ldr	r0, [r7, #4]
 1391 001e 1946     		mov	r1, r3
 1392 0020 FFF7FEFF 		bl	dwc_otg_adp_write_reg
 464:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 465:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	/** todo: check if ADP is needed to be reset */
 466:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	while (adpctl.b.adpres) {
 1393              		.loc 2 466 0
 1394 0024 04E0     		b	.L54
 1395              	.L55:
 467:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		adpctl.d32 = dwc_otg_adp_read_reg(core_if);
 1396              		.loc 2 467 0
 1397 0026 7868     		ldr	r0, [r7, #4]
 1398 0028 FFF7FEFF 		bl	dwc_otg_adp_read_reg
 1399 002c 0346     		mov	r3, r0
 1400 002e FB60     		str	r3, [r7, #12]
 1401              	.L54:
 466:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	while (adpctl.b.adpres) {
 1402              		.loc 2 466 0 discriminator 1
 1403 0030 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1404 0032 03F00803 		and	r3, r3, #8
 1405 0036 DBB2     		uxtb	r3, r3
 1406 0038 002B     		cmp	r3, #0
 1407 003a F4D1     		bne	.L55
 468:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	}
 469:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 470:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	dwc_otg_adp_write_reg(core_if, 0);
 1408              		.loc 2 470 0
 1409 003c 7868     		ldr	r0, [r7, #4]
 1410 003e 4FF00001 		mov	r1, #0
 1411 0042 FFF7FEFF 		bl	dwc_otg_adp_write_reg
 471:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 472:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	dwc_otg_enable_global_interrupts(core_if);
 1412              		.loc 2 472 0
 1413 0046 7868     		ldr	r0, [r7, #4]
 1414 0048 FFF7FEFF 		bl	dwc_otg_enable_global_interrupts
 473:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 474:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	return 0;
 1415              		.loc 2 474 0
 1416 004c 4FF00003 		mov	r3, #0
 475:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** }
 1417              		.loc 2 475 0
 1418 0050 1846     		mov	r0, r3
 1419 0052 07F11007 		add	r7, r7, #16
 1420 0056 BD46     		mov	sp, r7
 1421 0058 80BD     		pop	{r7, pc}
 1422              		.cfi_endproc
 1423              	.LFE32:
 1425 005a 00BF     		.section	.text.dwc_otg_adp_turnon_vbus,"ax",%progbits
 1426              		.align	2
 1427              		.global	dwc_otg_adp_turnon_vbus
 1428              		.thumb
 1429              		.thumb_func
 1431              	dwc_otg_adp_turnon_vbus:
 1432              	.LFB33:
 476:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 477:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** /**
 478:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * Called right after driver is loaded
 479:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * to perform initial actions for ADP
 480:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  *
 481:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * @param core_if the pointer to core_if strucure.
 482:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  */
 483:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** void dwc_otg_adp_turnon_vbus(dwc_otg_core_if_t * core_if)
 484:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** {
 1433              		.loc 2 484 0
 1434              		.cfi_startproc
 1435              		@ args = 0, pretend = 0, frame = 16
 1436              		@ frame_needed = 1, uses_anonymous_args = 0
 1437 0000 80B5     		push	{r7, lr}
 1438              	.LCFI51:
 1439              		.cfi_def_cfa_offset 8
 1440              		.cfi_offset 7, -8
 1441              		.cfi_offset 14, -4
 1442 0002 84B0     		sub	sp, sp, #16
 1443              	.LCFI52:
 1444              		.cfi_def_cfa_offset 24
 1445 0004 00AF     		add	r7, sp, #0
 1446              	.LCFI53:
 1447              		.cfi_def_cfa_register 7
 1448 0006 7860     		str	r0, [r7, #4]
 485:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	hprt0_data_t hprt0 = {.d32 = 0 };
 1449              		.loc 2 485 0
 1450 0008 4FF00003 		mov	r3, #0
 1451 000c FB60     		str	r3, [r7, #12]
 486:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 487:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	hprt0.b.prtpwr = 1;
 1452              		.loc 2 487 0
 1453 000e FB68     		ldr	r3, [r7, #12]
 1454 0010 43F48053 		orr	r3, r3, #4096
 1455 0014 FB60     		str	r3, [r7, #12]
 488:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	DWC_MODIFY_REG32(core_if->host_if->hprt0, 0, hprt0.d32);
 1456              		.loc 2 488 0
 1457 0016 7B68     		ldr	r3, [r7, #4]
 1458 0018 DB68     		ldr	r3, [r3, #12]
 1459 001a 5A68     		ldr	r2, [r3, #4]
 1460 001c FB68     		ldr	r3, [r7, #12]
 1461 001e 1046     		mov	r0, r2
 1462 0020 4FF00001 		mov	r1, #0
 1463 0024 1A46     		mov	r2, r3
 1464 0026 FFF7FEFF 		bl	DWC_MODIFY_REG32
 489:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 490:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** //      unmask_conn_det_intr(core_if);
 491:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 492:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** //      dwc_otg_enable_global_interrupts(core_if);
 493:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 494:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	dwc_otg_adp_vbuson_timer_start(core_if);
 1465              		.loc 2 494 0
 1466 002a 7868     		ldr	r0, [r7, #4]
 1467 002c FFF7FEFF 		bl	dwc_otg_adp_vbuson_timer_start
 495:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** }
 1468              		.loc 2 495 0
 1469 0030 07F11007 		add	r7, r7, #16
 1470 0034 BD46     		mov	sp, r7
 1471 0036 80BD     		pop	{r7, pc}
 1472              		.cfi_endproc
 1473              	.LFE33:
 1475              		.section	.text.dwc_otg_adp_start,"ax",%progbits
 1476              		.align	2
 1477              		.global	dwc_otg_adp_start
 1478              		.thumb
 1479              		.thumb_func
 1481              	dwc_otg_adp_start:
 1482              	.LFB34:
 496:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 497:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** /**
 498:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * Called right after driver is loaded
 499:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * to perform initial actions for ADP
 500:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  *
 501:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * @param core_if the pointer to core_if strucure.
 502:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  */
 503:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** void dwc_otg_adp_start(dwc_otg_core_if_t * core_if)
 504:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** {
 1483              		.loc 2 504 0
 1484              		.cfi_startproc
 1485              		@ args = 0, pretend = 0, frame = 16
 1486              		@ frame_needed = 1, uses_anonymous_args = 0
 1487 0000 80B5     		push	{r7, lr}
 1488              	.LCFI54:
 1489              		.cfi_def_cfa_offset 8
 1490              		.cfi_offset 7, -8
 1491              		.cfi_offset 14, -4
 1492 0002 84B0     		sub	sp, sp, #16
 1493              	.LCFI55:
 1494              		.cfi_def_cfa_offset 24
 1495 0004 00AF     		add	r7, sp, #0
 1496              	.LCFI56:
 1497              		.cfi_def_cfa_register 7
 1498 0006 7860     		str	r0, [r7, #4]
 505:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	gpwrdn_data_t gpwrdn;
 506:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	if (core_if->adp_enable) {
 1499              		.loc 2 506 0
 1500 0008 7B68     		ldr	r3, [r7, #4]
 1501 000a D3F89430 		ldr	r3, [r3, #148]
 1502 000e 002B     		cmp	r3, #0
 1503 0010 5FD0     		beq	.L58
 507:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** #if 0				// most possibly should be removed
 508:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		mask_all_interrupts(core_if);
 509:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** #endif
 510:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		/* Enable Power Down Logic */
 511:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		gpwrdn.d32 = 0;
 1504              		.loc 2 511 0
 1505 0012 4FF00003 		mov	r3, #0
 1506 0016 FB60     		str	r3, [r7, #12]
 512:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		gpwrdn.b.pmuactv = 1;
 1507              		.loc 2 512 0
 1508 0018 FB68     		ldr	r3, [r7, #12]
 1509 001a 43F00203 		orr	r3, r3, #2
 1510 001e FB60     		str	r3, [r7, #12]
 513:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, 0, gpwrdn.d32);
 1511              		.loc 2 513 0
 1512 0020 7B68     		ldr	r3, [r7, #4]
 1513 0022 5B68     		ldr	r3, [r3, #4]
 1514 0024 03F15802 		add	r2, r3, #88
 1515 0028 FB68     		ldr	r3, [r7, #12]
 1516 002a 1046     		mov	r0, r2
 1517 002c 4FF00001 		mov	r1, #0
 1518 0030 1A46     		mov	r2, r3
 1519 0032 FFF7FEFF 		bl	DWC_MODIFY_REG32
 514:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 515:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		/* Unmask SRP detected interrupt from Power Down Logic */
 516:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		gpwrdn.d32 = 0;
 1520              		.loc 2 516 0
 1521 0036 4FF00003 		mov	r3, #0
 1522 003a FB60     		str	r3, [r7, #12]
 517:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		gpwrdn.b.srp_det_msk = 1;
 1523              		.loc 2 517 0
 1524 003c FB68     		ldr	r3, [r7, #12]
 1525 003e 43F48033 		orr	r3, r3, #65536
 1526 0042 FB60     		str	r3, [r7, #12]
 518:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, 0, gpwrdn.d32);
 1527              		.loc 2 518 0
 1528 0044 7B68     		ldr	r3, [r7, #4]
 1529 0046 5B68     		ldr	r3, [r3, #4]
 1530 0048 03F15802 		add	r2, r3, #88
 1531 004c FB68     		ldr	r3, [r7, #12]
 1532 004e 1046     		mov	r0, r2
 1533 0050 4FF00001 		mov	r1, #0
 1534 0054 1A46     		mov	r2, r3
 1535 0056 FFF7FEFF 		bl	DWC_MODIFY_REG32
 519:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 520:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		gpwrdn.d32 = DWC_READ_REG32(&core_if->core_global_regs->gpwrdn);
 1536              		.loc 2 520 0
 1537 005a 7B68     		ldr	r3, [r7, #4]
 1538 005c 5B68     		ldr	r3, [r3, #4]
 1539 005e 03F15803 		add	r3, r3, #88
 1540 0062 1846     		mov	r0, r3
 1541 0064 FFF7FEFF 		bl	DWC_READ_REG32
 1542 0068 0346     		mov	r3, r0
 1543 006a FB60     		str	r3, [r7, #12]
 521:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 522:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		/* check which value is for device mode and which for Host mode */
 523:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		if (gpwrdn.b.idsts) {	/* TODO - considered host mode value is 1 */
 1544              		.loc 2 523 0
 1545 006c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1546 006e 03F02003 		and	r3, r3, #32
 1547 0072 DBB2     		uxtb	r3, r3
 1548 0074 002B     		cmp	r3, #0
 1549 0076 08D0     		beq	.L60
 524:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			core_if->adp.initial_probe = 1;
 1550              		.loc 2 524 0
 1551 0078 7B68     		ldr	r3, [r7, #4]
 1552 007a 4FF00102 		mov	r2, #1
 1553 007e C3F89820 		str	r2, [r3, #152]
 525:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			dwc_otg_adp_probe_start(core_if);
 1554              		.loc 2 525 0
 1555 0082 7868     		ldr	r0, [r7, #4]
 1556 0084 FFF7FEFF 		bl	dwc_otg_adp_probe_start
 1557 0088 23E0     		b	.L58
 1558              	.L60:
 1559              	.LBB2:
 526:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		} else {
 527:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			gotgctl_data_t gotgctl;
 528:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			
 529:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			gotgctl.d32 = DWC_READ_REG32(&core_if->core_global_regs->gotgctl);
 1560              		.loc 2 529 0
 1561 008a 7B68     		ldr	r3, [r7, #4]
 1562 008c 5B68     		ldr	r3, [r3, #4]
 1563 008e 1846     		mov	r0, r3
 1564 0090 FFF7FEFF 		bl	DWC_READ_REG32
 1565 0094 0346     		mov	r3, r0
 1566 0096 BB60     		str	r3, [r7, #8]
 530:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 531:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			if (gotgctl.b.bsesvld == 0) {
 1567              		.loc 2 531 0
 1568 0098 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 1569 009a 03F00803 		and	r3, r3, #8
 1570 009e DBB2     		uxtb	r3, r3
 1571 00a0 002B     		cmp	r3, #0
 1572 00a2 08D1     		bne	.L61
 532:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				core_if->adp.initial_probe = 1;
 1573              		.loc 2 532 0
 1574 00a4 7B68     		ldr	r3, [r7, #4]
 1575 00a6 4FF00102 		mov	r2, #1
 1576 00aa C3F89820 		str	r2, [r3, #152]
 533:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				dwc_otg_adp_probe_start(core_if);
 1577              		.loc 2 533 0
 1578 00ae 7868     		ldr	r0, [r7, #4]
 1579 00b0 FFF7FEFF 		bl	dwc_otg_adp_probe_start
 1580 00b4 0DE0     		b	.L58
 1581              	.L61:
 534:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			} else { /** @todo - check if device initialization should be performed here */
 535:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				core_if->op_state = B_PERIPHERAL;
 1582              		.loc 2 535 0
 1583 00b6 7B68     		ldr	r3, [r7, #4]
 1584 00b8 4FF00402 		mov	r2, #4
 1585 00bc 83F86420 		strb	r2, [r3, #100]
 536:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				dwc_otg_core_init(core_if);
 1586              		.loc 2 536 0
 1587 00c0 7868     		ldr	r0, [r7, #4]
 1588 00c2 FFF7FEFF 		bl	dwc_otg_core_init
 537:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				dwc_otg_enable_global_interrupts(core_if);
 1589              		.loc 2 537 0
 1590 00c6 7868     		ldr	r0, [r7, #4]
 1591 00c8 FFF7FEFF 		bl	dwc_otg_enable_global_interrupts
 538:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				cil_pcd_start(core_if);
 1592              		.loc 2 538 0
 1593 00cc 7868     		ldr	r0, [r7, #4]
 1594 00ce FFF7FEFF 		bl	cil_pcd_start
 1595              	.L58:
 1596              	.LBE2:
 539:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			}
 540:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		}
 541:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	}
 542:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** }
 1597              		.loc 2 542 0
 1598 00d2 07F11007 		add	r7, r7, #16
 1599 00d6 BD46     		mov	sp, r7
 1600 00d8 80BD     		pop	{r7, pc}
 1601              		.cfi_endproc
 1602              	.LFE34:
 1604 00da 00BF     		.section	.rodata
 1605              		.align	2
 1606              	.LC0:
 1607 0000 41445020 		.ascii	"ADP SENSE TIMER\000"
 1607      53454E53 
 1607      45205449 
 1607      4D455200 
 1608              		.align	2
 1609              	.LC1:
 1610 0010 41445020 		.ascii	"ADP VBUS ON TIMER\000"
 1610      56425553 
 1610      204F4E20 
 1610      54494D45 
 1610      5200
 1611 0022 0000     		.section	.text.dwc_otg_adp_init,"ax",%progbits
 1612              		.align	2
 1613              		.global	dwc_otg_adp_init
 1614              		.thumb
 1615              		.thumb_func
 1617              	dwc_otg_adp_init:
 1618              	.LFB35:
 543:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 544:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** void dwc_otg_adp_init(dwc_otg_core_if_t * core_if)
 545:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** {
 1619              		.loc 2 545 0
 1620              		.cfi_startproc
 1621              		@ args = 0, pretend = 0, frame = 8
 1622              		@ frame_needed = 1, uses_anonymous_args = 0
 1623 0000 80B5     		push	{r7, lr}
 1624              	.LCFI57:
 1625              		.cfi_def_cfa_offset 8
 1626              		.cfi_offset 7, -8
 1627              		.cfi_offset 14, -4
 1628 0002 82B0     		sub	sp, sp, #8
 1629              	.LCFI58:
 1630              		.cfi_def_cfa_offset 16
 1631 0004 00AF     		add	r7, sp, #0
 1632              	.LCFI59:
 1633              		.cfi_def_cfa_register 7
 1634 0006 7860     		str	r0, [r7, #4]
 546:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	core_if->adp.initial_probe = 0;
 1635              		.loc 2 546 0
 1636 0008 7B68     		ldr	r3, [r7, #4]
 1637 000a 4FF00002 		mov	r2, #0
 1638 000e C3F89820 		str	r2, [r3, #152]
 547:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	core_if->adp.probe_timer_values[0] = -1;
 1639              		.loc 2 547 0
 1640 0012 7B68     		ldr	r3, [r7, #4]
 1641 0014 4FF0FF32 		mov	r2, #-1
 1642 0018 C3F89C20 		str	r2, [r3, #156]
 548:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	core_if->adp.probe_timer_values[1] = -1;
 1643              		.loc 2 548 0
 1644 001c 7B68     		ldr	r3, [r7, #4]
 1645 001e 4FF0FF32 		mov	r2, #-1
 1646 0022 C3F8A020 		str	r2, [r3, #160]
 549:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	core_if->adp.probe_enabled = 0;
 1647              		.loc 2 549 0
 1648 0026 7B68     		ldr	r3, [r7, #4]
 1649 0028 4FF00002 		mov	r2, #0
 1650 002c C3F8A420 		str	r2, [r3, #164]
 550:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	core_if->adp.sense_enabled = 0;
 1651              		.loc 2 550 0
 1652 0030 7B68     		ldr	r3, [r7, #4]
 1653 0032 4FF00002 		mov	r2, #0
 1654 0036 C3F8A820 		str	r2, [r3, #168]
 551:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	core_if->adp.sense_timer_started = 0;
 1655              		.loc 2 551 0
 1656 003a 7B68     		ldr	r3, [r7, #4]
 1657 003c 4FF00002 		mov	r2, #0
 1658 0040 C3F8B020 		str	r2, [r3, #176]
 552:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	core_if->adp.vbuson_timer_started = 0;
 1659              		.loc 2 552 0
 1660 0044 7B68     		ldr	r3, [r7, #4]
 1661 0046 4FF00002 		mov	r2, #0
 1662 004a C3F8B820 		str	r2, [r3, #184]
 553:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	core_if->adp.attached = DWC_OTG_ADP_UNKOWN;
 1663              		.loc 2 553 0
 1664 004e 7B68     		ldr	r3, [r7, #4]
 1665 0050 4FF00202 		mov	r2, #2
 1666 0054 C3F8BC20 		str	r2, [r3, #188]
 554:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	/* Initialize timers */
 555:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	core_if->adp.sense_timer =
 556:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	    DWC_TIMER_ALLOC("ADP SENSE TIMER", adp_sense_timeout, core_if);
 1667              		.loc 2 556 0
 1668 0058 40F20000 		movw	r0, #:lower16:.LC0
 1669 005c C0F20000 		movt	r0, #:upper16:.LC0
 1670 0060 40F20001 		movw	r1, #:lower16:adp_sense_timeout
 1671 0064 C0F20001 		movt	r1, #:upper16:adp_sense_timeout
 1672 0068 7A68     		ldr	r2, [r7, #4]
 1673 006a FFF7FEFF 		bl	DWC_TIMER_ALLOC
 1674 006e 0246     		mov	r2, r0
 555:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	core_if->adp.sense_timer =
 1675              		.loc 2 555 0
 1676 0070 7B68     		ldr	r3, [r7, #4]
 1677 0072 C3F8AC20 		str	r2, [r3, #172]
 557:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 558:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	core_if->adp.vbuson_timer =
 559:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	    DWC_TIMER_ALLOC("ADP VBUS ON TIMER", adp_vbuson_timeout, core_if);
 1678              		.loc 2 559 0
 1679 0076 40F20000 		movw	r0, #:lower16:.LC1
 1680 007a C0F20000 		movt	r0, #:upper16:.LC1
 1681 007e 40F20001 		movw	r1, #:lower16:adp_vbuson_timeout
 1682 0082 C0F20001 		movt	r1, #:upper16:adp_vbuson_timeout
 1683 0086 7A68     		ldr	r2, [r7, #4]
 1684 0088 FFF7FEFF 		bl	DWC_TIMER_ALLOC
 1685 008c 0246     		mov	r2, r0
 558:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	core_if->adp.vbuson_timer =
 1686              		.loc 2 558 0
 1687 008e 7B68     		ldr	r3, [r7, #4]
 1688 0090 C3F8B420 		str	r2, [r3, #180]
 560:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** }
 1689              		.loc 2 560 0
 1690 0094 07F10807 		add	r7, r7, #8
 1691 0098 BD46     		mov	sp, r7
 1692 009a 80BD     		pop	{r7, pc}
 1693              		.cfi_endproc
 1694              	.LFE35:
 1696              		.section	.text.dwc_otg_adp_remove,"ax",%progbits
 1697              		.align	2
 1698              		.global	dwc_otg_adp_remove
 1699              		.thumb
 1700              		.thumb_func
 1702              	dwc_otg_adp_remove:
 1703              	.LFB36:
 561:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 562:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** void dwc_otg_adp_remove(dwc_otg_core_if_t * core_if)
 563:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** {
 1704              		.loc 2 563 0
 1705              		.cfi_startproc
 1706              		@ args = 0, pretend = 0, frame = 8
 1707              		@ frame_needed = 1, uses_anonymous_args = 0
 1708 0000 80B5     		push	{r7, lr}
 1709              	.LCFI60:
 1710              		.cfi_def_cfa_offset 8
 1711              		.cfi_offset 7, -8
 1712              		.cfi_offset 14, -4
 1713 0002 82B0     		sub	sp, sp, #8
 1714              	.LCFI61:
 1715              		.cfi_def_cfa_offset 16
 1716 0004 00AF     		add	r7, sp, #0
 1717              	.LCFI62:
 1718              		.cfi_def_cfa_register 7
 1719 0006 7860     		str	r0, [r7, #4]
 564:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	DWC_TIMER_FREE(core_if->adp.sense_timer);
 1720              		.loc 2 564 0
 1721 0008 7B68     		ldr	r3, [r7, #4]
 1722 000a D3F8AC30 		ldr	r3, [r3, #172]
 1723 000e 1846     		mov	r0, r3
 1724 0010 FFF7FEFF 		bl	DWC_TIMER_FREE
 565:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	DWC_TIMER_FREE(core_if->adp.vbuson_timer);
 1725              		.loc 2 565 0
 1726 0014 7B68     		ldr	r3, [r7, #4]
 1727 0016 D3F8B430 		ldr	r3, [r3, #180]
 1728 001a 1846     		mov	r0, r3
 1729 001c FFF7FEFF 		bl	DWC_TIMER_FREE
 566:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** }
 1730              		.loc 2 566 0
 1731 0020 07F10807 		add	r7, r7, #8
 1732 0024 BD46     		mov	sp, r7
 1733 0026 80BD     		pop	{r7, pc}
 1734              		.cfi_endproc
 1735              	.LFE36:
 1737              		.section	.text.set_timer_value,"ax",%progbits
 1738              		.align	2
 1739              		.thumb
 1740              		.thumb_func
 1742              	set_timer_value:
 1743              	.LFB37:
 567:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 568:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** /////////////////////////////////////////////////////////////////////
 569:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** ////////////// ADP Interrupt Handlers ///////////////////////////////
 570:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** /////////////////////////////////////////////////////////////////////
 571:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** /**
 572:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * This function compares Ramp Timer values
 573:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  */
 574:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** static uint32_t set_timer_value(dwc_otg_core_if_t * core_if, uint32_t val)
 575:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** {
 1744              		.loc 2 575 0
 1745              		.cfi_startproc
 1746              		@ args = 0, pretend = 0, frame = 8
 1747              		@ frame_needed = 1, uses_anonymous_args = 0
 1748              		@ link register save eliminated.
 1749 0000 80B4     		push	{r7}
 1750              	.LCFI63:
 1751              		.cfi_def_cfa_offset 4
 1752              		.cfi_offset 7, -4
 1753 0002 83B0     		sub	sp, sp, #12
 1754              	.LCFI64:
 1755              		.cfi_def_cfa_offset 16
 1756 0004 00AF     		add	r7, sp, #0
 1757              	.LCFI65:
 1758              		.cfi_def_cfa_register 7
 1759 0006 7860     		str	r0, [r7, #4]
 1760 0008 3960     		str	r1, [r7, #0]
 576:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	if (core_if->adp.probe_timer_values[0] == -1) {
 1761              		.loc 2 576 0
 1762 000a 7B68     		ldr	r3, [r7, #4]
 1763 000c D3F89C30 		ldr	r3, [r3, #156]
 1764 0010 B3F1FF3F 		cmp	r3, #-1
 1765 0014 0BD1     		bne	.L66
 577:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		core_if->adp.probe_timer_values[0] = val;
 1766              		.loc 2 577 0
 1767 0016 3A68     		ldr	r2, [r7, #0]
 1768 0018 7B68     		ldr	r3, [r7, #4]
 1769 001a C3F89C20 		str	r2, [r3, #156]
 578:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		core_if->adp.probe_timer_values[1] = -1;
 1770              		.loc 2 578 0
 1771 001e 7B68     		ldr	r3, [r7, #4]
 1772 0020 4FF0FF32 		mov	r2, #-1
 1773 0024 C3F8A020 		str	r2, [r3, #160]
 579:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		return 1;
 1774              		.loc 2 579 0
 1775 0028 4FF00103 		mov	r3, #1
 1776 002c 0BE0     		b	.L67
 1777              	.L66:
 580:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	} else {
 581:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		core_if->adp.probe_timer_values[1] =
 582:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		    core_if->adp.probe_timer_values[0];
 1778              		.loc 2 582 0
 1779 002e 7B68     		ldr	r3, [r7, #4]
 1780 0030 D3F89C20 		ldr	r2, [r3, #156]
 581:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		core_if->adp.probe_timer_values[1] =
 1781              		.loc 2 581 0
 1782 0034 7B68     		ldr	r3, [r7, #4]
 1783 0036 C3F8A020 		str	r2, [r3, #160]
 583:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		core_if->adp.probe_timer_values[0] = val;
 1784              		.loc 2 583 0
 1785 003a 3A68     		ldr	r2, [r7, #0]
 1786 003c 7B68     		ldr	r3, [r7, #4]
 1787 003e C3F89C20 		str	r2, [r3, #156]
 584:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		return 0;
 1788              		.loc 2 584 0
 1789 0042 4FF00003 		mov	r3, #0
 1790              	.L67:
 585:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	}
 586:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** }
 1791              		.loc 2 586 0
 1792 0046 1846     		mov	r0, r3
 1793 0048 07F10C07 		add	r7, r7, #12
 1794 004c BD46     		mov	sp, r7
 1795 004e 80BC     		pop	{r7}
 1796 0050 7047     		bx	lr
 1797              		.cfi_endproc
 1798              	.LFE37:
 1800 0052 00BF     		.section	.text.compare_timer_values,"ax",%progbits
 1801              		.align	2
 1802              		.thumb
 1803              		.thumb_func
 1805              	compare_timer_values:
 1806              	.LFB38:
 587:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 588:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** /**
 589:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * This function compares Ramp Timer values
 590:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  */
 591:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** static uint32_t compare_timer_values(dwc_otg_core_if_t * core_if)
 592:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** {
 1807              		.loc 2 592 0
 1808              		.cfi_startproc
 1809              		@ args = 0, pretend = 0, frame = 8
 1810              		@ frame_needed = 1, uses_anonymous_args = 0
 1811              		@ link register save eliminated.
 1812 0000 80B4     		push	{r7}
 1813              	.LCFI66:
 1814              		.cfi_def_cfa_offset 4
 1815              		.cfi_offset 7, -4
 1816 0002 83B0     		sub	sp, sp, #12
 1817              	.LCFI67:
 1818              		.cfi_def_cfa_offset 16
 1819 0004 00AF     		add	r7, sp, #0
 1820              	.LCFI68:
 1821              		.cfi_def_cfa_register 7
 1822 0006 7860     		str	r0, [r7, #4]
 593:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	if (core_if->adp.probe_timer_values[0] ==
 1823              		.loc 2 593 0
 1824 0008 7B68     		ldr	r3, [r7, #4]
 1825 000a D3F89C20 		ldr	r2, [r3, #156]
 594:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	    core_if->adp.probe_timer_values[1]) {
 1826              		.loc 2 594 0
 1827 000e 7B68     		ldr	r3, [r7, #4]
 1828 0010 D3F8A030 		ldr	r3, [r3, #160]
 593:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	if (core_if->adp.probe_timer_values[0] ==
 1829              		.loc 2 593 0
 1830 0014 9A42     		cmp	r2, r3
 1831 0016 02D1     		bne	.L69
 595:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		return 0;
 1832              		.loc 2 595 0
 1833 0018 4FF00003 		mov	r3, #0
 1834 001c 01E0     		b	.L70
 1835              	.L69:
 596:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	} else {
 597:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		return 1;
 1836              		.loc 2 597 0
 1837 001e 4FF00103 		mov	r3, #1
 1838              	.L70:
 598:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	}
 599:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** }
 1839              		.loc 2 599 0
 1840 0022 1846     		mov	r0, r3
 1841 0024 07F10C07 		add	r7, r7, #12
 1842 0028 BD46     		mov	sp, r7
 1843 002a 80BC     		pop	{r7}
 1844 002c 7047     		bx	lr
 1845              		.cfi_endproc
 1846              	.LFE38:
 1848 002e 00BF     		.section	.text.dwc_otg_adp_handle_prb_tmout_intr,"ax",%progbits
 1849              		.align	2
 1850              		.thumb
 1851              		.thumb_func
 1853              	dwc_otg_adp_handle_prb_tmout_intr:
 1854              	.LFB39:
 600:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 601:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** /**
 602:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * This function hadles ADP Probe and Timeout Interrupts
 603:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  */
 604:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** static int32_t dwc_otg_adp_handle_prb_tmout_intr(dwc_otg_core_if_t * core_if,
 605:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 						 uint32_t val)
 606:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** {
 1855              		.loc 2 606 0
 1856              		.cfi_startproc
 1857              		@ args = 0, pretend = 0, frame = 16
 1858              		@ frame_needed = 1, uses_anonymous_args = 0
 1859 0000 80B5     		push	{r7, lr}
 1860              	.LCFI69:
 1861              		.cfi_def_cfa_offset 8
 1862              		.cfi_offset 7, -8
 1863              		.cfi_offset 14, -4
 1864 0002 84B0     		sub	sp, sp, #16
 1865              	.LCFI70:
 1866              		.cfi_def_cfa_offset 24
 1867 0004 00AF     		add	r7, sp, #0
 1868              	.LCFI71:
 1869              		.cfi_def_cfa_register 7
 1870 0006 7860     		str	r0, [r7, #4]
 1871 0008 3960     		str	r1, [r7, #0]
 607:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl_data_t adpctl = {.d32 = 0 };
 1872              		.loc 2 607 0
 1873 000a 4FF00003 		mov	r3, #0
 1874 000e FB60     		str	r3, [r7, #12]
 608:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	
 609:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	gpwrdn_data_t gpwrdn;
 610:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 611:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl.d32 = val;
 1875              		.loc 2 611 0
 1876 0010 3B68     		ldr	r3, [r7, #0]
 1877 0012 FB60     		str	r3, [r7, #12]
 612:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 613:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	if (!set_timer_value(core_if, adpctl.b.rtim) &&
 1878              		.loc 2 613 0
 1879 0014 FB68     		ldr	r3, [r7, #12]
 1880 0016 C3F38A13 		ubfx	r3, r3, #6, #11
 1881 001a 9BB2     		uxth	r3, r3
 1882 001c 7868     		ldr	r0, [r7, #4]
 1883 001e 1946     		mov	r1, r3
 1884 0020 FFF7FEFF 		bl	set_timer_value
 1885 0024 0346     		mov	r3, r0
 1886 0026 002B     		cmp	r3, #0
 1887 0028 51D1     		bne	.L72
 614:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	    core_if->adp.initial_probe) {
 1888              		.loc 2 614 0 discriminator 1
 1889 002a 7B68     		ldr	r3, [r7, #4]
 1890 002c D3F89830 		ldr	r3, [r3, #152]
 613:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	if (!set_timer_value(core_if, adpctl.b.rtim) &&
 1891              		.loc 2 613 0 discriminator 1
 1892 0030 002B     		cmp	r3, #0
 1893 0032 4CD0     		beq	.L72
 615:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		core_if->adp.initial_probe = 0;
 1894              		.loc 2 615 0
 1895 0034 7B68     		ldr	r3, [r7, #4]
 1896 0036 4FF00002 		mov	r2, #0
 1897 003a C3F89820 		str	r2, [r3, #152]
 616:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		dwc_otg_adp_probe_stop(core_if);
 1898              		.loc 2 616 0
 1899 003e 7868     		ldr	r0, [r7, #4]
 1900 0040 FFF7FEFF 		bl	dwc_otg_adp_probe_stop
 617:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 618:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		gpwrdn.d32 = 0;
 1901              		.loc 2 618 0
 1902 0044 4FF00003 		mov	r3, #0
 1903 0048 BB60     		str	r3, [r7, #8]
 619:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		gpwrdn.b.pmuactv = 0;
 1904              		.loc 2 619 0
 1905 004a BB68     		ldr	r3, [r7, #8]
 1906 004c 6FF34103 		bfc	r3, #1, #1
 1907 0050 BB60     		str	r3, [r7, #8]
 620:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, 0, gpwrdn.d32);
 1908              		.loc 2 620 0
 1909 0052 7B68     		ldr	r3, [r7, #4]
 1910 0054 5B68     		ldr	r3, [r3, #4]
 1911 0056 03F15802 		add	r2, r3, #88
 1912 005a BB68     		ldr	r3, [r7, #8]
 1913 005c 1046     		mov	r0, r2
 1914 005e 4FF00001 		mov	r1, #0
 1915 0062 1A46     		mov	r2, r3
 1916 0064 FFF7FEFF 		bl	DWC_MODIFY_REG32
 621:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 622:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		gpwrdn.d32 = DWC_READ_REG32(&core_if->core_global_regs->gpwrdn);
 1917              		.loc 2 622 0
 1918 0068 7B68     		ldr	r3, [r7, #4]
 1919 006a 5B68     		ldr	r3, [r3, #4]
 1920 006c 03F15803 		add	r3, r3, #88
 1921 0070 1846     		mov	r0, r3
 1922 0072 FFF7FEFF 		bl	DWC_READ_REG32
 1923 0076 0346     		mov	r3, r0
 1924 0078 BB60     		str	r3, [r7, #8]
 623:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		/* check which value is for device mode and which for Host mode */
 624:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		if (gpwrdn.b.idsts) {	/* considered host mode value is 1 */
 1925              		.loc 2 624 0
 1926 007a BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 1927 007c 03F02003 		and	r3, r3, #32
 1928 0080 DBB2     		uxtb	r3, r3
 1929 0082 002B     		cmp	r3, #0
 1930 0084 11D0     		beq	.L73
 625:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			/*
 626:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			 * Turn on VBUS after initial ADP probe.
 627:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			 */
 628:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			core_if->op_state = A_HOST;
 1931              		.loc 2 628 0
 1932 0086 7B68     		ldr	r3, [r7, #4]
 1933 0088 4FF00102 		mov	r2, #1
 1934 008c 83F86420 		strb	r2, [r3, #100]
 629:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			dwc_otg_core_init(core_if);
 1935              		.loc 2 629 0
 1936 0090 7868     		ldr	r0, [r7, #4]
 1937 0092 FFF7FEFF 		bl	dwc_otg_core_init
 630:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			dwc_otg_enable_global_interrupts(core_if);
 1938              		.loc 2 630 0
 1939 0096 7868     		ldr	r0, [r7, #4]
 1940 0098 FFF7FEFF 		bl	dwc_otg_enable_global_interrupts
 631:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			cil_hcd_start(core_if);
 1941              		.loc 2 631 0
 1942 009c 7868     		ldr	r0, [r7, #4]
 1943 009e FFF7FEFF 		bl	cil_hcd_start
 632:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			dwc_otg_adp_turnon_vbus(core_if);
 1944              		.loc 2 632 0
 1945 00a2 7868     		ldr	r0, [r7, #4]
 1946 00a4 FFF7FEFF 		bl	dwc_otg_adp_turnon_vbus
 624:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		if (gpwrdn.b.idsts) {	/* considered host mode value is 1 */
 1947              		.loc 2 624 0
 1948 00a8 D1E0     		b	.L75
 1949              	.L73:
 633:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		} else {
 634:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			/*
 635:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			 * Initiate SRP after initial ADP probe.
 636:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			 */
 637:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			core_if->op_state = B_PERIPHERAL;
 1950              		.loc 2 637 0
 1951 00aa 7B68     		ldr	r3, [r7, #4]
 1952 00ac 4FF00402 		mov	r2, #4
 1953 00b0 83F86420 		strb	r2, [r3, #100]
 638:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			dwc_otg_core_init(core_if);
 1954              		.loc 2 638 0
 1955 00b4 7868     		ldr	r0, [r7, #4]
 1956 00b6 FFF7FEFF 		bl	dwc_otg_core_init
 639:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			dwc_otg_enable_global_interrupts(core_if);
 1957              		.loc 2 639 0
 1958 00ba 7868     		ldr	r0, [r7, #4]
 1959 00bc FFF7FEFF 		bl	dwc_otg_enable_global_interrupts
 640:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			cil_pcd_start(core_if);
 1960              		.loc 2 640 0
 1961 00c0 7868     		ldr	r0, [r7, #4]
 1962 00c2 FFF7FEFF 		bl	cil_pcd_start
 641:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			dwc_otg_initiate_srp(core_if);
 1963              		.loc 2 641 0
 1964 00c6 7868     		ldr	r0, [r7, #4]
 1965 00c8 FFF7FEFF 		bl	dwc_otg_initiate_srp
 624:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		if (gpwrdn.b.idsts) {	/* considered host mode value is 1 */
 1966              		.loc 2 624 0
 1967 00cc BFE0     		b	.L75
 1968              	.L72:
 642:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		}
 643:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	} else {
 644:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		gpwrdn.d32 = DWC_READ_REG32(&core_if->core_global_regs->gpwrdn);
 1969              		.loc 2 644 0
 1970 00ce 7B68     		ldr	r3, [r7, #4]
 1971 00d0 5B68     		ldr	r3, [r3, #4]
 1972 00d2 03F15803 		add	r3, r3, #88
 1973 00d6 1846     		mov	r0, r3
 1974 00d8 FFF7FEFF 		bl	DWC_READ_REG32
 1975 00dc 0346     		mov	r3, r0
 1976 00de BB60     		str	r3, [r7, #8]
 645:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 646:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		if (compare_timer_values(core_if)) {
 1977              		.loc 2 646 0
 1978 00e0 7868     		ldr	r0, [r7, #4]
 1979 00e2 FFF7FEFF 		bl	compare_timer_values
 1980 00e6 0346     		mov	r3, r0
 1981 00e8 002B     		cmp	r3, #0
 1982 00ea 78D0     		beq	.L76
 647:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** //                      core_if->adp.attached = DWC_OTG_ADP_ATTACHED;
 648:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			dwc_otg_adp_probe_stop(core_if);
 1983              		.loc 2 648 0
 1984 00ec 7868     		ldr	r0, [r7, #4]
 1985 00ee FFF7FEFF 		bl	dwc_otg_adp_probe_stop
 649:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 650:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			/* Power on the core */
 651:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			if (core_if->power_down == 2) {
 1986              		.loc 2 651 0
 1987 00f2 7B68     		ldr	r3, [r7, #4]
 1988 00f4 D3F89030 		ldr	r3, [r3, #144]
 1989 00f8 022B     		cmp	r3, #2
 1990 00fa 0ED1     		bne	.L77
 652:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				gpwrdn.b.pwrdnswtch = 1;
 1991              		.loc 2 652 0
 1992 00fc BB68     		ldr	r3, [r7, #8]
 1993 00fe 43F02003 		orr	r3, r3, #32
 1994 0102 BB60     		str	r3, [r7, #8]
 653:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				DWC_MODIFY_REG32(&core_if->core_global_regs->
 1995              		.loc 2 653 0
 1996 0104 7B68     		ldr	r3, [r7, #4]
 1997 0106 5B68     		ldr	r3, [r3, #4]
 1998 0108 03F15802 		add	r2, r3, #88
 1999 010c BB68     		ldr	r3, [r7, #8]
 2000 010e 1046     		mov	r0, r2
 2001 0110 4FF00001 		mov	r1, #0
 2002 0114 1A46     		mov	r2, r3
 2003 0116 FFF7FEFF 		bl	DWC_MODIFY_REG32
 2004              	.L77:
 654:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 						 gpwrdn, 0, gpwrdn.d32);
 655:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			}
 656:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 657:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			/* check which value is for device mode and which for Host mode */
 658:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			if (gpwrdn.b.idsts) {	/* considered host mode value is 1 */
 2005              		.loc 2 658 0
 2006 011a BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 2007 011c 03F02003 		and	r3, r3, #32
 2008 0120 DBB2     		uxtb	r3, r3
 2009 0122 002B     		cmp	r3, #0
 2010 0124 20D0     		beq	.L78
 659:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 660:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				/* Disable Power Down Logic */
 661:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				gpwrdn.d32 = 0;
 2011              		.loc 2 661 0
 2012 0126 4FF00003 		mov	r3, #0
 2013 012a BB60     		str	r3, [r7, #8]
 662:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				gpwrdn.b.pmuactv = 1;
 2014              		.loc 2 662 0
 2015 012c BB68     		ldr	r3, [r7, #8]
 2016 012e 43F00203 		orr	r3, r3, #2
 2017 0132 BB60     		str	r3, [r7, #8]
 663:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				DWC_MODIFY_REG32(&core_if->core_global_regs->
 2018              		.loc 2 663 0
 2019 0134 7B68     		ldr	r3, [r7, #4]
 2020 0136 5B68     		ldr	r3, [r3, #4]
 2021 0138 03F15802 		add	r2, r3, #88
 2022 013c BB68     		ldr	r3, [r7, #8]
 2023 013e 1046     		mov	r0, r2
 2024 0140 1946     		mov	r1, r3
 2025 0142 4FF00002 		mov	r2, #0
 2026 0146 FFF7FEFF 		bl	DWC_MODIFY_REG32
 664:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 						 gpwrdn, gpwrdn.d32, 0);
 665:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 666:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				/*
 667:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				 * Initialize the Core for Host mode.
 668:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				 */
 669:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				core_if->op_state = A_HOST;
 2027              		.loc 2 669 0
 2028 014a 7B68     		ldr	r3, [r7, #4]
 2029 014c 4FF00102 		mov	r2, #1
 2030 0150 83F86420 		strb	r2, [r3, #100]
 670:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				dwc_otg_core_init(core_if);
 2031              		.loc 2 670 0
 2032 0154 7868     		ldr	r0, [r7, #4]
 2033 0156 FFF7FEFF 		bl	dwc_otg_core_init
 671:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				dwc_otg_enable_global_interrupts(core_if);
 2034              		.loc 2 671 0
 2035 015a 7868     		ldr	r0, [r7, #4]
 2036 015c FFF7FEFF 		bl	dwc_otg_enable_global_interrupts
 672:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				cil_hcd_start(core_if);
 2037              		.loc 2 672 0
 2038 0160 7868     		ldr	r0, [r7, #4]
 2039 0162 FFF7FEFF 		bl	cil_hcd_start
 2040 0166 3AE0     		b	.L76
 2041              	.L78:
 673:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			} else {
 674:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				/* Mask SRP detected interrupt from Power Down Logic */
 675:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				gpwrdn.d32 = 0;
 2042              		.loc 2 675 0
 2043 0168 4FF00003 		mov	r3, #0
 2044 016c BB60     		str	r3, [r7, #8]
 676:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				gpwrdn.b.srp_det_msk = 1;
 2045              		.loc 2 676 0
 2046 016e BB68     		ldr	r3, [r7, #8]
 2047 0170 43F48033 		orr	r3, r3, #65536
 2048 0174 BB60     		str	r3, [r7, #8]
 677:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				DWC_MODIFY_REG32(&core_if->core_global_regs->
 2049              		.loc 2 677 0
 2050 0176 7B68     		ldr	r3, [r7, #4]
 2051 0178 5B68     		ldr	r3, [r3, #4]
 2052 017a 03F15802 		add	r2, r3, #88
 2053 017e BB68     		ldr	r3, [r7, #8]
 2054 0180 1046     		mov	r0, r2
 2055 0182 1946     		mov	r1, r3
 2056 0184 4FF00002 		mov	r2, #0
 2057 0188 FFF7FEFF 		bl	DWC_MODIFY_REG32
 678:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 						 gpwrdn, gpwrdn.d32, 0);
 679:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 680:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				/* Disable Power Down Logic */
 681:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				gpwrdn.d32 = 0;
 2058              		.loc 2 681 0
 2059 018c 4FF00003 		mov	r3, #0
 2060 0190 BB60     		str	r3, [r7, #8]
 682:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				gpwrdn.b.pmuactv = 1;
 2061              		.loc 2 682 0
 2062 0192 BB68     		ldr	r3, [r7, #8]
 2063 0194 43F00203 		orr	r3, r3, #2
 2064 0198 BB60     		str	r3, [r7, #8]
 683:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				DWC_MODIFY_REG32(&core_if->core_global_regs->
 2065              		.loc 2 683 0
 2066 019a 7B68     		ldr	r3, [r7, #4]
 2067 019c 5B68     		ldr	r3, [r3, #4]
 2068 019e 03F15802 		add	r2, r3, #88
 2069 01a2 BB68     		ldr	r3, [r7, #8]
 2070 01a4 1046     		mov	r0, r2
 2071 01a6 1946     		mov	r1, r3
 2072 01a8 4FF00002 		mov	r2, #0
 2073 01ac FFF7FEFF 		bl	DWC_MODIFY_REG32
 684:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 						 gpwrdn, gpwrdn.d32, 0);
 685:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 686:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				/*
 687:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				 * Initialize the Core for Device mode.
 688:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				 */
 689:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				core_if->op_state = B_PERIPHERAL;
 2074              		.loc 2 689 0
 2075 01b0 7B68     		ldr	r3, [r7, #4]
 2076 01b2 4FF00402 		mov	r2, #4
 2077 01b6 83F86420 		strb	r2, [r3, #100]
 690:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				dwc_otg_core_init(core_if);
 2078              		.loc 2 690 0
 2079 01ba 7868     		ldr	r0, [r7, #4]
 2080 01bc FFF7FEFF 		bl	dwc_otg_core_init
 691:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				dwc_otg_enable_global_interrupts(core_if);
 2081              		.loc 2 691 0
 2082 01c0 7868     		ldr	r0, [r7, #4]
 2083 01c2 FFF7FEFF 		bl	dwc_otg_enable_global_interrupts
 692:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				cil_pcd_start(core_if);
 2084              		.loc 2 692 0
 2085 01c6 7868     		ldr	r0, [r7, #4]
 2086 01c8 FFF7FEFF 		bl	cil_pcd_start
 693:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 694:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				if (!gpwrdn.b.bsessvld) {
 2087              		.loc 2 694 0
 2088 01cc BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 2089 01ce 03F04003 		and	r3, r3, #64
 2090 01d2 DBB2     		uxtb	r3, r3
 2091 01d4 002B     		cmp	r3, #0
 2092 01d6 02D1     		bne	.L76
 695:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 					dwc_otg_initiate_srp(core_if);
 2093              		.loc 2 695 0
 2094 01d8 7868     		ldr	r0, [r7, #4]
 2095 01da FFF7FEFF 		bl	dwc_otg_initiate_srp
 2096              	.L76:
 696:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				}
 697:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			}
 698:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		}
 699:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		if (gpwrdn.b.bsessvld) {
 2097              		.loc 2 699 0
 2098 01de BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 2099 01e0 03F04003 		and	r3, r3, #64
 2100 01e4 DBB2     		uxtb	r3, r3
 2101 01e6 002B     		cmp	r3, #0
 2102 01e8 31D0     		beq	.L75
 700:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			/* Mask SRP detected interrupt from Power Down Logic */
 701:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			gpwrdn.d32 = 0;
 2103              		.loc 2 701 0
 2104 01ea 4FF00003 		mov	r3, #0
 2105 01ee BB60     		str	r3, [r7, #8]
 702:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			gpwrdn.b.srp_det_msk = 1;
 2106              		.loc 2 702 0
 2107 01f0 BB68     		ldr	r3, [r7, #8]
 2108 01f2 43F48033 		orr	r3, r3, #65536
 2109 01f6 BB60     		str	r3, [r7, #8]
 703:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, gpwrdn.d32, 0);
 2110              		.loc 2 703 0
 2111 01f8 7B68     		ldr	r3, [r7, #4]
 2112 01fa 5B68     		ldr	r3, [r3, #4]
 2113 01fc 03F15802 		add	r2, r3, #88
 2114 0200 BB68     		ldr	r3, [r7, #8]
 2115 0202 1046     		mov	r0, r2
 2116 0204 1946     		mov	r1, r3
 2117 0206 4FF00002 		mov	r2, #0
 2118 020a FFF7FEFF 		bl	DWC_MODIFY_REG32
 704:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			
 705:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			/* Disable Power Down Logic */
 706:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			gpwrdn.d32 = 0;
 2119              		.loc 2 706 0
 2120 020e 4FF00003 		mov	r3, #0
 2121 0212 BB60     		str	r3, [r7, #8]
 707:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			gpwrdn.b.pmuactv = 1;
 2122              		.loc 2 707 0
 2123 0214 BB68     		ldr	r3, [r7, #8]
 2124 0216 43F00203 		orr	r3, r3, #2
 2125 021a BB60     		str	r3, [r7, #8]
 708:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, gpwrdn.d32, 0);
 2126              		.loc 2 708 0
 2127 021c 7B68     		ldr	r3, [r7, #4]
 2128 021e 5B68     		ldr	r3, [r3, #4]
 2129 0220 03F15802 		add	r2, r3, #88
 2130 0224 BB68     		ldr	r3, [r7, #8]
 2131 0226 1046     		mov	r0, r2
 2132 0228 1946     		mov	r1, r3
 2133 022a 4FF00002 		mov	r2, #0
 2134 022e FFF7FEFF 		bl	DWC_MODIFY_REG32
 709:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 710:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			/*
 711:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			 * Initialize the Core for Device mode.
 712:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			 */
 713:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			core_if->op_state = B_PERIPHERAL;
 2135              		.loc 2 713 0
 2136 0232 7B68     		ldr	r3, [r7, #4]
 2137 0234 4FF00402 		mov	r2, #4
 2138 0238 83F86420 		strb	r2, [r3, #100]
 714:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			dwc_otg_core_init(core_if);
 2139              		.loc 2 714 0
 2140 023c 7868     		ldr	r0, [r7, #4]
 2141 023e FFF7FEFF 		bl	dwc_otg_core_init
 715:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			dwc_otg_enable_global_interrupts(core_if);
 2142              		.loc 2 715 0
 2143 0242 7868     		ldr	r0, [r7, #4]
 2144 0244 FFF7FEFF 		bl	dwc_otg_enable_global_interrupts
 716:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			cil_pcd_start(core_if);
 2145              		.loc 2 716 0
 2146 0248 7868     		ldr	r0, [r7, #4]
 2147 024a FFF7FEFF 		bl	cil_pcd_start
 2148              	.L75:
 717:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		}
 718:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 719:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	}
 720:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	return 0;
 2149              		.loc 2 720 0
 2150 024e 4FF00003 		mov	r3, #0
 721:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** }
 2151              		.loc 2 721 0
 2152 0252 1846     		mov	r0, r3
 2153 0254 07F11007 		add	r7, r7, #16
 2154 0258 BD46     		mov	sp, r7
 2155 025a 80BD     		pop	{r7, pc}
 2156              		.cfi_endproc
 2157              	.LFE39:
 2159              		.section	.text.dwc_otg_adp_handle_sns_intr,"ax",%progbits
 2160              		.align	2
 2161              		.thumb
 2162              		.thumb_func
 2164              	dwc_otg_adp_handle_sns_intr:
 2165              	.LFB40:
 722:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 723:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** /**
 724:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * This function hadles ADP Sense Interrupt
 725:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  */
 726:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** static int32_t dwc_otg_adp_handle_sns_intr(dwc_otg_core_if_t * core_if)
 727:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** {
 2166              		.loc 2 727 0
 2167              		.cfi_startproc
 2168              		@ args = 0, pretend = 0, frame = 8
 2169              		@ frame_needed = 1, uses_anonymous_args = 0
 2170 0000 80B5     		push	{r7, lr}
 2171              	.LCFI72:
 2172              		.cfi_def_cfa_offset 8
 2173              		.cfi_offset 7, -8
 2174              		.cfi_offset 14, -4
 2175 0002 82B0     		sub	sp, sp, #8
 2176              	.LCFI73:
 2177              		.cfi_def_cfa_offset 16
 2178 0004 00AF     		add	r7, sp, #0
 2179              	.LCFI74:
 2180              		.cfi_def_cfa_register 7
 2181 0006 7860     		str	r0, [r7, #4]
 728:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	/* Stop ADP Sense timer */
 729:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	DWC_TIMER_CANCEL(core_if->adp.sense_timer);
 2182              		.loc 2 729 0
 2183 0008 7B68     		ldr	r3, [r7, #4]
 2184 000a D3F8AC30 		ldr	r3, [r3, #172]
 2185 000e 1846     		mov	r0, r3
 2186 0010 FFF7FEFF 		bl	DWC_TIMER_CANCEL
 730:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 731:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	/* Restart ADP Sense timer */
 732:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	dwc_otg_adp_sense_timer_start(core_if);
 2187              		.loc 2 732 0
 2188 0014 7868     		ldr	r0, [r7, #4]
 2189 0016 FFF7FEFF 		bl	dwc_otg_adp_sense_timer_start
 733:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 734:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	return 0;
 2190              		.loc 2 734 0
 2191 001a 4FF00003 		mov	r3, #0
 735:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** }
 2192              		.loc 2 735 0
 2193 001e 1846     		mov	r0, r3
 2194 0020 07F10807 		add	r7, r7, #8
 2195 0024 BD46     		mov	sp, r7
 2196 0026 80BD     		pop	{r7, pc}
 2197              		.cfi_endproc
 2198              	.LFE40:
 2200              		.section	.text.dwc_otg_adp_handle_intr,"ax",%progbits
 2201              		.align	2
 2202              		.global	dwc_otg_adp_handle_intr
 2203              		.thumb
 2204              		.thumb_func
 2206              	dwc_otg_adp_handle_intr:
 2207              	.LFB41:
 736:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 737:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** /**
 738:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * ADP Interrupt handler.
 739:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  *
 740:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  */
 741:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** int32_t dwc_otg_adp_handle_intr(dwc_otg_core_if_t * core_if)
 742:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** {
 2208              		.loc 2 742 0
 2209              		.cfi_startproc
 2210              		@ args = 0, pretend = 0, frame = 16
 2211              		@ frame_needed = 1, uses_anonymous_args = 0
 2212 0000 80B5     		push	{r7, lr}
 2213              	.LCFI75:
 2214              		.cfi_def_cfa_offset 8
 2215              		.cfi_offset 7, -8
 2216              		.cfi_offset 14, -4
 2217 0002 84B0     		sub	sp, sp, #16
 2218              	.LCFI76:
 2219              		.cfi_def_cfa_offset 24
 2220 0004 00AF     		add	r7, sp, #0
 2221              	.LCFI77:
 2222              		.cfi_def_cfa_register 7
 2223 0006 7860     		str	r0, [r7, #4]
 743:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	int retval = 0;
 2224              		.loc 2 743 0
 2225 0008 4FF00003 		mov	r3, #0
 2226 000c FB60     		str	r3, [r7, #12]
 744:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl_data_t adpctl;
 745:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 746:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl.d32 = dwc_otg_adp_read_reg(core_if);
 2227              		.loc 2 746 0
 2228 000e 7868     		ldr	r0, [r7, #4]
 2229 0010 FFF7FEFF 		bl	dwc_otg_adp_read_reg
 2230 0014 0346     		mov	r3, r0
 2231 0016 BB60     		str	r3, [r7, #8]
 747:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 748:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	if (adpctl.b.adp_sns_int & adpctl.b.adp_sns_int_msk) {
 2232              		.loc 2 748 0
 2233 0018 BB68     		ldr	r3, [r7, #8]
 2234 001a C3F38053 		ubfx	r3, r3, #22, #1
 2235 001e DBB2     		uxtb	r3, r3
 2236 0020 1A46     		mov	r2, r3
 2237 0022 BB68     		ldr	r3, [r7, #8]
 2238 0024 C3F34063 		ubfx	r3, r3, #25, #1
 2239 0028 DBB2     		uxtb	r3, r3
 2240 002a 1340     		ands	r3, r3, r2
 2241 002c 002B     		cmp	r3, #0
 2242 002e 06D0     		beq	.L83
 749:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		retval |= dwc_otg_adp_handle_sns_intr(core_if);
 2243              		.loc 2 749 0
 2244 0030 7868     		ldr	r0, [r7, #4]
 2245 0032 FFF7FEFF 		bl	dwc_otg_adp_handle_sns_intr
 2246 0036 0346     		mov	r3, r0
 2247 0038 FA68     		ldr	r2, [r7, #12]
 2248 003a 1343     		orrs	r3, r3, r2
 2249 003c FB60     		str	r3, [r7, #12]
 2250              	.L83:
 750:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	}
 751:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	if ((adpctl.b.adp_prb_int & adpctl.b.adp_prb_int_msk) ||
 2251              		.loc 2 751 0
 2252 003e BB68     		ldr	r3, [r7, #8]
 2253 0040 C3F34053 		ubfx	r3, r3, #21, #1
 2254 0044 DBB2     		uxtb	r3, r3
 2255 0046 1A46     		mov	r2, r3
 2256 0048 BB68     		ldr	r3, [r7, #8]
 2257 004a C3F30063 		ubfx	r3, r3, #24, #1
 2258 004e DBB2     		uxtb	r3, r3
 2259 0050 1340     		ands	r3, r3, r2
 2260 0052 002B     		cmp	r3, #0
 2261 0054 0BD1     		bne	.L84
 752:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	    adpctl.b.adp_tmout_int & adpctl.b.adp_tmout_int_msk) {
 2262              		.loc 2 752 0 discriminator 1
 2263 0056 BB68     		ldr	r3, [r7, #8]
 2264 0058 C3F3C053 		ubfx	r3, r3, #23, #1
 2265 005c DBB2     		uxtb	r3, r3
 2266 005e 1A46     		mov	r2, r3
 2267 0060 BB68     		ldr	r3, [r7, #8]
 2268 0062 C3F38063 		ubfx	r3, r3, #26, #1
 2269 0066 DBB2     		uxtb	r3, r3
 2270 0068 1340     		ands	r3, r3, r2
 751:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	if ((adpctl.b.adp_prb_int & adpctl.b.adp_prb_int_msk) ||
 2271              		.loc 2 751 0 discriminator 1
 2272 006a 002B     		cmp	r3, #0
 2273 006c 08D0     		beq	.L85
 2274              	.L84:
 753:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			retval |= dwc_otg_adp_handle_prb_tmout_intr(core_if, adpctl.d32);
 2275              		.loc 2 753 0
 2276 006e BB68     		ldr	r3, [r7, #8]
 2277 0070 7868     		ldr	r0, [r7, #4]
 2278 0072 1946     		mov	r1, r3
 2279 0074 FFF7FEFF 		bl	dwc_otg_adp_handle_prb_tmout_intr
 2280 0078 0346     		mov	r3, r0
 2281 007a FA68     		ldr	r2, [r7, #12]
 2282 007c 1343     		orrs	r3, r3, r2
 2283 007e FB60     		str	r3, [r7, #12]
 2284              	.L85:
 754:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	}
 755:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 756:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl.d32 = 0;
 2285              		.loc 2 756 0
 2286 0080 4FF00003 		mov	r3, #0
 2287 0084 BB60     		str	r3, [r7, #8]
 757:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl.b.adp_prb_int = 1;
 2288              		.loc 2 757 0
 2289 0086 BB68     		ldr	r3, [r7, #8]
 2290 0088 43F40013 		orr	r3, r3, #2097152
 2291 008c BB60     		str	r3, [r7, #8]
 758:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl.b.adp_tmout_int = 1;
 2292              		.loc 2 758 0
 2293 008e BB68     		ldr	r3, [r7, #8]
 2294 0090 43F40003 		orr	r3, r3, #8388608
 2295 0094 BB60     		str	r3, [r7, #8]
 759:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	adpctl.b.adp_sns_int = 1;
 2296              		.loc 2 759 0
 2297 0096 BB68     		ldr	r3, [r7, #8]
 2298 0098 43F48003 		orr	r3, r3, #4194304
 2299 009c BB60     		str	r3, [r7, #8]
 760:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 761:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	dwc_otg_adp_modify_reg(core_if, adpctl.d32, 0);
 2300              		.loc 2 761 0
 2301 009e BB68     		ldr	r3, [r7, #8]
 2302 00a0 7868     		ldr	r0, [r7, #4]
 2303 00a2 1946     		mov	r1, r3
 2304 00a4 4FF00002 		mov	r2, #0
 2305 00a8 FFF7FEFF 		bl	dwc_otg_adp_modify_reg
 762:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 763:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	return retval;
 2306              		.loc 2 763 0
 2307 00ac FB68     		ldr	r3, [r7, #12]
 764:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** }
 2308              		.loc 2 764 0
 2309 00ae 1846     		mov	r0, r3
 2310 00b0 07F11007 		add	r7, r7, #16
 2311 00b4 BD46     		mov	sp, r7
 2312 00b6 80BD     		pop	{r7, pc}
 2313              		.cfi_endproc
 2314              	.LFE41:
 2316              		.section	.text.dwc_otg_adp_handle_srp_intr,"ax",%progbits
 2317              		.align	2
 2318              		.global	dwc_otg_adp_handle_srp_intr
 2319              		.thumb
 2320              		.thumb_func
 2322              	dwc_otg_adp_handle_srp_intr:
 2323              	.LFB42:
 765:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 766:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** /**
 767:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  *
 768:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  * @param core_if Programming view of DWC_otg controller.
 769:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c ****  */
 770:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** int32_t dwc_otg_adp_handle_srp_intr(dwc_otg_core_if_t * core_if)
 771:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** {
 2324              		.loc 2 771 0
 2325              		.cfi_startproc
 2326              		@ args = 0, pretend = 0, frame = 16
 2327              		@ frame_needed = 1, uses_anonymous_args = 0
 2328 0000 80B5     		push	{r7, lr}
 2329              	.LCFI78:
 2330              		.cfi_def_cfa_offset 8
 2331              		.cfi_offset 7, -8
 2332              		.cfi_offset 14, -4
 2333 0002 84B0     		sub	sp, sp, #16
 2334              	.LCFI79:
 2335              		.cfi_def_cfa_offset 24
 2336 0004 00AF     		add	r7, sp, #0
 2337              	.LCFI80:
 2338              		.cfi_def_cfa_register 7
 2339 0006 7860     		str	r0, [r7, #4]
 772:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** #ifndef DWC_HOST_ONLY
 773:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	hprt0_data_t hprt0;
 774:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	gpwrdn_data_t gpwrdn;
 775:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 776:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	DWC_DEBUGPL(DBG_ANY, "++ Power Down Logic Session Request Interrupt++\n");
 777:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 778:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	gpwrdn.d32 = DWC_READ_REG32(&core_if->core_global_regs->gpwrdn);
 2340              		.loc 2 778 0
 2341 0008 7B68     		ldr	r3, [r7, #4]
 2342 000a 5B68     		ldr	r3, [r3, #4]
 2343 000c 03F15803 		add	r3, r3, #88
 2344 0010 1846     		mov	r0, r3
 2345 0012 FFF7FEFF 		bl	DWC_READ_REG32
 2346 0016 0346     		mov	r3, r0
 2347 0018 BB60     		str	r3, [r7, #8]
 779:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	/* check which value is for device mode and which for Host mode */
 780:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	if (gpwrdn.b.idsts) {	/* considered host mode value is 1 */
 2348              		.loc 2 780 0
 2349 001a BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 2350 001c 03F02003 		and	r3, r3, #32
 2351 0020 DBB2     		uxtb	r3, r3
 2352 0022 002B     		cmp	r3, #0
 2353 0024 3ED0     		beq	.L88
 781:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		DWC_PRINTF("SRP: Host mode\n");
 782:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 783:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		if (core_if->adp_enable) {
 2354              		.loc 2 783 0
 2355 0026 7B68     		ldr	r3, [r7, #4]
 2356 0028 D3F89430 		ldr	r3, [r3, #148]
 2357 002c 002B     		cmp	r3, #0
 2358 002e 24D0     		beq	.L89
 784:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			dwc_otg_adp_probe_stop(core_if);
 2359              		.loc 2 784 0
 2360 0030 7868     		ldr	r0, [r7, #4]
 2361 0032 FFF7FEFF 		bl	dwc_otg_adp_probe_stop
 785:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 786:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			/* Power on the core */
 787:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			if (core_if->power_down == 2) {
 2362              		.loc 2 787 0
 2363 0036 7B68     		ldr	r3, [r7, #4]
 2364 0038 D3F89030 		ldr	r3, [r3, #144]
 2365 003c 022B     		cmp	r3, #2
 2366 003e 0ED1     		bne	.L90
 788:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				gpwrdn.b.pwrdnswtch = 1;
 2367              		.loc 2 788 0
 2368 0040 BB68     		ldr	r3, [r7, #8]
 2369 0042 43F02003 		orr	r3, r3, #32
 2370 0046 BB60     		str	r3, [r7, #8]
 789:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				DWC_MODIFY_REG32(&core_if->core_global_regs->
 2371              		.loc 2 789 0
 2372 0048 7B68     		ldr	r3, [r7, #4]
 2373 004a 5B68     		ldr	r3, [r3, #4]
 2374 004c 03F15802 		add	r2, r3, #88
 2375 0050 BB68     		ldr	r3, [r7, #8]
 2376 0052 1046     		mov	r0, r2
 2377 0054 4FF00001 		mov	r1, #0
 2378 0058 1A46     		mov	r2, r3
 2379 005a FFF7FEFF 		bl	DWC_MODIFY_REG32
 2380              	.L90:
 790:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 						 gpwrdn, 0, gpwrdn.d32);
 791:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			}
 792:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 793:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			core_if->op_state = A_HOST;
 2381              		.loc 2 793 0
 2382 005e 7B68     		ldr	r3, [r7, #4]
 2383 0060 4FF00102 		mov	r2, #1
 2384 0064 83F86420 		strb	r2, [r3, #100]
 794:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			dwc_otg_core_init(core_if);
 2385              		.loc 2 794 0
 2386 0068 7868     		ldr	r0, [r7, #4]
 2387 006a FFF7FEFF 		bl	dwc_otg_core_init
 795:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			dwc_otg_enable_global_interrupts(core_if);
 2388              		.loc 2 795 0
 2389 006e 7868     		ldr	r0, [r7, #4]
 2390 0070 FFF7FEFF 		bl	dwc_otg_enable_global_interrupts
 796:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			cil_hcd_start(core_if);
 2391              		.loc 2 796 0
 2392 0074 7868     		ldr	r0, [r7, #4]
 2393 0076 FFF7FEFF 		bl	cil_hcd_start
 2394              	.L89:
 797:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		}
 798:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 799:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		/* Turn on the port power bit. */
 800:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		hprt0.d32 = dwc_otg_read_hprt0(core_if);
 2395              		.loc 2 800 0
 2396 007a 7868     		ldr	r0, [r7, #4]
 2397 007c FFF7FEFF 		bl	dwc_otg_read_hprt0
 2398 0080 0346     		mov	r3, r0
 2399 0082 FB60     		str	r3, [r7, #12]
 801:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		hprt0.b.prtpwr = 1;
 2400              		.loc 2 801 0
 2401 0084 FB68     		ldr	r3, [r7, #12]
 2402 0086 43F48053 		orr	r3, r3, #4096
 2403 008a FB60     		str	r3, [r7, #12]
 802:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		DWC_WRITE_REG32(core_if->host_if->hprt0, hprt0.d32);
 2404              		.loc 2 802 0
 2405 008c 7B68     		ldr	r3, [r7, #4]
 2406 008e DB68     		ldr	r3, [r3, #12]
 2407 0090 5A68     		ldr	r2, [r3, #4]
 2408 0092 FB68     		ldr	r3, [r7, #12]
 2409 0094 1046     		mov	r0, r2
 2410 0096 1946     		mov	r1, r3
 2411 0098 FFF7FEFF 		bl	DWC_WRITE_REG32
 803:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 804:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		/* Start the Connection timer. So a message can be displayed
 805:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		 * if connect does not occur within 10 seconds. */
 806:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		cil_hcd_session_start(core_if);
 2412              		.loc 2 806 0
 2413 009c 7868     		ldr	r0, [r7, #4]
 2414 009e FFF7FEFF 		bl	cil_hcd_session_start
 2415 00a2 3BE0     		b	.L91
 2416              	.L88:
 807:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	} else {
 808:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		DWC_PRINTF("SRP: Device mode\n");
 809:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		if (core_if->adp_enable) {
 2417              		.loc 2 809 0
 2418 00a4 7B68     		ldr	r3, [r7, #4]
 2419 00a6 D3F89430 		ldr	r3, [r3, #148]
 2420 00aa 002B     		cmp	r3, #0
 2421 00ac 36D0     		beq	.L91
 810:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			dwc_otg_adp_probe_stop(core_if);
 2422              		.loc 2 810 0
 2423 00ae 7868     		ldr	r0, [r7, #4]
 2424 00b0 FFF7FEFF 		bl	dwc_otg_adp_probe_stop
 811:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 812:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			/* Power on the core */
 813:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			if (core_if->power_down == 2) {
 2425              		.loc 2 813 0
 2426 00b4 7B68     		ldr	r3, [r7, #4]
 2427 00b6 D3F89030 		ldr	r3, [r3, #144]
 2428 00ba 022B     		cmp	r3, #2
 2429 00bc 0ED1     		bne	.L92
 814:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				gpwrdn.b.pwrdnswtch = 1;
 2430              		.loc 2 814 0
 2431 00be BB68     		ldr	r3, [r7, #8]
 2432 00c0 43F02003 		orr	r3, r3, #32
 2433 00c4 BB60     		str	r3, [r7, #8]
 815:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 				DWC_MODIFY_REG32(&core_if->core_global_regs->
 2434              		.loc 2 815 0
 2435 00c6 7B68     		ldr	r3, [r7, #4]
 2436 00c8 5B68     		ldr	r3, [r3, #4]
 2437 00ca 03F15802 		add	r2, r3, #88
 2438 00ce BB68     		ldr	r3, [r7, #8]
 2439 00d0 1046     		mov	r0, r2
 2440 00d2 4FF00001 		mov	r1, #0
 2441 00d6 1A46     		mov	r2, r3
 2442 00d8 FFF7FEFF 		bl	DWC_MODIFY_REG32
 2443              	.L92:
 816:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 						 gpwrdn, 0, gpwrdn.d32);
 817:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			}
 818:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 819:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			gpwrdn.d32 = 0;
 2444              		.loc 2 819 0
 2445 00dc 4FF00003 		mov	r3, #0
 2446 00e0 BB60     		str	r3, [r7, #8]
 820:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			gpwrdn.b.pmuactv = 0;
 2447              		.loc 2 820 0
 2448 00e2 BB68     		ldr	r3, [r7, #8]
 2449 00e4 6FF34103 		bfc	r3, #1, #1
 2450 00e8 BB60     		str	r3, [r7, #8]
 821:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, 0,
 2451              		.loc 2 821 0
 2452 00ea 7B68     		ldr	r3, [r7, #4]
 2453 00ec 5B68     		ldr	r3, [r3, #4]
 2454 00ee 03F15802 		add	r2, r3, #88
 2455 00f2 BB68     		ldr	r3, [r7, #8]
 2456 00f4 1046     		mov	r0, r2
 2457 00f6 4FF00001 		mov	r1, #0
 2458 00fa 1A46     		mov	r2, r3
 2459 00fc FFF7FEFF 		bl	DWC_MODIFY_REG32
 822:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 					 gpwrdn.d32);
 823:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 
 824:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			core_if->op_state = B_PERIPHERAL;
 2460              		.loc 2 824 0
 2461 0100 7B68     		ldr	r3, [r7, #4]
 2462 0102 4FF00402 		mov	r2, #4
 2463 0106 83F86420 		strb	r2, [r3, #100]
 825:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			dwc_otg_core_init(core_if);
 2464              		.loc 2 825 0
 2465 010a 7868     		ldr	r0, [r7, #4]
 2466 010c FFF7FEFF 		bl	dwc_otg_core_init
 826:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			dwc_otg_enable_global_interrupts(core_if);
 2467              		.loc 2 826 0
 2468 0110 7868     		ldr	r0, [r7, #4]
 2469 0112 FFF7FEFF 		bl	dwc_otg_enable_global_interrupts
 827:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 			cil_pcd_start(core_if);
 2470              		.loc 2 827 0
 2471 0116 7868     		ldr	r0, [r7, #4]
 2472 0118 FFF7FEFF 		bl	cil_pcd_start
 2473              	.L91:
 828:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 		}
 829:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	}
 830:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** #endif
 831:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** 	return 1;
 2474              		.loc 2 831 0
 2475 011c 4FF00103 		mov	r3, #1
 832:../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.c **** }
 2476              		.loc 2 832 0
 2477 0120 1846     		mov	r0, r3
 2478 0122 07F11007 		add	r7, r7, #16
 2479 0126 BD46     		mov	sp, r7
 2480 0128 80BD     		pop	{r7, pc}
 2481              		.cfi_endproc
 2482              	.LFE42:
 2484 012a 00BF     		.text
 2485              	.Letext0:
 2486              		.file 3 "c:\\dave-3.1.10\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/i
 2487              		.file 4 "../Dave/Generated/src/USBLD001/driver/../dwc_common_port/dwc_os.h"
 2488              		.file 5 "../Dave/Generated/src/USBLD001/driver/dwc_otg_core_if.h"
 2489              		.file 6 "../Dave/Generated/src/USBLD001/driver/dwc_otg_regs.h"
 2490              		.file 7 "../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.h"
 2491              		.file 8 "../Dave/Generated/src/USBLD001/driver/dwc_otg_dbg.h"
DEFINED SYMBOLS
                            *ABS*:00000000 dwc_otg_adp.c
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:20     .text.dwc_otg_read_hprt0:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:24     .text.dwc_otg_read_hprt0:00000000 dwc_otg_read_hprt0
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:78     .text.cil_hcd_start:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:82     .text.cil_hcd_start:00000000 cil_hcd_start
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:129    .text.cil_hcd_session_start:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:133    .text.cil_hcd_session_start:00000000 cil_hcd_session_start
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:180    .text.cil_pcd_start:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:184    .text.cil_pcd_start:00000000 cil_pcd_start
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:231    .text.dwc_otg_adp_write_reg:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:236    .text.dwc_otg_adp_write_reg:00000000 dwc_otg_adp_write_reg
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:298    .text.dwc_otg_adp_read_reg:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:303    .text.dwc_otg_adp_read_reg:00000000 dwc_otg_adp_read_reg
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:366    .text.dwc_otg_adp_modify_reg:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:371    .text.dwc_otg_adp_modify_reg:00000000 dwc_otg_adp_modify_reg
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:412    .text.adp_sense_timeout:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:416    .text.adp_sense_timeout:00000000 adp_sense_timeout
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:1362   .text.dwc_otg_adp_sense_stop:00000000 dwc_otg_adp_sense_stop
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:1047   .text.dwc_otg_adp_probe_start:00000000 dwc_otg_adp_probe_start
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:461    .text.adp_vbuson_timeout:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:465    .text.adp_vbuson_timeout:00000000 adp_vbuson_timeout
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:641    .text.dwc_otg_adp_vbuson_timer_start:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:646    .text.dwc_otg_adp_vbuson_timer_start:00000000 dwc_otg_adp_vbuson_timer_start
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:682    .text.mask_all_interrupts:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:686    .text.mask_all_interrupts:00000000 mask_all_interrupts
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:998    .text.unmask_sess_req_intr:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:1002   .text.unmask_sess_req_intr:00000000 unmask_sess_req_intr
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:1042   .text.dwc_otg_adp_probe_start:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:1162   .text.dwc_otg_adp_sense_timer_start:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:1167   .text.dwc_otg_adp_sense_timer_start:00000000 dwc_otg_adp_sense_timer_start
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:1203   .text.dwc_otg_adp_sense_start:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:1208   .text.dwc_otg_adp_sense_start:00000000 dwc_otg_adp_sense_start
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:1288   .text.dwc_otg_adp_probe_stop:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:1293   .text.dwc_otg_adp_probe_stop:00000000 dwc_otg_adp_probe_stop
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:1357   .text.dwc_otg_adp_sense_stop:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:1426   .text.dwc_otg_adp_turnon_vbus:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:1431   .text.dwc_otg_adp_turnon_vbus:00000000 dwc_otg_adp_turnon_vbus
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:1476   .text.dwc_otg_adp_start:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:1481   .text.dwc_otg_adp_start:00000000 dwc_otg_adp_start
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:1605   .rodata:00000000 $d
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:1606   .rodata:00000000 .LC0
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:1609   .rodata:00000010 .LC1
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:1612   .text.dwc_otg_adp_init:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:1617   .text.dwc_otg_adp_init:00000000 dwc_otg_adp_init
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:1697   .text.dwc_otg_adp_remove:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:1702   .text.dwc_otg_adp_remove:00000000 dwc_otg_adp_remove
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:1738   .text.set_timer_value:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:1742   .text.set_timer_value:00000000 set_timer_value
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:1801   .text.compare_timer_values:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:1805   .text.compare_timer_values:00000000 compare_timer_values
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:1849   .text.dwc_otg_adp_handle_prb_tmout_intr:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:1853   .text.dwc_otg_adp_handle_prb_tmout_intr:00000000 dwc_otg_adp_handle_prb_tmout_intr
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:2160   .text.dwc_otg_adp_handle_sns_intr:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:2164   .text.dwc_otg_adp_handle_sns_intr:00000000 dwc_otg_adp_handle_sns_intr
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:2201   .text.dwc_otg_adp_handle_intr:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:2206   .text.dwc_otg_adp_handle_intr:00000000 dwc_otg_adp_handle_intr
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:2317   .text.dwc_otg_adp_handle_srp_intr:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccrZnqmc.s:2322   .text.dwc_otg_adp_handle_srp_intr:00000000 dwc_otg_adp_handle_srp_intr
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.84cfd71c6d2dc0bd4021712beaa9efd8
                           .group:00000000 wm4.stdarg.h.31.b70f21342353634f7b44d85f85f13832
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.stddef.h.187.9e651b6b8b16e149c1353259404973ea
                           .group:00000000 wm4.string.h.17.f8d12df81104836a3f2a5d589ae830d8
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.stddef.h.40.cf962ebbec441b3ac67502735f0765db
                           .group:00000000 wm4.types.h.60.e75c47576398c648cdcf9000ace5e3d8
                           .group:00000000 wm4.type_CM.h.61.3660c940695d7d5fef91de9c4081d0f0
                           .group:00000000 wm4.dwc_os.h.82.db2ca40c41e2f648d146b8942e5157d9
                           .group:00000000 wm4.dwc_otg_core_if.h.79.69b423f1b80cf6599fa5d22acae5fed6
                           .group:00000000 wm4.dwc_otg_regs.h.126.2e3ceb012c63b4493a7f3895cc69d724
                           .group:00000000 wm4.dwc_list.h.80.8da47a4d46ff6c633100fe5858ae15ea
                           .group:00000000 wm4.dwc_otg_dbg.h.74.dce17e0e4baa7dab653ff5db193ad2a8
                           .group:00000000 wm4.dwc_otg_adp.h.77.1b967e1ac3ef3726f9d560a2ab3c7ddc
                           .group:00000000 wm4.dwc_otg_cil.h.115.51e9f472a778bee570c9e431e948c25d

UNDEFINED SYMBOLS
DWC_READ_REG32
DWC_WRITE_REG32
DWC_MODIFY_REG32
DWC_TIMER_SCHEDULE
dwc_otg_disable_global_interrupts
dwc_otg_is_host_mode
dwc_otg_enable_global_interrupts
dwc_otg_core_init
DWC_TIMER_ALLOC
DWC_TIMER_FREE
dwc_otg_initiate_srp
DWC_TIMER_CANCEL
