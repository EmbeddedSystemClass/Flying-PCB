   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"dwc_otg_cil_intr.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.dwc_otg_read_hprt0,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	dwc_otg_read_hprt0:
  25              	.LFB1:
  26              		.file 1 "../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h"
   1:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /* ==========================================================================
   2:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * $File: //dwh/usb_iip/dev/software/otg/linux/drivers/dwc_otg_cil.h $
   3:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * $Revision: #115 $
   4:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * $Date: 2010/11/29 $
   5:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * $Change: 1636033 $
   6:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
   7:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Synopsys HS OTG Linux Software Driver and documentation (hereinafter,
   8:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * "Software") is an Unsupported proprietary work of Synopsys, Inc. unless
   9:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * otherwise expressly agreed to in writing between Synopsys and you.
  10:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
  11:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * The Software IS NOT an item of Licensed Software or Licensed Product under
  12:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * any End User Software License Agreement or Agreement for Licensed Product
  13:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * with Synopsys or any supplement thereto. You are permitted to use and
  14:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * redistribute this Software in source and binary forms, with or without
  15:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * modification, provided that redistributions of source code must retain this
  16:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * notice. You may not view, use, disclose, copy or distribute this file or
  17:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * any information contained herein except pursuant to this license grant from
  18:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Synopsys. If you do not agree with this notice, including the disclaimer
  19:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * below, then you are not authorized to use the Software.
  20:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
  21:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * THIS SOFTWARE IS BEING DISTRIBUTED BY SYNOPSYS SOLELY ON AN "AS IS" BASIS
  22:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * ARE HEREBY DISCLAIMED. IN NO EVENT SHALL SYNOPSYS BE LIABLE FOR ANY DIRECT,
  25:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  26:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  28:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  29:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
  30:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
  31:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * DAMAGE.
  32:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * ========================================================================== */
  33:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  34:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /* THIS FILE IS PROVIDED BY DAVE.
  35:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * THIS FILE IS GENERATED.
  36:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
  37:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  38:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /*******************************************************************************
  39:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
  40:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Copyright (C) 2011 Infineon Technologies AG. All rights reserved.
  41:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
  42:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Infineon Technologies AG (Infineon) is supplying this software for use with
  43:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Infineon's microcontrollers.
  44:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This file can be freely distributed within development tools that are
  45:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * supporting such microcontrollers.
  46:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
  47:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  48:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  49:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  50:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
  51:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  52:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
  53:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** ********************************************************************************
  54:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** **                                                                            **
  55:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** **                                                                            **
  56:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** ** PLATFORM : Infineon XMC4000 Series                                         **
  57:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** **                                                                            **
  58:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** ** COMPILER : Compiler Independent                                            **
  59:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** **                                                                            **
  60:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** ** AUTHOR : App Developer                                                     **
  61:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** **                                                                            **
  62:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** ** MAY BE CHANGED BY USER [yes/no]: Yes                                       **
  63:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** **                                                                            **
  64:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** ** MODIFICATION DATE : Apr 8, 2012                                            **
  65:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** **                                                                            **
  66:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** *******************************************************************************/
  67:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  68:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /*******************************************************************************
  69:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** **                       Author(s) Identity                                   **
  70:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** ********************************************************************************
  71:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** **                                                                            **
  72:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** ** Initials    Name                                                           **
  73:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** ** ---------------------------------------------------------------------------**
  74:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** ** CM          App Developer                                                  **
  75:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** *******************************************************************************/
  76:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  77:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  78:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #if !defined(__DWC_CIL_H__)
  79:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define __DWC_CIL_H__
  80:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  81:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef __cplusplus
  82:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern "C"{
  83:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
  84:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  85:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #include "../dwc_common_port/dwc_list.h"
  86:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #include "dwc_otg_dbg.h"
  87:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #include "dwc_otg_regs.h"
  88:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  89:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #include "dwc_otg_core_if.h"
  90:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #include "dwc_otg_adp.h"
  91:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  92:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
  93:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * @file
  94:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This file contains the interface to the Core Interface Layer.
  95:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
  96:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  97:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef DWC_UTE_CFI
  98:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
  99:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define MAX_DMA_DESCS_PER_EP	256
 100:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 101:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
 102:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Enumeration for the data buffer mode
 103:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
 104:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** typedef enum _data_buffer_mode {
 105:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	BM_STANDARD = 0,	/* data buffer is in normal mode */
 106:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	BM_SG = 1,		/* data buffer uses the scatter/gather mode */
 107:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	BM_CONCAT = 2,		/* data buffer uses the concatenation mode */
 108:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	BM_CIRCULAR = 3,	/* data buffer uses the circular DMA mode */
 109:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	BM_ALIGN = 4		/* data buffer is in buffer alignment mode */
 110:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } data_buffer_mode_e;
 111:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif //DWC_UTE_CFI
 112:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 113:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Macros defined for DWC OTG HW Release verison */
 114:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 115:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define OTG_CORE_REV_2_60a	0x4F54260A
 116:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define OTG_CORE_REV_2_71a	0x4F54271A
 117:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define OTG_CORE_REV_2_72a	0x4F54272A
 118:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define OTG_CORE_REV_2_80a	0x4F54280A
 119:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define OTG_CORE_REV_2_81a	0x4F54281A
 120:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define OTG_CORE_REV_2_90a	0x4F54290A
 121:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define OTG_CORE_REV_2_91a	0x4F54291A
 122:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define OTG_CORE_REV_2_92a	0x4F54292A
 123:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 124:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
 125:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Information for each ISOC packet.
 126:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
 127:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** typedef struct iso_pkt_info {
 128:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t offset;
 129:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t length;
 130:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t status;
 131:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } iso_pkt_info_t;
 132:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 133:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
 134:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * The <code>dwc_ep</code> structure represents the state of a single
 135:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * endpoint when acting in device mode. It contains the data items
 136:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * needed for an endpoint to be activated and transfer packets.
 137:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
 138:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** typedef struct dwc_ep {
 139:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** EP number used for register address lookup */
 140:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t num;
 141:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** EP direction 0 = OUT */
 142:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned is_in:1;
 143:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** EP active. */
 144:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned active:1;
 145:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 146:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 147:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *Periodic Tx FIFO # for IN EPs For INTR EP set to 0 to use non-periodic Tx FIFO
 148:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * If dedicated Tx FIFOs are enabled for all IN Eps - Tx FIFO # FOR IN EPs*/
 149:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned tx_fifo_num:4;
 150:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** EP type: 0 - Control, 1 - ISOC,	 2 - BULK,	3 - INTR */
 151:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned type:2;
 152:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_EP_TYPE_CONTROL	   0
 153:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_EP_TYPE_ISOC	   1
 154:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_EP_TYPE_BULK	   2
 155:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_EP_TYPE_INTR	   3
 156:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 157:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** DATA start PID for INTR and BULK EP */
 158:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned data_pid_start:1;
 159:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Frame (even/odd) for ISOC EP */
 160:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned even_odd_frame:1;
 161:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Max Packet bytes */
 162:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned maxpacket:11;
 163:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 164:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Max Transfer size */
 165:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t maxxfer;
 166:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 167:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** @name Transfer state */
 168:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** @{ */
 169:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 170:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 171:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Pointer to the beginning of the transfer buffer -- do not modify
 172:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * during transfer.
 173:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 174:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 175:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_dma_t dma_addr;
 176:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 177:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_dma_t dma_desc_addr;
 178:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_dev_dma_desc_t *desc_addr;
 179:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 180:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t *start_xfer_buff;
 181:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** pointer to the transfer buffer */
 182:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t *xfer_buff;
 183:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of bytes to transfer */
 184:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned xfer_len:19;
 185:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of bytes transferred. */
 186:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned xfer_count:19;
 187:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Sent ZLP */
 188:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned sent_zlp:1;
 189:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Total len for control transfer */
 190:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned total_len:19;
 191:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 192:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** stall clear flag */
 193:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned stall_clear_flag:1;
 194:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 195:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef DWC_UTE_CFI
 196:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/* The buffer mode */
 197:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	data_buffer_mode_e buff_mode;
 198:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 199:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/* The chain of DMA descriptors.
 200:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * MAX_DMA_DESCS_PER_EP will be allocated for each active EP.
 201:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 202:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_dma_desc_t *descs;
 203:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 204:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/* The DMA address of the descriptors chain start */
 205:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dma_addr_t descs_dma_addr;
 206:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** This variable stores the length of the last enqueued request */
 207:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t cfi_req_len;
 208:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif				//DWC_UTE_CFI
 209:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 210:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Allocated DMA Desc count */
 211:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t desc_cnt;
 212:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 213:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef DWC_UTE_PER_IO
 214:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Next frame num for which will be setup DMA Desc */
 215:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t xiso_frame_num;
 216:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** bInterval */
 217:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t xiso_bInterval;
 218:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Count of currently active transfers - shall be either 0 or 1 */
 219:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int xiso_active_xfers;
 220:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int xiso_queued_xfers;
 221:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
 222:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef DWC_EN_ISOC
 223:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 224:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Variables specific for ISOC EPs
 225:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *
 226:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 227:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** DMA addresses of ISOC buffers */
 228:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_dma_t dma_addr0;
 229:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_dma_t dma_addr1;
 230:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 231:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_dma_t iso_dma_desc_addr;
 232:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_dev_dma_desc_t *iso_desc_addr;
 233:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 234:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** pointer to the transfer buffers */
 235:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t *xfer_buff0;
 236:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t *xfer_buff1;
 237:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 238:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** number of ISOC Buffer is processing */
 239:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t proc_buf_num;
 240:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Interval of ISOC Buffer processing */
 241:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t buf_proc_intrvl;
 242:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Data size for regular frame */
 243:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t data_per_frame;
 244:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 245:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/* todo - pattern data support is to be implemented in the future */
 246:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Data size for pattern frame */
 247:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t data_pattern_frame;
 248:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Frame number of pattern data */
 249:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t sync_frame;
 250:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 251:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** bInterval */
 252:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t bInterval;
 253:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** ISO Packet number per frame */
 254:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t pkt_per_frm;
 255:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Next frame num for which will be setup DMA Desc */
 256:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t next_frame;
 257:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of packets per buffer processing */
 258:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t pkt_cnt;
 259:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Info for all isoc packets */
 260:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	iso_pkt_info_t *pkt_info;
 261:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** current pkt number */
 262:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t cur_pkt;
 263:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** current pkt number */
 264:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t *cur_pkt_addr;
 265:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** current pkt number */
 266:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t cur_pkt_dma_addr;
 267:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif				/* DWC_EN_ISOC */
 268:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 269:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** @} */
 270:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } dwc_ep_t;
 271:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 272:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /*
 273:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Reasons for halting a host channel.
 274:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
 275:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** typedef enum dwc_otg_halt_status {
 276:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_NO_HALT_STATUS,
 277:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_COMPLETE,
 278:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_URB_COMPLETE,
 279:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_ACK,
 280:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_NAK,
 281:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_NYET,
 282:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_STALL,
 283:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_XACT_ERR,
 284:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_FRAME_OVERRUN,
 285:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_BABBLE_ERR,
 286:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_DATA_TOGGLE_ERR,
 287:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_AHB_ERR,
 288:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_PERIODIC_INCOMPLETE,
 289:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_HC_XFER_URB_DEQUEUE
 290:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } dwc_otg_halt_status_e;
 291:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 292:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
 293:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Host channel descriptor. This structure represents the state of a single
 294:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * host channel when acting in host mode. It contains the data items needed to
 295:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * transfer packets to an endpoint via a host channel.
 296:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
 297:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** typedef struct dwc_hc {
 298:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Host channel number used for register address lookup */
 299:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t hc_num;
 300:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 301:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Device to access */
 302:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned dev_addr:7;
 303:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 304:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** EP to access */
 305:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned ep_num:4;
 306:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 307:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** EP direction. 0: OUT, 1: IN */
 308:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned ep_is_in:1;
 309:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 310:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 311:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * EP speed.
 312:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * One of the following values:
 313:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	- DWC_OTG_EP_SPEED_LOW
 314:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	- DWC_OTG_EP_SPEED_FULL
 315:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	- DWC_OTG_EP_SPEED_HIGH
 316:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 317:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned speed:2;
 318:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_EP_SPEED_LOW	0
 319:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_EP_SPEED_FULL	1
 320:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_EP_SPEED_HIGH	2
 321:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 322:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 323:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Endpoint type.
 324:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * One of the following values:
 325:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	- DWC_OTG_EP_TYPE_CONTROL: 0
 326:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	- DWC_OTG_EP_TYPE_ISOC: 1
 327:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	- DWC_OTG_EP_TYPE_BULK: 2
 328:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	- DWC_OTG_EP_TYPE_INTR: 3
 329:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 330:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned ep_type:2;
 331:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 332:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Max packet size in bytes */
 333:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned max_packet:11;
 334:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 335:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 336:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * PID for initial transaction.
 337:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0: DATA0,<br>
 338:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1: DATA2,<br>
 339:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 2: DATA1,<br>
 340:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 3: MDATA (non-Control EP),
 341:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	  SETUP (Control EP)
 342:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 343:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned data_pid_start:2;
 344:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_HC_PID_DATA0 0
 345:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_HC_PID_DATA2 1
 346:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_HC_PID_DATA1 2
 347:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_HC_PID_MDATA 3
 348:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_HC_PID_SETUP 3
 349:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 350:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of periodic transactions per (micro)frame */
 351:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	unsigned multi_count:2;
 352:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 353:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** @name Transfer State */
 354:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** @{ */
 355:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 356:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Pointer to the current transfer buffer position. */
 357:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t *xfer_buff;
 358:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 359:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * In Buffer DMA mode this buffer will be used
 360:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * if xfer_buff is not DWORD aligned.
 361:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 362:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_dma_t align_buff;
 363:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Total number of bytes to transfer. */
 364:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t xfer_len;
 365:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of bytes transferred so far. */
 366:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t xfer_count;
 367:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Packet count at start of transfer.*/
 368:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t start_pkt_count;
 369:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 370:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 371:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Flag to indicate whether the transfer has been started. Set to 1 if
 372:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * it has been started, 0 otherwise.
 373:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 374:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t xfer_started;
 375:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 376:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 377:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Set to 1 to indicate that a PING request should be issued on this
 378:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * channel. If 0, process normally.
 379:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 380:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t do_ping;
 381:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 382:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 383:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Set to 1 to indicate that the error count for this transaction is
 384:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * non-zero. Set to 0 if the error count is 0.
 385:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 386:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t error_state;
 387:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 388:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 389:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Set to 1 to indicate that this channel should be halted the next
 390:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * time a request is queued for the channel. This is necessary in
 391:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * slave mode if no request queue space is available when an attempt
 392:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * is made to halt the channel.
 393:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 394:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t halt_on_queue;
 395:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 396:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 397:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Set to 1 if the host channel has been halted, but the core is not
 398:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * finished flushing queued requests. Otherwise 0.
 399:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 400:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t halt_pending;
 401:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 402:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 403:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Reason for halting the host channel.
 404:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 405:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_halt_status_e halt_status;
 406:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 407:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/*
 408:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Split settings for the host channel
 409:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 410:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t do_split;		   /**< Enable split for the channel */
 411:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t complete_split;	   /**< Enable complete split */
 412:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t hub_addr;		   /**< Address of high speed hub */
 413:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 414:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t port_addr;		   /**< Port of the low/full speed device */
 415:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Split transaction position
 416:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * One of the following values:
 417:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	  - DWC_HCSPLIT_XACTPOS_MID
 418:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	  - DWC_HCSPLIT_XACTPOS_BEGIN
 419:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	  - DWC_HCSPLIT_XACTPOS_END
 420:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	  - DWC_HCSPLIT_XACTPOS_ALL */
 421:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t xact_pos;
 422:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 423:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Set when the host channel does a short read. */
 424:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t short_read;
 425:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 426:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 427:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Number of requests issued for this channel since it was assigned to
 428:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * the current transfer (not counting PINGs).
 429:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 430:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t requests;
 431:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 432:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 433:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Queue Head for the transfer being processed by this channel.
 434:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 435:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	struct dwc_otg_qh *qh;
 436:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 437:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** @} */
 438:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 439:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Entry in list of host channels. */
 440:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 DWC_CIRCLEQ_ENTRY(dwc_hc) hc_list_entry;
 441:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 442:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** @name Descriptor DMA support */
 443:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** @{ */
 444:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 445:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of Transfer Descriptors */
 446:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t ntd;
 447:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 448:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Descriptor List DMA address */
 449:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_dma_t desc_list_addr;
 450:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 451:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Scheduling micro-frame bitmap. */
 452:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t schinfo;
 453:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 454:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** @} */
 455:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } dwc_hc_t;
 456:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 457:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
 458:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * The following parameters may be specified when starting the module. These
 459:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * parameters define how the DWC_otg controller should be configured.
 460:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
 461:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** typedef struct dwc_otg_core_params {
 462:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t opt;
 463:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 464:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 465:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Specifies the OTG capabilities. The driver will automatically
 466:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * detect the value for this parameter if none is specified.
 467:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - HNP and SRP capable (default)
 468:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - SRP Only capable
 469:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 2 - No HNP/SRP capable
 470:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 471:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t otg_cap;
 472:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 473:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 474:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Specifies whether to use slave or DMA mode for accessing the data
 475:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * FIFOs. The driver will automatically detect the value for this
 476:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * parameter if none is specified.
 477:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - Slave
 478:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - DMA (default, if available)
 479:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 480:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t dma_enable;
 481:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 482:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 483:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * When DMA mode is enabled specifies whether to use address DMA or DMA Descritor mode for accessi
 484:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * FIFOs in device mode. The driver will automatically detect the value for this
 485:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * parameter if none is specified.
 486:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - address DMA
 487:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - DMA Descriptor(default, if available)
 488:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 489:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t dma_desc_enable;
 490:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** The DMA Burst size (applicable only for External DMA
 491:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Mode). 1, 4, 8 16, 32, 64, 128, 256 (default 32)
 492:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 493:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t dma_burst_size;	/* Translate this to GAHBCFG values */
 494:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 495:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 496:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Specifies the maximum speed of operation in host and device mode.
 497:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * The actual speed depends on the speed of the attached device and
 498:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * the value of phy_type. The actual speed depends on the speed of the
 499:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * attached device.
 500:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - High Speed (default)
 501:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Full Speed
 502:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 503:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t speed;
 504:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Specifies whether low power mode is supported when attached
 505:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	to a Full Speed or Low Speed device in host mode.
 506:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - Don't support low power mode (default)
 507:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Support low power mode
 508:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 509:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t host_support_fs_ls_low_power;
 510:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 511:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Specifies the PHY clock rate in low power mode when connected to a
 512:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Low Speed device in host mode. This parameter is applicable only if
 513:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * HOST_SUPPORT_FS_LS_LOW_POWER is enabled. If PHY_TYPE is set to FS
 514:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * then defaults to 6 MHZ otherwise 48 MHZ.
 515:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *
 516:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - 48 MHz
 517:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - 6 MHz
 518:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 519:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t host_ls_low_power_phy_clk;
 520:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 521:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 522:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - Use cC FIFO size parameters
 523:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Allow dynamic FIFO sizing (default)
 524:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 525:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t enable_dynamic_fifo;
 526:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 527:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Total number of 4-byte words in the data FIFO memory. This
 528:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * memory includes the Rx FIFO, non-periodic Tx FIFO, and periodic
 529:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Tx FIFOs.
 530:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 32 to 32768 (default 8192)
 531:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Note: The total FIFO memory depth in the FPGA configuration is 8192.
 532:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 533:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t data_fifo_size;
 534:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 535:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of 4-byte words in the Rx FIFO in device mode when dynamic
 536:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * FIFO sizing is enabled.
 537:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 16 to 32768 (default 1064)
 538:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 539:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t dev_rx_fifo_size;
 540:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 541:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of 4-byte words in the non-periodic Tx FIFO in device mode
 542:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * when dynamic FIFO sizing is enabled.
 543:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 16 to 32768 (default 1024)
 544:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 545:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t dev_nperio_tx_fifo_size;
 546:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 547:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of 4-byte words in each of the periodic Tx FIFOs in device
 548:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * mode when dynamic FIFO sizing is enabled.
 549:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 4 to 768 (default 256)
 550:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 551:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t dev_perio_tx_fifo_size[MAX_PERIO_FIFOS];
 552:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 553:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of 4-byte words in the Rx FIFO in host mode when dynamic
 554:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * FIFO sizing is enabled.
 555:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 16 to 32768 (default 1024)
 556:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 557:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t host_rx_fifo_size;
 558:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 559:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of 4-byte words in the non-periodic Tx FIFO in host mode
 560:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * when Dynamic FIFO sizing is enabled in the core.
 561:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 16 to 32768 (default 1024)
 562:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 563:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t host_nperio_tx_fifo_size;
 564:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 565:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of 4-byte words in the host periodic Tx FIFO when dynamic
 566:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * FIFO sizing is enabled.
 567:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 16 to 32768 (default 1024)
 568:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 569:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t host_perio_tx_fifo_size;
 570:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 571:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** The maximum transfer size supported in bytes.
 572:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 2047 to 65,535  (default 65,535)
 573:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 574:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t max_transfer_size;
 575:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 576:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** The maximum number of packets in a transfer.
 577:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 15 to 511  (default 511)
 578:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 579:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t max_packet_count;
 580:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 581:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** The number of host channel registers to use.
 582:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 to 16 (default 12)
 583:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Note: The FPGA configuration supports a maximum of 12 host channels.
 584:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 585:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t host_channels;
 586:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 587:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** The number of endpoints in addition to EP0 available for device
 588:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * mode operations.
 589:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 to 15 (default 6 IN and OUT)
 590:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Note: The FPGA configuration supports a maximum of 6 IN and OUT
 591:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * endpoints in addition to EP0.
 592:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 593:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t dev_endpoints;
 594:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 595:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		/**
 596:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		 * Specifies the type of PHY interface to use. By default, the driver
 597:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		 * will automatically detect the phy_type.
 598:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		 *
 599:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		 * 0 - Full Speed PHY
 600:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		 * 1 - UTMI+ (default)
 601:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		 * 2 - ULPI
 602:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		 */
 603:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t phy_type;
 604:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 605:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 606:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Specifies the UTMI+ Data Width. This parameter is
 607:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * applicable for a PHY_TYPE of UTMI+ or ULPI. (For a ULPI
 608:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * PHY_TYPE, this parameter indicates the data width between
 609:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * the MAC and the ULPI Wrapper.) Also, this parameter is
 610:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * applicable only if the OTG_HSPHY_WIDTH cC parameter was set
 611:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * to "8 and 16 bits", meaning that the core has been
 612:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * configured to work at either data path width.
 613:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *
 614:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 8 or 16 bits (default 16)
 615:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 616:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t phy_utmi_width;
 617:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 618:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 619:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Specifies whether the ULPI operates at double or single
 620:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * data rate. This parameter is only applicable if PHY_TYPE is
 621:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * ULPI.
 622:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *
 623:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - single data rate ULPI interface with 8 bit wide data
 624:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * bus (default)
 625:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - double data rate ULPI interface with 4 bit wide data
 626:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * bus
 627:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 628:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t phy_ulpi_ddr;
 629:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 630:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 631:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Specifies whether to use the internal or external supply to
 632:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * drive the vbus with a ULPI phy.
 633:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 634:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t phy_ulpi_ext_vbus;
 635:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 636:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 637:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Specifies whether to use the I2Cinterface for full speed PHY. This
 638:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * parameter is only applicable if PHY_TYPE is FS.
 639:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - No (default)
 640:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Yes
 641:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 642:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t i2c_enable;
 643:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 644:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t ulpi_fs_ls;
 645:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 646:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t ts_dline;
 647:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 648:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 649:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Specifies whether dedicated transmit FIFOs are
 650:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * enabled for non periodic IN endpoints in device mode
 651:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - No
 652:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Yes
 653:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 654:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t en_multiple_tx_fifo;
 655:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 656:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Number of 4-byte words in each of the Tx FIFOs in device
 657:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * mode when dynamic FIFO sizing is enabled.
 658:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 4 to 768 (default 256)
 659:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 660:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t dev_tx_fifo_size[MAX_TX_FIFOS];
 661:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 662:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Thresholding enable flag-
 663:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * bit 0 - enable non-ISO Tx thresholding
 664:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * bit 1 - enable ISO Tx thresholding
 665:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * bit 2 - enable Rx thresholding
 666:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 667:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t thr_ctl;
 668:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 669:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Thresholding length for Tx
 670:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	FIFOs in 32 bit DWORDs
 671:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 672:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t tx_thr_length;
 673:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 674:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Thresholding length for Rx
 675:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	FIFOs in 32 bit DWORDs
 676:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 677:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t rx_thr_length;
 678:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 679:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 680:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Specifies whether LPM (Link Power Management) support is enabled
 681:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 682:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t lpm_enable;
 683:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 684:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Per Transfer Interrupt
 685:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	mode enable flag
 686:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Enabled
 687:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - Disabled
 688:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 689:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t pti_enable;
 690:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 691:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Multi Processor Interrupt
 692:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 *	mode enable flag
 693:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Enabled
 694:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - Disabled
 695:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 696:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t mpi_enable;
 697:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 698:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** IS_USB Capability
 699:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Enabled
 700:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - Disabled
 701:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 702:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t ic_usb_cap;
 703:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 704:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** AHB Threshold Ratio
 705:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 2'b00 AHB Threshold = 	MAC Threshold
 706:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 2'b01 AHB Threshold = 1/2 	MAC Threshold
 707:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 2'b10 AHB Threshold = 1/4	MAC Threshold
 708:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 2'b11 AHB Threshold = 1/8	MAC Threshold
 709:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 710:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t ahb_thr_ratio;
 711:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 712:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** ADP Support
 713:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Enabled
 714:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - Disabled
 715:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 716:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t adp_supp_enable;
 717:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 718:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** HFIR Reload Control
 719:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - The HFIR cannot be reloaded dynamically.
 720:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Allow dynamic reloading of the HFIR register during runtime.
 721:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 722:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t reload_ctl;
 723:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 724:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Core Power down mode
 725:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - No Power Down is enabled
 726:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - Reserved
 727:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 2 - Complete Power Down (Hibernation)
 728:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 729:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t power_down;
 730:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 731:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** OTG revision supported
 732:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 0 - OTG 1.3 revision
 733:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * 1 - OTG 2.0 revision
 734:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 735:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int32_t otg_ver;
 736:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 737:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } dwc_otg_core_params_t;
 738:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 739:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef DEBUG
 740:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** struct dwc_otg_core_if;
 741:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** typedef struct hc_xfer_info {
 742:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	struct dwc_otg_core_if *core_if;
 743:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_hc_t *hc;
 744:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } hc_xfer_info_t;
 745:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
 746:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /*
 747:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Device States
 748:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
 749:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** typedef enum dwc_otg_lx_state {
 750:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** On state */
 751:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_L0,
 752:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** LPM sleep state*/
 753:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_L1,
 754:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** USB suspend state*/
 755:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_L2,
 756:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Off state*/
 757:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_OTG_L3
 758:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } dwc_otg_lx_state_e;
 759:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 760:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** struct dwc_otg_global_regs_backup {
 761:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t gotgctl_local;
 762:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t gintmsk_local;
 763:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t gahbcfg_local;
 764:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t gusbcfg_local;
 765:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t grxfsiz_local;
 766:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t gnptxfsiz_local;
 767:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef CONFIG_USB_DWC_OTG_LPM
 768:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t glpmcfg_local;
 769:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
 770:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t gi2cctl_local;
 771:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t hptxfsiz_local;
 772:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t pcgcctl_local;
 773:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t gdfifocfg_local;
 774:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t dtxfsiz_local[MAX_EPS_CHANNELS];
 775:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t gpwrdn_local;
 776:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** };
 777:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 778:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** struct dwc_otg_host_regs_backup {
 779:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t hcfg_local;
 780:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t haintmsk_local;
 781:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t hcintmsk_local[MAX_EPS_CHANNELS];
 782:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t hprt0_local;
 783:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t hfir_local;
 784:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** };
 785:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 786:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** struct dwc_otg_dev_regs_backup {
 787:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t dcfg;
 788:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t dctl;
 789:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t daintmsk;
 790:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t diepmsk;
 791:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t doepmsk;
 792:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t diepctl[MAX_EPS_CHANNELS];
 793:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t dieptsiz[MAX_EPS_CHANNELS];
 794:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t diepdma[MAX_EPS_CHANNELS];
 795:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t doepfn[MAX_EPS_CHANNELS];
 796:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** };
 797:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
 798:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * The <code>dwc_otg_core_if</code> structure contains information needed to manage
 799:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * the DWC_otg controller acting in either host or device mode. It
 800:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * represents the programming view of the controller as a whole.
 801:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
 802:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** struct dwc_otg_core_if {
 803:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Parameters that define how the core should be configured.*/
 804:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_core_params_t *core_params;
 805:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 806:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Core Global registers starting at offset 000h. */
 807:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_core_global_regs_t *core_global_regs;
 808:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 809:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Device-specific information */
 810:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_dev_if_t *dev_if;
 811:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Host-specific information */
 812:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_host_if_t *host_if;
 813:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 814:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Value from SNPSID register */
 815:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t snpsid;
 816:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 817:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/*
 818:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Set to 1 if the core PHY interface bits in USBCFG have been
 819:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * initialized.
 820:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 821:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t phy_init_done;
 822:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 823:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/*
 824:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * SRP Success flag, set by srp success interrupt in FS I2C mode
 825:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 826:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t srp_success;
 827:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t srp_timer_started;
 828:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Timer for SRP. If it expires before SRP is successful
 829:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * clear the SRP. */
 830:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_timer_t *srp_timer;
 831:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 832:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef DWC_DEV_SRPCAP
 833:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/* This timer is needed to power on the hibernated host core if SRP is not
 834:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * initiated on connected SRP capable device for limited period of time
 835:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 836:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t pwron_timer_started;
 837:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_timer_t *pwron_timer;
 838:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
 839:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/* Common configuration information */
 840:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Power and Clock Gating Control Register */
 841:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	volatile uint32_t *pcgcctl;
 842:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_PCGCCTL_OFFSET 0xE00
 843:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 844:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Push/pop addresses for endpoints or host channels.*/
 845:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t *data_fifo[MAX_EPS_CHANNELS];
 846:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_DATA_FIFO_OFFSET 0x1000
 847:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define DWC_OTG_DATA_FIFO_SIZE 0x1000
 848:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 849:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Total RAM for FIFOs (Bytes) */
 850:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t total_fifo_size;
 851:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Size of Rx FIFO (Bytes) */
 852:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t rx_fifo_size;
 853:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Size of Non-periodic Tx FIFO (Bytes) */
 854:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t nperio_tx_fifo_size;
 855:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 856:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** 1 if DMA is enabled, 0 otherwise. */
 857:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t dma_enable;
 858:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 859:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** 1 if DMA descriptor is enabled, 0 otherwise. */
 860:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t dma_desc_enable;
 861:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 862:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** 1 if PTI Enhancement mode is enabled, 0 otherwise. */
 863:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t pti_enh_enable;
 864:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 865:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** 1 if MPI Enhancement mode is enabled, 0 otherwise. */
 866:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t multiproc_int_enable;
 867:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 868:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** 1 if dedicated Tx FIFOs are enabled, 0 otherwise. */
 869:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t en_multiple_tx_fifo;
 870:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 871:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Set to 1 if multiple packets of a high-bandwidth transfer is in
 872:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * process of being queued */
 873:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t queuing_high_bandwidth;
 874:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 875:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Hardware Configuration -- stored here for convenience.*/
 876:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hwcfg1_data_t hwcfg1;
 877:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hwcfg2_data_t hwcfg2;
 878:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hwcfg3_data_t hwcfg3;
 879:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hwcfg4_data_t hwcfg4;
 880:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 881:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Host and Device Configuration -- stored here for convenience.*/
 882:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hcfg_data_t hcfg;
 883:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dcfg_data_t dcfg;
 884:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 885:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** The operational State, during transations
 886:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * (a_host>>a_peripherial and b_device=>b_host) this may not
 887:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * match the core but allows the software to determine
 888:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * transitions.
 889:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 890:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t op_state;
 891:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 892:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/**
 893:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * Set to 1 if the HCD needs to be restarted on a session request
 894:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * interrupt. This is required if no connector ID status change has
 895:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 * occurred since the HCD was last disconnected.
 896:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	 */
 897:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t restart_hcd_on_session_req;
 898:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 899:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** HCD callbacks */
 900:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** A-Device is a_host */
 901:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define A_HOST		(1)
 902:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** A-Device is a_suspend */
 903:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define A_SUSPEND	(2)
 904:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** A-Device is a_peripherial */
 905:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define A_PERIPHERAL	(3)
 906:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** B-Device is operating as a Peripheral. */
 907:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define B_PERIPHERAL	(4)
 908:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** B-Device is operating as a Host. */
 909:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define B_HOST		(5)
 910:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 911:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** HCD callbacks */
 912:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	struct dwc_otg_cil_callbacks *hcd_cb;
 913:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** PCD callbacks */
 914:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	struct dwc_otg_cil_callbacks *pcd_cb;
 915:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 916:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Device mode Periodic Tx FIFO Mask */
 917:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t p_tx_msk;
 918:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Device mode Periodic Tx FIFO Mask */
 919:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t tx_msk;
 920:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 921:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Workqueue object used for handling several interrupts */
 922:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_workq_t *wq_otg;
 923:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 924:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Timer object used for handling "Wakeup Detected" Interrupt */
 925:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_timer_t *wkp_timer;
 926:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 927:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef DEBUG
 928:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t start_hcchar_val[MAX_EPS_CHANNELS];
 929:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 930:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hc_xfer_info_t hc_xfer_info[MAX_EPS_CHANNELS];
 931:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_timer_t *hc_xfer_timer[MAX_EPS_CHANNELS];
 932:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 933:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t hfnum_7_samples;
 934:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint64_t hfnum_7_frrem_accum;
 935:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t hfnum_0_samples;
 936:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint64_t hfnum_0_frrem_accum;
 937:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t hfnum_other_samples;
 938:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint64_t hfnum_other_frrem_accum;
 939:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
 940:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 941:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef DWC_UTE_CFI
 942:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t pwron_rxfsiz;
 943:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t pwron_gnptxfsiz;
 944:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t pwron_txfsiz[15];
 945:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 946:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t init_rxfsiz;
 947:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t init_gnptxfsiz;
 948:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint16_t init_txfsiz[15];
 949:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
 950:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 951:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Lx state of device */
 952:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_lx_state_e lx_state;
 953:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 954:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Saved Core Global registers */
 955:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	struct dwc_otg_global_regs_backup *gr_backup;
 956:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Saved Host registers */
 957:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	struct dwc_otg_host_regs_backup *hr_backup;
 958:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Saved Device registers */
 959:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	struct dwc_otg_dev_regs_backup *dr_backup;
 960:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 961:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Power Down Enable */
 962:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t power_down;
 963:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 964:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** ADP support Enable */
 965:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t adp_enable;
 966:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 967:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** ADP structure object */
 968:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_adp_t adp;
 969:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 970:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** hibernation/suspend flag */
 971:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int hibernation_suspend;
 972:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 973:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** OTG revision supported */
 974:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t otg_ver;
 975:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 976:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** OTG status flag used for HNP polling */
 977:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint8_t otg_sts;
 978:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 979:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Pointer to either hcd->lock or pcd->lock */
 980:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_spinlock_t *lock;
 981:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** };
 982:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 983:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef DEBUG
 984:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /*
 985:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This function is called when transfer is timed out.
 986:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
 987:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void hc_xfer_timeout(void *ptr);
 988:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
 989:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 990:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /*
 991:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * The following functions are functions for works
 992:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * using during handling some interrupts
 993:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
 994:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void w_conn_id_status_change(void *p);
 995:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 996:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void w_wakeup_detected(void *p);
 997:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
 998:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Saves global register values into system memory. */
 999:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int dwc_otg_save_global_regs(dwc_otg_core_if_t * core_if);
1000:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Saves device register values into system memory. */
1001:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int dwc_otg_save_dev_regs(dwc_otg_core_if_t * core_if);
1002:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Saves host register values into system memory. */
1003:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int dwc_otg_save_host_regs(dwc_otg_core_if_t * core_if);
1004:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Restore global register values. */
1005:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int dwc_otg_restore_global_regs(dwc_otg_core_if_t * core_if);
1006:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Restore host register values. */
1007:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int dwc_otg_restore_host_regs(dwc_otg_core_if_t * core_if, int reset);
1008:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Restore device register values. */
1009:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int dwc_otg_restore_dev_regs(dwc_otg_core_if_t * core_if,
1010:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				    int rem_wakeup);
1011:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int restore_lpm_i2c_regs(dwc_otg_core_if_t * core_if);
1012:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int restore_essential_regs(dwc_otg_core_if_t * core_if, int rmode,
1013:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				  int is_host);
1014:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1015:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int dwc_otg_host_hibernation_restore(dwc_otg_core_if_t * core_if,
1016:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					    int restore_mode, int reset);
1017:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int dwc_otg_device_hibernation_restore(dwc_otg_core_if_t * core_if,
1018:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					      int rem_wakeup, int reset);
1019:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1020:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /*
1021:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * The following functions support initialization of the CIL driver component
1022:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * and the DWC_otg controller.
1023:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1024:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_core_host_init(dwc_otg_core_if_t * _core_if);
1025:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_core_dev_init(dwc_otg_core_if_t * _core_if);
1026:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1027:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** @name Device CIL Functions
1028:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * The following functions support managing the DWC_otg controller in device
1029:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * mode.
1030:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1031:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**@{*/
1032:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_wakeup(dwc_otg_core_if_t * _core_if);
1033:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_read_setup_packet(dwc_otg_core_if_t * _core_if,
1034:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				      uint32_t * _dest);
1035:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern uint32_t dwc_otg_get_frame_number(dwc_otg_core_if_t * _core_if);
1036:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_ep0_activate(dwc_otg_core_if_t * _core_if, dwc_ep_t * _ep);
1037:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_ep_activate(dwc_otg_core_if_t * _core_if, dwc_ep_t * _ep);
1038:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_ep_deactivate(dwc_otg_core_if_t * _core_if, dwc_ep_t * _ep);
1039:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_ep_start_transfer(dwc_otg_core_if_t * _core_if,
1040:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				      dwc_ep_t * _ep);
1041:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_ep_start_zl_transfer(dwc_otg_core_if_t * _core_if,
1042:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					 dwc_ep_t * _ep);
1043:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_ep0_start_transfer(dwc_otg_core_if_t * _core_if,
1044:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				       dwc_ep_t * _ep);
1045:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_ep0_continue_transfer(dwc_otg_core_if_t * _core_if,
1046:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					  dwc_ep_t * _ep);
1047:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_ep_write_packet(dwc_otg_core_if_t * _core_if,
1048:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				    dwc_ep_t * _ep, int _dma);
1049:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_ep_set_stall(dwc_otg_core_if_t * _core_if, dwc_ep_t * _ep);
1050:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_ep_clear_stall(dwc_otg_core_if_t * _core_if,
1051:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   dwc_ep_t * _ep);
1052:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_enable_device_interrupts(dwc_otg_core_if_t * _core_if);
1053:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1054:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef DWC_EN_ISOC
1055:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_iso_ep_start_frm_transfer(dwc_otg_core_if_t * core_if,
1056:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					      dwc_ep_t * ep);
1057:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_iso_ep_start_buf_transfer(dwc_otg_core_if_t * core_if,
1058:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					      dwc_ep_t * ep);
1059:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif /* DWC_EN_ISOC */
1060:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**@}*/
1061:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1062:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** @name Host CIL Functions
1063:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * The following functions support managing the DWC_otg controller in host
1064:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * mode.
1065:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1066:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**@{*/
1067:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_hc_init(dwc_otg_core_if_t * _core_if, dwc_hc_t * _hc);
1068:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_hc_halt(dwc_otg_core_if_t * _core_if,
1069:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 			    dwc_hc_t * _hc, dwc_otg_halt_status_e _halt_status);
1070:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_hc_cleanup(dwc_otg_core_if_t * _core_if, dwc_hc_t * _hc);
1071:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_hc_start_transfer(dwc_otg_core_if_t * _core_if,
1072:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				      dwc_hc_t * _hc);
1073:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern int dwc_otg_hc_continue_transfer(dwc_otg_core_if_t * _core_if,
1074:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					dwc_hc_t * _hc);
1075:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_hc_do_ping(dwc_otg_core_if_t * _core_if, dwc_hc_t * _hc);
1076:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_hc_write_packet(dwc_otg_core_if_t * _core_if,
1077:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				    dwc_hc_t * _hc);
1078:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_enable_host_interrupts(dwc_otg_core_if_t * _core_if);
1079:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_disable_host_interrupts(dwc_otg_core_if_t * _core_if);
1080:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1081:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_hc_start_transfer_ddma(dwc_otg_core_if_t * core_if,
1082:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					   dwc_hc_t * hc);
1083:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1084:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern uint32_t calc_frame_interval(dwc_otg_core_if_t * core_if);
1085:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1086:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef USE_IFX_DEV 
1087:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** int32_t dwc_otg_handle_disconnect_intr(dwc_otg_core_if_t * core_if);
1088:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
1089:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1090:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /* Macro used to clear one channel interrupt */
1091:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define clear_hc_int(_hc_regs_, _intr_) \
1092:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** do { \
1093:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hcint_data_t hcint_clear = {.d32 = 0}; \
1094:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hcint_clear.b._intr_ = 1; \
1095:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_WRITE_REG32(&(_hc_regs_)->hcint, hcint_clear.d32); \
1096:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } while (0)
1097:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1098:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1099:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1100:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /*
1101:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Macro used to disable one channel interrupt. Channel interrupts are
1102:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * disabled when the channel is halted or released by the interrupt handler.
1103:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * There is no need to handle further interrupts of that type until the
1104:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * channel is re-assigned. In fact, subsequent handling may cause crashes
1105:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * because the channel structures are cleaned up when the channel is released.
1106:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1107:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #define disable_hc_int(_hc_regs_, _intr_) \
1108:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** do { \
1109:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hcintmsk_data_t hcintmsk = {.d32 = 0}; \
1110:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hcintmsk.b._intr_ = 1; \
1111:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	DWC_MODIFY_REG32(&(_hc_regs_)->hcintmsk, hcintmsk.d32, 0); \
1112:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } while (0)
1113:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1114:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1115:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This function Reads HPRT0 in preparation to modify. It keeps the
1116:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * WC bits 0 so that if they are read as 1, they won't clear when you
1117:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * write it back
1118:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1119:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline uint32_t dwc_otg_read_hprt0(dwc_otg_core_if_t * _core_if)
1120:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
  27              		.loc 1 1120 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 84B0     		sub	sp, sp, #16
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 24
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
1121:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hprt0_data_t hprt0;
1122:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hprt0.d32 = DWC_READ_REG32(_core_if->host_if->hprt0);
  43              		.loc 1 1122 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a DB68     		ldr	r3, [r3, #12]
  46 000c 5B68     		ldr	r3, [r3, #4]
  47 000e 1846     		mov	r0, r3
  48 0010 FFF7FEFF 		bl	DWC_READ_REG32
  49 0014 0346     		mov	r3, r0
  50 0016 FB60     		str	r3, [r7, #12]
1123:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hprt0.b.prtena = 0;
  51              		.loc 1 1123 0
  52 0018 FB68     		ldr	r3, [r7, #12]
  53 001a 6FF38203 		bfc	r3, #2, #1
  54 001e FB60     		str	r3, [r7, #12]
1124:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hprt0.b.prtconndet = 0;
  55              		.loc 1 1124 0
  56 0020 FB68     		ldr	r3, [r7, #12]
  57 0022 6FF34103 		bfc	r3, #1, #1
  58 0026 FB60     		str	r3, [r7, #12]
1125:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hprt0.b.prtenchng = 0;
  59              		.loc 1 1125 0
  60 0028 FB68     		ldr	r3, [r7, #12]
  61 002a 6FF3C303 		bfc	r3, #3, #1
  62 002e FB60     		str	r3, [r7, #12]
1126:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	hprt0.b.prtovrcurrchng = 0;
  63              		.loc 1 1126 0
  64 0030 FB68     		ldr	r3, [r7, #12]
  65 0032 6FF34513 		bfc	r3, #5, #1
  66 0036 FB60     		str	r3, [r7, #12]
1127:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	return hprt0.d32;
  67              		.loc 1 1127 0
  68 0038 FB68     		ldr	r3, [r7, #12]
1128:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
  69              		.loc 1 1128 0
  70 003a 1846     		mov	r0, r3
  71 003c 07F11007 		add	r7, r7, #16
  72 0040 BD46     		mov	sp, r7
  73 0042 80BD     		pop	{r7, pc}
  74              		.cfi_endproc
  75              	.LFE1:
  77              		.section	.text.cil_hcd_start,"ax",%progbits
  78              		.align	2
  79              		.thumb
  80              		.thumb_func
  82              	cil_hcd_start:
  83              	.LFB11:
1129:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1130:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**@}*/
1131:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1132:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** @name Common CIL Functions
1133:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * The following functions support managing the DWC_otg controller in either
1134:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * device or host mode.
1135:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1136:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**@{*/
1137:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1138:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_read_packet(dwc_otg_core_if_t * core_if,
1139:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				uint8_t * dest, uint16_t bytes);
1140:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1141:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_flush_tx_fifo(dwc_otg_core_if_t * _core_if, const int _num);
1142:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_flush_rx_fifo(dwc_otg_core_if_t * _core_if);
1143:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_core_reset(dwc_otg_core_if_t * _core_if);
1144:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1145:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1146:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This function returns the Core Interrupt register.
1147:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1148:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline uint32_t dwc_otg_read_core_intr(dwc_otg_core_if_t * core_if)
1149:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1150:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	return (DWC_READ_REG32(&core_if->core_global_regs->gintsts) &
1151:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		DWC_READ_REG32(&core_if->core_global_regs->gintmsk));
1152:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1153:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1154:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1155:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This function returns the OTG Interrupt register.
1156:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1157:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline uint32_t dwc_otg_read_otg_intr(dwc_otg_core_if_t * core_if)
1158:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1159:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	return (DWC_READ_REG32(&core_if->core_global_regs->gotgint));
1160:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1161:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1162:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1163:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This function reads the Device All Endpoints Interrupt register and
1164:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * returns the IN endpoint interrupt bits.
1165:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1166:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline uint32_t dwc_otg_read_dev_all_in_ep_intr(dwc_otg_core_if_t *
1167:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 						       core_if)
1168:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1169:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1170:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t v;
1171:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1172:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->multiproc_int_enable) {
1173:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		v = DWC_READ_REG32(&core_if->dev_if->
1174:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   dev_global_regs->deachint) &
1175:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		    DWC_READ_REG32(&core_if->
1176:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   dev_if->dev_global_regs->deachintmsk);
1177:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	} else {
1178:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		v = DWC_READ_REG32(&core_if->dev_if->dev_global_regs->daint) &
1179:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		    DWC_READ_REG32(&core_if->dev_if->dev_global_regs->daintmsk);
1180:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1181:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	return (v & 0xffff);
1182:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1183:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1184:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1185:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This function reads the Device All Endpoints Interrupt register and
1186:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * returns the OUT endpoint interrupt bits.
1187:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1188:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline uint32_t dwc_otg_read_dev_all_out_ep_intr(dwc_otg_core_if_t *
1189:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 							core_if)
1190:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1191:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t v;
1192:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1193:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->multiproc_int_enable) {
1194:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		v = DWC_READ_REG32(&core_if->dev_if->
1195:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   dev_global_regs->deachint) &
1196:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		    DWC_READ_REG32(&core_if->
1197:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   dev_if->dev_global_regs->deachintmsk);
1198:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	} else {
1199:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		v = DWC_READ_REG32(&core_if->dev_if->dev_global_regs->daint) &
1200:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		    DWC_READ_REG32(&core_if->dev_if->dev_global_regs->daintmsk);
1201:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1202:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1203:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	return ((v & 0xffff0000) >> 16);
1204:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1205:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1206:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1207:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This function returns the Device IN EP Interrupt register
1208:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1209:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline uint32_t dwc_otg_read_dev_in_ep_intr(dwc_otg_core_if_t * core_if,
1210:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 						   dwc_ep_t * ep)
1211:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1212:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_dev_if_t *dev_if = core_if->dev_if;
1213:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t v, msk, emp;
1214:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1215:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->multiproc_int_enable) {
1216:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		msk =
1217:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		    DWC_READ_REG32(&dev_if->
1218:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   dev_global_regs->diepeachintmsk[ep->num]);
1219:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		emp =
1220:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		    DWC_READ_REG32(&dev_if->
1221:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   dev_global_regs->dtknqr4_fifoemptymsk);
1222:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		msk |= ((emp >> ep->num) & 0x1) << 7;
1223:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		v = DWC_READ_REG32(&dev_if->in_ep_regs[ep->num]->diepint) & msk;
1224:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	} else {
1225:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		msk = DWC_READ_REG32(&dev_if->dev_global_regs->diepmsk);
1226:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		emp =
1227:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		    DWC_READ_REG32(&dev_if->
1228:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   dev_global_regs->dtknqr4_fifoemptymsk);
1229:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		msk |= ((emp >> ep->num) & 0x1) << 7;
1230:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		v = DWC_READ_REG32(&dev_if->in_ep_regs[ep->num]->diepint) & msk;
1231:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1232:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1233:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	return v;
1234:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1235:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1236:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1237:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This function returns the Device OUT EP Interrupt register
1238:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1239:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline uint32_t dwc_otg_read_dev_out_ep_intr(dwc_otg_core_if_t *
1240:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 						    _core_if, dwc_ep_t * _ep)
1241:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1242:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	dwc_otg_dev_if_t *dev_if = _core_if->dev_if;
1243:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	uint32_t v;
1244:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	//doepmsk_data_t msk = {.d32 = 0 };
1245:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	doepmsk_data_t msk;
1246:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1247:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (_core_if->multiproc_int_enable) {
1248:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		msk.d32 =
1249:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		    DWC_READ_REG32(&dev_if->
1250:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   dev_global_regs->doepeachintmsk[_ep->num]);
1251:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		if (_core_if->pti_enh_enable) {
1252:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 			msk.b.pktdrpsts = 1;
1253:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		}
1254:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		v = DWC_READ_REG32(&dev_if->
1255:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   out_ep_regs[_ep->num]->doepint) & msk.d32;
1256:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	} else {
1257:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		msk.d32 = DWC_READ_REG32(&dev_if->dev_global_regs->doepmsk);
1258:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		if (_core_if->pti_enh_enable) {
1259:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 			msk.b.pktdrpsts = 1;
1260:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		}
1261:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		v = DWC_READ_REG32(&dev_if->
1262:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 				   out_ep_regs[_ep->num]->doepint) & msk.d32;
1263:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1264:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	return v;
1265:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1266:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1267:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1268:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This function returns the Host All Channel Interrupt register
1269:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1270:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline uint32_t dwc_otg_read_host_all_channels_intr(dwc_otg_core_if_t *
1271:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 							   _core_if)
1272:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1273:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	return (DWC_READ_REG32(&_core_if->host_if->host_global_regs->haint));
1274:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1275:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1276:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline uint32_t dwc_otg_read_host_channel_intr(dwc_otg_core_if_t *
1277:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 						      _core_if, dwc_hc_t * _hc)
1278:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1279:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	return (DWC_READ_REG32
1280:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		(&_core_if->host_if->hc_regs[_hc->hc_num]->hcint));
1281:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1282:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1283:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1284:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * This function returns the mode of the operation, host or device.
1285:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
1286:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * @return 0 - Device Mode, 1 - Host Mode
1287:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1288:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline uint32_t dwc_otg_mode(dwc_otg_core_if_t * _core_if)
1289:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1290:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	return (DWC_READ_REG32(&_core_if->core_global_regs->gintsts) & 0x1);
1291:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1292:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1293:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**@}*/
1294:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1295:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1296:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * DWC_otg CIL callback structure. This structure allows the HCD and
1297:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * PCD to register functions used for starting and stopping the PCD
1298:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * and HCD for role change on for a DRD.
1299:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1300:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** typedef struct dwc_otg_cil_callbacks {
1301:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Start function for role change */
1302:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int (*start) (void *_p);
1303:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Stop Function for role change */
1304:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int (*stop) (void *_p);
1305:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Disconnect Function for role change */
1306:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int (*disconnect) (void *_p);
1307:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Resume/Remote wakeup Function */
1308:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int (*resume_wakeup) (void *_p);
1309:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Suspend function */
1310:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int (*suspend) (void *_p);
1311:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Session Start (SRP) */
1312:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int (*session_start) (void *_p);
1313:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef CONFIG_USB_DWC_OTG_LPM
1314:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Sleep (switch to L0 state) */
1315:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	int (*sleep) (void *_p);
1316:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
1317:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	/** Pointer passed to start() and stop() */
1318:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	void *p;
1319:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** } dwc_otg_cil_callbacks_t;
1320:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1321:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_cil_register_pcd_callbacks(dwc_otg_core_if_t * _core_if,
1322:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					       dwc_otg_cil_callbacks_t * _cb,
1323:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					       void *_p);
1324:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** extern void dwc_otg_cil_register_hcd_callbacks(dwc_otg_core_if_t * _core_if,
1325:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					       dwc_otg_cil_callbacks_t * _cb,
1326:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 					       void *_p);
1327:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1328:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** void dwc_otg_initiate_srp(dwc_otg_core_if_t * core_if);
1329:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1330:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** //////////////////////////////////////////////////////////////////////
1331:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Start the HCD.  Helper function for using the HCD callbacks.
1332:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
1333:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * @param core_if Programming view of DWC_otg controller.
1334:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1335:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline void cil_hcd_start(dwc_otg_core_if_t * core_if)
1336:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
  84              		.loc 1 1336 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 8
  87              		@ frame_needed = 1, uses_anonymous_args = 0
  88 0000 80B5     		push	{r7, lr}
  89              	.LCFI3:
  90              		.cfi_def_cfa_offset 8
  91              		.cfi_offset 7, -8
  92              		.cfi_offset 14, -4
  93 0002 82B0     		sub	sp, sp, #8
  94              	.LCFI4:
  95              		.cfi_def_cfa_offset 16
  96 0004 00AF     		add	r7, sp, #0
  97              	.LCFI5:
  98              		.cfi_def_cfa_register 7
  99 0006 7860     		str	r0, [r7, #4]
1337:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->hcd_cb && core_if->hcd_cb->start) {
 100              		.loc 1 1337 0
 101 0008 7B68     		ldr	r3, [r7, #4]
 102 000a 9B6E     		ldr	r3, [r3, #104]
 103 000c 002B     		cmp	r3, #0
 104 000e 0CD0     		beq	.L3
 105              		.loc 1 1337 0 is_stmt 0 discriminator 1
 106 0010 7B68     		ldr	r3, [r7, #4]
 107 0012 9B6E     		ldr	r3, [r3, #104]
 108 0014 1B68     		ldr	r3, [r3, #0]
 109 0016 002B     		cmp	r3, #0
 110 0018 07D0     		beq	.L3
1338:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		core_if->hcd_cb->start(core_if->hcd_cb->p);
 111              		.loc 1 1338 0 is_stmt 1
 112 001a 7B68     		ldr	r3, [r7, #4]
 113 001c 9B6E     		ldr	r3, [r3, #104]
 114 001e 1B68     		ldr	r3, [r3, #0]
 115 0020 7A68     		ldr	r2, [r7, #4]
 116 0022 926E     		ldr	r2, [r2, #104]
 117 0024 9269     		ldr	r2, [r2, #24]
 118 0026 1046     		mov	r0, r2
 119 0028 9847     		blx	r3
 120              	.L3:
1339:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1340:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
 121              		.loc 1 1340 0
 122 002a 07F10807 		add	r7, r7, #8
 123 002e BD46     		mov	sp, r7
 124 0030 80BD     		pop	{r7, pc}
 125              		.cfi_endproc
 126              	.LFE11:
 128 0032 00BF     		.section	.text.cil_hcd_disconnect,"ax",%progbits
 129              		.align	2
 130              		.thumb
 131              		.thumb_func
 133              	cil_hcd_disconnect:
 134              	.LFB13:
1341:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1342:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Stop the HCD.  Helper function for using the HCD callbacks.
1343:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
1344:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * @param core_if Programming view of DWC_otg controller.
1345:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1346:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline void cil_hcd_stop(dwc_otg_core_if_t * core_if)
1347:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1348:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->hcd_cb && core_if->hcd_cb->stop) {
1349:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		core_if->hcd_cb->stop(core_if->hcd_cb->p);
1350:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1351:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1352:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1353:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Disconnect the HCD.  Helper function for using the HCD callbacks.
1354:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
1355:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * @param core_if Programming view of DWC_otg controller.
1356:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1357:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline void cil_hcd_disconnect(dwc_otg_core_if_t * core_if)
1358:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
 135              		.loc 1 1358 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 8
 138              		@ frame_needed = 1, uses_anonymous_args = 0
 139 0000 80B5     		push	{r7, lr}
 140              	.LCFI6:
 141              		.cfi_def_cfa_offset 8
 142              		.cfi_offset 7, -8
 143              		.cfi_offset 14, -4
 144 0002 82B0     		sub	sp, sp, #8
 145              	.LCFI7:
 146              		.cfi_def_cfa_offset 16
 147 0004 00AF     		add	r7, sp, #0
 148              	.LCFI8:
 149              		.cfi_def_cfa_register 7
 150 0006 7860     		str	r0, [r7, #4]
1359:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->hcd_cb && core_if->hcd_cb->disconnect) {
 151              		.loc 1 1359 0
 152 0008 7B68     		ldr	r3, [r7, #4]
 153 000a 9B6E     		ldr	r3, [r3, #104]
 154 000c 002B     		cmp	r3, #0
 155 000e 0CD0     		beq	.L5
 156              		.loc 1 1359 0 is_stmt 0 discriminator 1
 157 0010 7B68     		ldr	r3, [r7, #4]
 158 0012 9B6E     		ldr	r3, [r3, #104]
 159 0014 9B68     		ldr	r3, [r3, #8]
 160 0016 002B     		cmp	r3, #0
 161 0018 07D0     		beq	.L5
1360:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		core_if->hcd_cb->disconnect(core_if->hcd_cb->p);
 162              		.loc 1 1360 0 is_stmt 1
 163 001a 7B68     		ldr	r3, [r7, #4]
 164 001c 9B6E     		ldr	r3, [r3, #104]
 165 001e 9B68     		ldr	r3, [r3, #8]
 166 0020 7A68     		ldr	r2, [r7, #4]
 167 0022 926E     		ldr	r2, [r2, #104]
 168 0024 9269     		ldr	r2, [r2, #24]
 169 0026 1046     		mov	r0, r2
 170 0028 9847     		blx	r3
 171              	.L5:
1361:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1362:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
 172              		.loc 1 1362 0
 173 002a 07F10807 		add	r7, r7, #8
 174 002e BD46     		mov	sp, r7
 175 0030 80BD     		pop	{r7, pc}
 176              		.cfi_endproc
 177              	.LFE13:
 179 0032 00BF     		.section	.text.cil_hcd_session_start,"ax",%progbits
 180              		.align	2
 181              		.thumb
 182              		.thumb_func
 184              	cil_hcd_session_start:
 185              	.LFB14:
1363:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1364:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Inform the HCD the a New Session has begun.  Helper function for
1365:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * using the HCD callbacks.
1366:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
1367:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * @param core_if Programming view of DWC_otg controller.
1368:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1369:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline void cil_hcd_session_start(dwc_otg_core_if_t * core_if)
1370:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
 186              		.loc 1 1370 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 8
 189              		@ frame_needed = 1, uses_anonymous_args = 0
 190 0000 80B5     		push	{r7, lr}
 191              	.LCFI9:
 192              		.cfi_def_cfa_offset 8
 193              		.cfi_offset 7, -8
 194              		.cfi_offset 14, -4
 195 0002 82B0     		sub	sp, sp, #8
 196              	.LCFI10:
 197              		.cfi_def_cfa_offset 16
 198 0004 00AF     		add	r7, sp, #0
 199              	.LCFI11:
 200              		.cfi_def_cfa_register 7
 201 0006 7860     		str	r0, [r7, #4]
1371:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->hcd_cb && core_if->hcd_cb->session_start) {
 202              		.loc 1 1371 0
 203 0008 7B68     		ldr	r3, [r7, #4]
 204 000a 9B6E     		ldr	r3, [r3, #104]
 205 000c 002B     		cmp	r3, #0
 206 000e 0CD0     		beq	.L7
 207              		.loc 1 1371 0 is_stmt 0 discriminator 1
 208 0010 7B68     		ldr	r3, [r7, #4]
 209 0012 9B6E     		ldr	r3, [r3, #104]
 210 0014 5B69     		ldr	r3, [r3, #20]
 211 0016 002B     		cmp	r3, #0
 212 0018 07D0     		beq	.L7
1372:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		core_if->hcd_cb->session_start(core_if->hcd_cb->p);
 213              		.loc 1 1372 0 is_stmt 1
 214 001a 7B68     		ldr	r3, [r7, #4]
 215 001c 9B6E     		ldr	r3, [r3, #104]
 216 001e 5B69     		ldr	r3, [r3, #20]
 217 0020 7A68     		ldr	r2, [r7, #4]
 218 0022 926E     		ldr	r2, [r2, #104]
 219 0024 9269     		ldr	r2, [r2, #24]
 220 0026 1046     		mov	r0, r2
 221 0028 9847     		blx	r3
 222              	.L7:
1373:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1374:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
 223              		.loc 1 1374 0
 224 002a 07F10807 		add	r7, r7, #8
 225 002e BD46     		mov	sp, r7
 226 0030 80BD     		pop	{r7, pc}
 227              		.cfi_endproc
 228              	.LFE14:
 230 0032 00BF     		.section	.text.cil_hcd_resume,"ax",%progbits
 231              		.align	2
 232              		.thumb
 233              		.thumb_func
 235              	cil_hcd_resume:
 236              	.LFB15:
1375:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1376:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #ifdef CONFIG_USB_DWC_OTG_LPM
1377:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /**
1378:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Inform the HCD about LPM sleep.
1379:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * Helper function for using the HCD callbacks.
1380:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
1381:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * @param core_if Programming view of DWC_otg controller.
1382:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1383:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline void cil_hcd_sleep(dwc_otg_core_if_t * core_if)
1384:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
1385:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->hcd_cb && core_if->hcd_cb->sleep) {
1386:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		core_if->hcd_cb->sleep(core_if->hcd_cb->p);
1387:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1388:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
1389:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** #endif
1390:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1391:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Resume the HCD.  Helper function for using the HCD callbacks.
1392:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
1393:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * @param core_if Programming view of DWC_otg controller.
1394:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1395:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline void cil_hcd_resume(dwc_otg_core_if_t * core_if)
1396:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
 237              		.loc 1 1396 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 8
 240              		@ frame_needed = 1, uses_anonymous_args = 0
 241 0000 80B5     		push	{r7, lr}
 242              	.LCFI12:
 243              		.cfi_def_cfa_offset 8
 244              		.cfi_offset 7, -8
 245              		.cfi_offset 14, -4
 246 0002 82B0     		sub	sp, sp, #8
 247              	.LCFI13:
 248              		.cfi_def_cfa_offset 16
 249 0004 00AF     		add	r7, sp, #0
 250              	.LCFI14:
 251              		.cfi_def_cfa_register 7
 252 0006 7860     		str	r0, [r7, #4]
1397:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->hcd_cb && core_if->hcd_cb->resume_wakeup) {
 253              		.loc 1 1397 0
 254 0008 7B68     		ldr	r3, [r7, #4]
 255 000a 9B6E     		ldr	r3, [r3, #104]
 256 000c 002B     		cmp	r3, #0
 257 000e 0CD0     		beq	.L9
 258              		.loc 1 1397 0 is_stmt 0 discriminator 1
 259 0010 7B68     		ldr	r3, [r7, #4]
 260 0012 9B6E     		ldr	r3, [r3, #104]
 261 0014 DB68     		ldr	r3, [r3, #12]
 262 0016 002B     		cmp	r3, #0
 263 0018 07D0     		beq	.L9
1398:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		core_if->hcd_cb->resume_wakeup(core_if->hcd_cb->p);
 264              		.loc 1 1398 0 is_stmt 1
 265 001a 7B68     		ldr	r3, [r7, #4]
 266 001c 9B6E     		ldr	r3, [r3, #104]
 267 001e DB68     		ldr	r3, [r3, #12]
 268 0020 7A68     		ldr	r2, [r7, #4]
 269 0022 926E     		ldr	r2, [r2, #104]
 270 0024 9269     		ldr	r2, [r2, #24]
 271 0026 1046     		mov	r0, r2
 272 0028 9847     		blx	r3
 273              	.L9:
1399:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1400:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
 274              		.loc 1 1400 0
 275 002a 07F10807 		add	r7, r7, #8
 276 002e BD46     		mov	sp, r7
 277 0030 80BD     		pop	{r7, pc}
 278              		.cfi_endproc
 279              	.LFE15:
 281 0032 00BF     		.section	.text.cil_pcd_start,"ax",%progbits
 282              		.align	2
 283              		.thumb
 284              		.thumb_func
 286              	cil_pcd_start:
 287              	.LFB16:
1401:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1402:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Start the PCD.  Helper function for using the PCD callbacks.
1403:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
1404:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * @param core_if Programming view of DWC_otg controller.
1405:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1406:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline void cil_pcd_start(dwc_otg_core_if_t * core_if)
1407:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
 288              		.loc 1 1407 0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 8
 291              		@ frame_needed = 1, uses_anonymous_args = 0
 292 0000 80B5     		push	{r7, lr}
 293              	.LCFI15:
 294              		.cfi_def_cfa_offset 8
 295              		.cfi_offset 7, -8
 296              		.cfi_offset 14, -4
 297 0002 82B0     		sub	sp, sp, #8
 298              	.LCFI16:
 299              		.cfi_def_cfa_offset 16
 300 0004 00AF     		add	r7, sp, #0
 301              	.LCFI17:
 302              		.cfi_def_cfa_register 7
 303 0006 7860     		str	r0, [r7, #4]
1408:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->pcd_cb && core_if->pcd_cb->start) {
 304              		.loc 1 1408 0
 305 0008 7B68     		ldr	r3, [r7, #4]
 306 000a DB6E     		ldr	r3, [r3, #108]
 307 000c 002B     		cmp	r3, #0
 308 000e 0CD0     		beq	.L11
 309              		.loc 1 1408 0 is_stmt 0 discriminator 1
 310 0010 7B68     		ldr	r3, [r7, #4]
 311 0012 DB6E     		ldr	r3, [r3, #108]
 312 0014 1B68     		ldr	r3, [r3, #0]
 313 0016 002B     		cmp	r3, #0
 314 0018 07D0     		beq	.L11
1409:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		core_if->pcd_cb->start(core_if->pcd_cb->p);
 315              		.loc 1 1409 0 is_stmt 1
 316 001a 7B68     		ldr	r3, [r7, #4]
 317 001c DB6E     		ldr	r3, [r3, #108]
 318 001e 1B68     		ldr	r3, [r3, #0]
 319 0020 7A68     		ldr	r2, [r7, #4]
 320 0022 D26E     		ldr	r2, [r2, #108]
 321 0024 9269     		ldr	r2, [r2, #24]
 322 0026 1046     		mov	r0, r2
 323 0028 9847     		blx	r3
 324              	.L11:
1410:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1411:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
 325              		.loc 1 1411 0
 326 002a 07F10807 		add	r7, r7, #8
 327 002e BD46     		mov	sp, r7
 328 0030 80BD     		pop	{r7, pc}
 329              		.cfi_endproc
 330              	.LFE16:
 332 0032 00BF     		.section	.text.cil_pcd_stop,"ax",%progbits
 333              		.align	2
 334              		.thumb
 335              		.thumb_func
 337              	cil_pcd_stop:
 338              	.LFB17:
1412:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1413:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Stop the PCD.  Helper function for using the PCD callbacks.
1414:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
1415:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * @param core_if Programming view of DWC_otg controller.
1416:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1417:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline void cil_pcd_stop(dwc_otg_core_if_t * core_if)
1418:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
 339              		.loc 1 1418 0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 8
 342              		@ frame_needed = 1, uses_anonymous_args = 0
 343 0000 80B5     		push	{r7, lr}
 344              	.LCFI18:
 345              		.cfi_def_cfa_offset 8
 346              		.cfi_offset 7, -8
 347              		.cfi_offset 14, -4
 348 0002 82B0     		sub	sp, sp, #8
 349              	.LCFI19:
 350              		.cfi_def_cfa_offset 16
 351 0004 00AF     		add	r7, sp, #0
 352              	.LCFI20:
 353              		.cfi_def_cfa_register 7
 354 0006 7860     		str	r0, [r7, #4]
1419:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->pcd_cb && core_if->pcd_cb->stop) {
 355              		.loc 1 1419 0
 356 0008 7B68     		ldr	r3, [r7, #4]
 357 000a DB6E     		ldr	r3, [r3, #108]
 358 000c 002B     		cmp	r3, #0
 359 000e 0CD0     		beq	.L13
 360              		.loc 1 1419 0 is_stmt 0 discriminator 1
 361 0010 7B68     		ldr	r3, [r7, #4]
 362 0012 DB6E     		ldr	r3, [r3, #108]
 363 0014 5B68     		ldr	r3, [r3, #4]
 364 0016 002B     		cmp	r3, #0
 365 0018 07D0     		beq	.L13
1420:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		core_if->pcd_cb->stop(core_if->pcd_cb->p);
 366              		.loc 1 1420 0 is_stmt 1
 367 001a 7B68     		ldr	r3, [r7, #4]
 368 001c DB6E     		ldr	r3, [r3, #108]
 369 001e 5B68     		ldr	r3, [r3, #4]
 370 0020 7A68     		ldr	r2, [r7, #4]
 371 0022 D26E     		ldr	r2, [r2, #108]
 372 0024 9269     		ldr	r2, [r2, #24]
 373 0026 1046     		mov	r0, r2
 374 0028 9847     		blx	r3
 375              	.L13:
1421:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1422:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
 376              		.loc 1 1422 0
 377 002a 07F10807 		add	r7, r7, #8
 378 002e BD46     		mov	sp, r7
 379 0030 80BD     		pop	{r7, pc}
 380              		.cfi_endproc
 381              	.LFE17:
 383 0032 00BF     		.section	.text.cil_pcd_suspend,"ax",%progbits
 384              		.align	2
 385              		.thumb
 386              		.thumb_func
 388              	cil_pcd_suspend:
 389              	.LFB18:
1423:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1424:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Suspend the PCD.  Helper function for using the PCD callbacks.
1425:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
1426:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * @param core_if Programming view of DWC_otg controller.
1427:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1428:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline void cil_pcd_suspend(dwc_otg_core_if_t * core_if)
1429:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
 390              		.loc 1 1429 0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 8
 393              		@ frame_needed = 1, uses_anonymous_args = 0
 394 0000 80B5     		push	{r7, lr}
 395              	.LCFI21:
 396              		.cfi_def_cfa_offset 8
 397              		.cfi_offset 7, -8
 398              		.cfi_offset 14, -4
 399 0002 82B0     		sub	sp, sp, #8
 400              	.LCFI22:
 401              		.cfi_def_cfa_offset 16
 402 0004 00AF     		add	r7, sp, #0
 403              	.LCFI23:
 404              		.cfi_def_cfa_register 7
 405 0006 7860     		str	r0, [r7, #4]
1430:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->pcd_cb && core_if->pcd_cb->suspend) {
 406              		.loc 1 1430 0
 407 0008 7B68     		ldr	r3, [r7, #4]
 408 000a DB6E     		ldr	r3, [r3, #108]
 409 000c 002B     		cmp	r3, #0
 410 000e 0CD0     		beq	.L15
 411              		.loc 1 1430 0 is_stmt 0 discriminator 1
 412 0010 7B68     		ldr	r3, [r7, #4]
 413 0012 DB6E     		ldr	r3, [r3, #108]
 414 0014 1B69     		ldr	r3, [r3, #16]
 415 0016 002B     		cmp	r3, #0
 416 0018 07D0     		beq	.L15
1431:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		core_if->pcd_cb->suspend(core_if->pcd_cb->p);
 417              		.loc 1 1431 0 is_stmt 1
 418 001a 7B68     		ldr	r3, [r7, #4]
 419 001c DB6E     		ldr	r3, [r3, #108]
 420 001e 1B69     		ldr	r3, [r3, #16]
 421 0020 7A68     		ldr	r2, [r7, #4]
 422 0022 D26E     		ldr	r2, [r2, #108]
 423 0024 9269     		ldr	r2, [r2, #24]
 424 0026 1046     		mov	r0, r2
 425 0028 9847     		blx	r3
 426              	.L15:
1432:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1433:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
 427              		.loc 1 1433 0
 428 002a 07F10807 		add	r7, r7, #8
 429 002e BD46     		mov	sp, r7
 430 0030 80BD     		pop	{r7, pc}
 431              		.cfi_endproc
 432              	.LFE18:
 434 0032 00BF     		.section	.text.cil_pcd_resume,"ax",%progbits
 435              		.align	2
 436              		.thumb
 437              		.thumb_func
 439              	cil_pcd_resume:
 440              	.LFB19:
1434:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 
1435:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** /** Resume the PCD.  Helper function for using the PCD callbacks.
1436:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  *
1437:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  * @param core_if Programming view of DWC_otg controller.
1438:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h ****  */
1439:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** static inline void cil_pcd_resume(dwc_otg_core_if_t * core_if)
1440:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** {
 441              		.loc 1 1440 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 8
 444              		@ frame_needed = 1, uses_anonymous_args = 0
 445 0000 80B5     		push	{r7, lr}
 446              	.LCFI24:
 447              		.cfi_def_cfa_offset 8
 448              		.cfi_offset 7, -8
 449              		.cfi_offset 14, -4
 450 0002 82B0     		sub	sp, sp, #8
 451              	.LCFI25:
 452              		.cfi_def_cfa_offset 16
 453 0004 00AF     		add	r7, sp, #0
 454              	.LCFI26:
 455              		.cfi_def_cfa_register 7
 456 0006 7860     		str	r0, [r7, #4]
1441:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	if (core_if->pcd_cb && core_if->pcd_cb->resume_wakeup) {
 457              		.loc 1 1441 0
 458 0008 7B68     		ldr	r3, [r7, #4]
 459 000a DB6E     		ldr	r3, [r3, #108]
 460 000c 002B     		cmp	r3, #0
 461 000e 0CD0     		beq	.L17
 462              		.loc 1 1441 0 is_stmt 0 discriminator 1
 463 0010 7B68     		ldr	r3, [r7, #4]
 464 0012 DB6E     		ldr	r3, [r3, #108]
 465 0014 DB68     		ldr	r3, [r3, #12]
 466 0016 002B     		cmp	r3, #0
 467 0018 07D0     		beq	.L17
1442:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 		core_if->pcd_cb->resume_wakeup(core_if->pcd_cb->p);
 468              		.loc 1 1442 0 is_stmt 1
 469 001a 7B68     		ldr	r3, [r7, #4]
 470 001c DB6E     		ldr	r3, [r3, #108]
 471 001e DB68     		ldr	r3, [r3, #12]
 472 0020 7A68     		ldr	r2, [r7, #4]
 473 0022 D26E     		ldr	r2, [r2, #108]
 474 0024 9269     		ldr	r2, [r2, #24]
 475 0026 1046     		mov	r0, r2
 476 0028 9847     		blx	r3
 477              	.L17:
1443:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** 	}
1444:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil.h **** }
 478              		.loc 1 1444 0
 479 002a 07F10807 		add	r7, r7, #8
 480 002e BD46     		mov	sp, r7
 481 0030 80BD     		pop	{r7, pc}
 482              		.cfi_endproc
 483              	.LFE19:
 485 0032 00BF     		.section	.text.dwc_otg_handle_mode_mismatch_intr,"ax",%progbits
 486              		.align	2
 487              		.global	dwc_otg_handle_mode_mismatch_intr
 488              		.thumb
 489              		.thumb_func
 491              	dwc_otg_handle_mode_mismatch_intr:
 492              	.LFB20:
 493              		.file 2 "../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c"
   1:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** /*******************************************************************************
   2:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  Copyright (c) 2011, Infineon Technologies AG                                 **
   3:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  All rights reserved.                                                         **
   4:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****                                                                               **
   5:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  Redistribution and use in source and binary forms, with or without           **
   6:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  modification,are permitted provided that the following conditions are met:   **
   7:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****                                                                               **
   8:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  *Redistributions of source code must retain the above copyright notice,      **
   9:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  this list of conditions and the following disclaimer.                        **
  10:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  *Redistributions in binary form must reproduce the above copyright notice,   **
  11:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  this list of conditions and the following disclaimer in the documentation    **
  12:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  and/or other materials provided with the distribution.                       **
  13:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  *Neither the name of the copyright holders nor the names of its contributors **
  14:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  may be used to endorse or promote products derived from this software without**
  15:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  specific prior written permission.                                           **
  16:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****                                                                               **
  17:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  **
  18:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    **
  19:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   **
  20:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   **
  21:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         **
  22:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         **
  23:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    **
  24:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      **
  25:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       **
  26:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   **
  27:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  POSSIBILITY OF SUCH DAMAGE.                                                  **
  28:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****                                                                               **
  29:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  To improve the quality of the software, users are encouraged to share        **
  30:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  modifications, enhancements or bug fixes with Infineon Technologies AG       **
  31:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  dave@infineon.com).                                                          **
  32:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****                                                                               **
  33:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** ********************************************************************************
  34:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** **                                                                            **
  35:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** **                                                                            **
  36:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** ** PLATFORM : Infineon XMC4000 Series                                         **
  37:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** **                                                                            **
  38:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** ** COMPILER : Compiler Independent                                            **
  39:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** **                                                                            **
  40:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** ** AUTHOR : App Developer                                                     **
  41:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** **                                                                            **
  42:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** ** MAY BE CHANGED BY USER [yes/no]: Yes                                       **
  43:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** **                                                                            **
  44:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** ** MODIFICATION DATE : Apr 8, 2012                                           **
  45:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** **                                                                            **
  46:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** *******************************************************************************/
  47:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
  48:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** /*******************************************************************************
  49:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** **                       Author(s) Identity                                   **
  50:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** ********************************************************************************
  51:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** **                                                                            **
  52:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** ** Initials    Name                                                           **
  53:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** ** ---------------------------------------------------------------------------**
  54:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** ** CM          App Developer                                                  **
  55:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** *******************************************************************************/
  56:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
  57:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
  58:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
  59:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** /** @file
  60:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  *
  61:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * The Core Interface Layer provides basic services for accessing and
  62:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * managing the DWC_otg hardware. These services are used by both the
  63:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * Host Controller Driver and the Peripheral Controller Driver.
  64:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  *
  65:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * This file contains the Common Interrupt handlers.
  66:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  */
  67:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** #include "../type_CM.h"
  68:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** #include "../dwc_common_port/dwc_os.h"
  69:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** #include "dwc_otg_regs.h"
  70:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** #include "dwc_otg_cil.h"
  71:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
  72:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
  73:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** #ifdef DEBUG
  74:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** inline const char *op_state_str(dwc_otg_core_if_t * core_if)
  75:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** {
  76:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	return (core_if->op_state == A_HOST ? "a_host" :
  77:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		(core_if->op_state == A_SUSPEND ? "a_suspend" :
  78:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		 (core_if->op_state == A_PERIPHERAL ? "a_peripheral" :
  79:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		  (core_if->op_state == B_PERIPHERAL ? "b_peripheral" :
  80:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		   (core_if->op_state == B_HOST ? "b_host" : "unknown")))));
  81:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** }
  82:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** #endif
  83:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
  84:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** /** This function will log a debug message
  85:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  *
  86:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * @param core_if Programming view of DWC_otg controller.
  87:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  */
  88:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** int32_t dwc_otg_handle_mode_mismatch_intr(dwc_otg_core_if_t * core_if)
  89:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** {
 494              		.loc 2 89 0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 16
 497              		@ frame_needed = 1, uses_anonymous_args = 0
 498 0000 80B5     		push	{r7, lr}
 499              	.LCFI27:
 500              		.cfi_def_cfa_offset 8
 501              		.cfi_offset 7, -8
 502              		.cfi_offset 14, -4
 503 0002 84B0     		sub	sp, sp, #16
 504              	.LCFI28:
 505              		.cfi_def_cfa_offset 24
 506 0004 00AF     		add	r7, sp, #0
 507              	.LCFI29:
 508              		.cfi_def_cfa_register 7
 509 0006 7860     		str	r0, [r7, #4]
  90:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintsts_data_t gintsts;
  91:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_WARN("Mode Mismatch Interrupt: currently in %s mode\n",
  92:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		 dwc_otg_mode(core_if) ? "Host" : "Device");
  93:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
  94:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Clear interrupt */
  95:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintsts.d32 = 0;
 510              		.loc 2 95 0
 511 0008 4FF00003 		mov	r3, #0
 512 000c FB60     		str	r3, [r7, #12]
  96:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintsts.b.modemismatch = 1;
 513              		.loc 2 96 0
 514 000e FB68     		ldr	r3, [r7, #12]
 515 0010 43F00203 		orr	r3, r3, #2
 516 0014 FB60     		str	r3, [r7, #12]
  97:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_WRITE_REG32(&core_if->core_global_regs->gintsts, gintsts.d32);
 517              		.loc 2 97 0
 518 0016 7B68     		ldr	r3, [r7, #4]
 519 0018 5B68     		ldr	r3, [r3, #4]
 520 001a 03F11402 		add	r2, r3, #20
 521 001e FB68     		ldr	r3, [r7, #12]
 522 0020 1046     		mov	r0, r2
 523 0022 1946     		mov	r1, r3
 524 0024 FFF7FEFF 		bl	DWC_WRITE_REG32
  98:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	return 1;
 525              		.loc 2 98 0
 526 0028 4FF00103 		mov	r3, #1
  99:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** }
 527              		.loc 2 99 0
 528 002c 1846     		mov	r0, r3
 529 002e 07F11007 		add	r7, r7, #16
 530 0032 BD46     		mov	sp, r7
 531 0034 80BD     		pop	{r7, pc}
 532              		.cfi_endproc
 533              	.LFE20:
 535 0036 00BF     		.section	.text.dwc_otg_handle_otg_intr,"ax",%progbits
 536              		.align	2
 537              		.global	dwc_otg_handle_otg_intr
 538              		.thumb
 539              		.thumb_func
 541              	dwc_otg_handle_otg_intr:
 542              	.LFB21:
 100:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 101:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** /**
 102:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * This function handles the OTG Interrupts. It reads the OTG
 103:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * Interrupt Register (GOTGINT) to determine what interrupt has
 104:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * occurred.
 105:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  *
 106:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * @param core_if Programming view of DWC_otg controller.
 107:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  */
 108:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** int32_t dwc_otg_handle_otg_intr(dwc_otg_core_if_t * core_if)
 109:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** {
 543              		.loc 2 109 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 32
 546              		@ frame_needed = 1, uses_anonymous_args = 0
 547 0000 80B5     		push	{r7, lr}
 548              	.LCFI30:
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 7, -8
 551              		.cfi_offset 14, -4
 552 0002 88B0     		sub	sp, sp, #32
 553              	.LCFI31:
 554              		.cfi_def_cfa_offset 40
 555 0004 00AF     		add	r7, sp, #0
 556              	.LCFI32:
 557              		.cfi_def_cfa_register 7
 558 0006 7860     		str	r0, [r7, #4]
 110:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	dwc_otg_core_global_regs_t *global_regs = core_if->core_global_regs;
 559              		.loc 2 110 0
 560 0008 7B68     		ldr	r3, [r7, #4]
 561 000a 5B68     		ldr	r3, [r3, #4]
 562 000c FB61     		str	r3, [r7, #28]
 111:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gotgint_data_t gotgint;
 112:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gotgctl_data_t gotgctl;
 113:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintmsk_data_t gintmsk;
 114:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn_data_t gpwrdn;
 115:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 116:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gotgint.d32 = DWC_READ_REG32(&global_regs->gotgint);
 563              		.loc 2 116 0
 564 000e FB69     		ldr	r3, [r7, #28]
 565 0010 03F10403 		add	r3, r3, #4
 566 0014 1846     		mov	r0, r3
 567 0016 FFF7FEFF 		bl	DWC_READ_REG32
 568 001a 0346     		mov	r3, r0
 569 001c BB61     		str	r3, [r7, #24]
 117:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gotgctl.d32 = DWC_READ_REG32(&global_regs->gotgctl);
 570              		.loc 2 117 0
 571 001e FB69     		ldr	r3, [r7, #28]
 572 0020 1846     		mov	r0, r3
 573 0022 FFF7FEFF 		bl	DWC_READ_REG32
 574 0026 0346     		mov	r3, r0
 575 0028 7B61     		str	r3, [r7, #20]
 118:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_DEBUGPL(DBG_CIL, "++OTG Interrupt gotgint=%0x [%s]\n", gotgint.d32,
 119:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		    op_state_str(core_if));
 120:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 121:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (gotgint.b.sesenddet) {
 576              		.loc 2 121 0
 577 002a 3B7E     		ldrb	r3, [r7, #24]	@ zero_extendqisi2
 578 002c 03F00403 		and	r3, r3, #4
 579 0030 DBB2     		uxtb	r3, r3
 580 0032 002B     		cmp	r3, #0
 581 0034 67D0     		beq	.L22
 122:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_DEBUGPL(DBG_ANY, " ++OTG Interrupt: "
 123:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			    "Session End Detected++ (%s)\n",
 124:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			    op_state_str(core_if));
 125:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		gotgctl.d32 = DWC_READ_REG32(&global_regs->gotgctl);
 582              		.loc 2 125 0
 583 0036 FB69     		ldr	r3, [r7, #28]
 584 0038 1846     		mov	r0, r3
 585 003a FFF7FEFF 		bl	DWC_READ_REG32
 586 003e 0346     		mov	r3, r0
 587 0040 7B61     		str	r3, [r7, #20]
 126:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 127:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		if (core_if->op_state == B_HOST) {
 588              		.loc 2 127 0
 589 0042 7B68     		ldr	r3, [r7, #4]
 590 0044 93F86430 		ldrb	r3, [r3, #100]	@ zero_extendqisi2
 591 0048 052B     		cmp	r3, #5
 592 004a 08D1     		bne	.L23
 128:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			cil_pcd_start(core_if);
 593              		.loc 2 128 0
 594 004c 7868     		ldr	r0, [r7, #4]
 595 004e FFF7FEFF 		bl	cil_pcd_start
 129:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			core_if->op_state = B_PERIPHERAL;
 596              		.loc 2 129 0
 597 0052 7B68     		ldr	r3, [r7, #4]
 598 0054 4FF00402 		mov	r2, #4
 599 0058 83F86420 		strb	r2, [r3, #100]
 600 005c 44E0     		b	.L24
 601              	.L23:
 130:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		} else {
 131:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			/* If not B_HOST and Device HNP still set. HNP
 132:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			 * Did not succeed!*/
 133:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			if (gotgctl.b.devhnpen) {
 134:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				DWC_DEBUGPL(DBG_ANY, "Session End Detected\n");
 135:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				__DWC_ERROR("Device Not Connected/Responding!\n");
 136:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			}
 137:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 138:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			/* If Session End Detected the B-Cable has
 139:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			 * been disconnected. */
 140:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			/* Reset PCD and Gadget driver to a
 141:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			 * clean state. */
 142:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			core_if->lx_state = DWC_OTG_L0;
 602              		.loc 2 142 0
 603 005e 7B68     		ldr	r3, [r7, #4]
 604 0060 4FF00002 		mov	r2, #0
 605 0064 83F88020 		strb	r2, [r3, #128]
 143:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_SPINUNLOCK(core_if->lock);
 606              		.loc 2 143 0
 607 0068 7B68     		ldr	r3, [r7, #4]
 608 006a D3F8CC30 		ldr	r3, [r3, #204]
 609 006e 1846     		mov	r0, r3
 610 0070 FFF7FEFF 		bl	DWC_SPINUNLOCK
 144:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			cil_pcd_stop(core_if);
 611              		.loc 2 144 0
 612 0074 7868     		ldr	r0, [r7, #4]
 613 0076 FFF7FEFF 		bl	cil_pcd_stop
 145:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_SPINLOCK(core_if->lock);
 614              		.loc 2 145 0
 615 007a 7B68     		ldr	r3, [r7, #4]
 616 007c D3F8CC30 		ldr	r3, [r3, #204]
 617 0080 1846     		mov	r0, r3
 618 0082 FFF7FEFF 		bl	DWC_SPINLOCK
 146:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 147:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			if (core_if->adp_enable) {
 619              		.loc 2 147 0
 620 0086 7B68     		ldr	r3, [r7, #4]
 621 0088 D3F89430 		ldr	r3, [r3, #148]
 622 008c 002B     		cmp	r3, #0
 623 008e 2BD0     		beq	.L24
 148:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				if (core_if->power_down == 2) {
 624              		.loc 2 148 0
 625 0090 7B68     		ldr	r3, [r7, #4]
 626 0092 D3F89030 		ldr	r3, [r3, #144]
 627 0096 022B     		cmp	r3, #2
 628 0098 11D1     		bne	.L25
 149:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 					gpwrdn.d32 = 0;
 629              		.loc 2 149 0
 630 009a 4FF00003 		mov	r3, #0
 631 009e FB60     		str	r3, [r7, #12]
 150:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 					gpwrdn.b.pwrdnswtch = 1;
 632              		.loc 2 150 0
 633 00a0 FB68     		ldr	r3, [r7, #12]
 634 00a2 43F02003 		orr	r3, r3, #32
 635 00a6 FB60     		str	r3, [r7, #12]
 151:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 					DWC_MODIFY_REG32(&core_if->
 636              		.loc 2 151 0
 637 00a8 7B68     		ldr	r3, [r7, #4]
 638 00aa 5B68     		ldr	r3, [r3, #4]
 639 00ac 03F15802 		add	r2, r3, #88
 640 00b0 FB68     		ldr	r3, [r7, #12]
 641 00b2 1046     		mov	r0, r2
 642 00b4 1946     		mov	r1, r3
 643 00b6 4FF00002 		mov	r2, #0
 644 00ba FFF7FEFF 		bl	DWC_MODIFY_REG32
 645              	.L25:
 152:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 							 core_global_regs->
 153:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 							 gpwrdn, gpwrdn.d32, 0);
 154:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				}
 155:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 156:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				gpwrdn.d32 = 0;
 646              		.loc 2 156 0
 647 00be 4FF00003 		mov	r3, #0
 648 00c2 FB60     		str	r3, [r7, #12]
 157:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				gpwrdn.b.pmuactv = 1;
 649              		.loc 2 157 0
 650 00c4 FB68     		ldr	r3, [r7, #12]
 651 00c6 43F00203 		orr	r3, r3, #2
 652 00ca FB60     		str	r3, [r7, #12]
 158:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				DWC_MODIFY_REG32(&core_if->core_global_regs->
 653              		.loc 2 158 0
 654 00cc 7B68     		ldr	r3, [r7, #4]
 655 00ce 5B68     		ldr	r3, [r3, #4]
 656 00d0 03F15802 		add	r2, r3, #88
 657 00d4 FB68     		ldr	r3, [r7, #12]
 658 00d6 1046     		mov	r0, r2
 659 00d8 4FF00001 		mov	r1, #0
 660 00dc 1A46     		mov	r2, r3
 661 00de FFF7FEFF 		bl	DWC_MODIFY_REG32
 159:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 						 gpwrdn, 0, gpwrdn.d32);
 160:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 161:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				dwc_otg_adp_sense_start(core_if);
 662              		.loc 2 161 0
 663 00e2 7868     		ldr	r0, [r7, #4]
 664 00e4 FFF7FEFF 		bl	dwc_otg_adp_sense_start
 665              	.L24:
 162:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			}
 163:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		}
 164:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 165:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		gotgctl.d32 = 0;
 666              		.loc 2 165 0
 667 00e8 4FF00003 		mov	r3, #0
 668 00ec 7B61     		str	r3, [r7, #20]
 166:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		gotgctl.b.devhnpen = 1;
 669              		.loc 2 166 0
 670 00ee 7B69     		ldr	r3, [r7, #20]
 671 00f0 43F40063 		orr	r3, r3, #2048
 672 00f4 7B61     		str	r3, [r7, #20]
 167:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_MODIFY_REG32(&global_regs->gotgctl, gotgctl.d32, 0);
 673              		.loc 2 167 0
 674 00f6 FA69     		ldr	r2, [r7, #28]
 675 00f8 7B69     		ldr	r3, [r7, #20]
 676 00fa 1046     		mov	r0, r2
 677 00fc 1946     		mov	r1, r3
 678 00fe 4FF00002 		mov	r2, #0
 679 0102 FFF7FEFF 		bl	DWC_MODIFY_REG32
 680              	.L22:
 168:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	}
 169:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (gotgint.b.sesreqsucstschng) {
 681              		.loc 2 169 0
 682 0106 7B7E     		ldrb	r3, [r7, #25]	@ zero_extendqisi2
 683 0108 03F00103 		and	r3, r3, #1
 684 010c DBB2     		uxtb	r3, r3
 685 010e 002B     		cmp	r3, #0
 686 0110 3AD0     		beq	.L26
 170:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_DEBUGPL(DBG_ANY, " ++OTG Interrupt: "
 171:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			    "Session Reqeust Success Status Change++\n");
 172:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		gotgctl.d32 = DWC_READ_REG32(&global_regs->gotgctl);
 687              		.loc 2 172 0
 688 0112 FB69     		ldr	r3, [r7, #28]
 689 0114 1846     		mov	r0, r3
 690 0116 FFF7FEFF 		bl	DWC_READ_REG32
 691 011a 0346     		mov	r3, r0
 692 011c 7B61     		str	r3, [r7, #20]
 173:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		if (gotgctl.b.sesreqscs) {
 693              		.loc 2 173 0
 694 011e 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 695 0120 03F00103 		and	r3, r3, #1
 696 0124 DBB2     		uxtb	r3, r3
 697 0126 002B     		cmp	r3, #0
 698 0128 2ED0     		beq	.L26
 174:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 175:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			if ((core_if->core_params->phy_type ==
 699              		.loc 2 175 0
 700 012a 7B68     		ldr	r3, [r7, #4]
 701 012c 1B68     		ldr	r3, [r3, #0]
 702 012e D3F88830 		ldr	r3, [r3, #136]
 703 0132 002B     		cmp	r3, #0
 704 0134 0AD1     		bne	.L27
 176:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			     DWC_PHY_TYPE_PARAM_FS) && (core_if->core_params->i2c_enable)) {
 705              		.loc 2 176 0
 706 0136 7B68     		ldr	r3, [r7, #4]
 707 0138 1B68     		ldr	r3, [r3, #0]
 708 013a D3F89830 		ldr	r3, [r3, #152]
 709 013e 002B     		cmp	r3, #0
 710 0140 04D0     		beq	.L27
 177:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				core_if->srp_success = 1;
 711              		.loc 2 177 0
 712 0142 7B68     		ldr	r3, [r7, #4]
 713 0144 4FF00102 		mov	r2, #1
 714 0148 5A75     		strb	r2, [r3, #21]
 715 014a 1DE0     		b	.L26
 716              	.L27:
 178:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			} else {
 179:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				DWC_SPINUNLOCK(core_if->lock);
 717              		.loc 2 179 0
 718 014c 7B68     		ldr	r3, [r7, #4]
 719 014e D3F8CC30 		ldr	r3, [r3, #204]
 720 0152 1846     		mov	r0, r3
 721 0154 FFF7FEFF 		bl	DWC_SPINUNLOCK
 180:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				cil_pcd_resume(core_if);
 722              		.loc 2 180 0
 723 0158 7868     		ldr	r0, [r7, #4]
 724 015a FFF7FEFF 		bl	cil_pcd_resume
 181:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				DWC_SPINLOCK(core_if->lock);
 725              		.loc 2 181 0
 726 015e 7B68     		ldr	r3, [r7, #4]
 727 0160 D3F8CC30 		ldr	r3, [r3, #204]
 728 0164 1846     		mov	r0, r3
 729 0166 FFF7FEFF 		bl	DWC_SPINLOCK
 182:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				/* Clear Session Request */
 183:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				gotgctl.d32 = 0;
 730              		.loc 2 183 0
 731 016a 4FF00003 		mov	r3, #0
 732 016e 7B61     		str	r3, [r7, #20]
 184:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				gotgctl.b.sesreq = 1;
 733              		.loc 2 184 0
 734 0170 7B69     		ldr	r3, [r7, #20]
 735 0172 43F00203 		orr	r3, r3, #2
 736 0176 7B61     		str	r3, [r7, #20]
 185:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				DWC_MODIFY_REG32(&global_regs->gotgctl,
 737              		.loc 2 185 0
 738 0178 FA69     		ldr	r2, [r7, #28]
 739 017a 7B69     		ldr	r3, [r7, #20]
 740 017c 1046     		mov	r0, r2
 741 017e 1946     		mov	r1, r3
 742 0180 4FF00002 		mov	r2, #0
 743 0184 FFF7FEFF 		bl	DWC_MODIFY_REG32
 744              	.L26:
 186:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 						 gotgctl.d32, 0);
 187:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			}
 188:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		}
 189:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	}
 190:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (gotgint.b.hstnegsucstschng) {
 745              		.loc 2 190 0
 746 0188 7B7E     		ldrb	r3, [r7, #25]	@ zero_extendqisi2
 747 018a 03F00203 		and	r3, r3, #2
 748 018e DBB2     		uxtb	r3, r3
 749 0190 002B     		cmp	r3, #0
 750 0192 52D0     		beq	.L28
 191:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		/* Print statements during the HNP interrupt handling
 192:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		 * can cause it to fail.*/
 193:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		gotgctl.d32 = DWC_READ_REG32(&global_regs->gotgctl);
 751              		.loc 2 193 0
 752 0194 FB69     		ldr	r3, [r7, #28]
 753 0196 1846     		mov	r0, r3
 754 0198 FFF7FEFF 		bl	DWC_READ_REG32
 755 019c 0346     		mov	r3, r0
 756 019e 7B61     		str	r3, [r7, #20]
 194:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		if (gotgctl.b.hstnegscs) {
 757              		.loc 2 194 0
 758 01a0 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 759 01a2 03F00103 		and	r3, r3, #1
 760 01a6 DBB2     		uxtb	r3, r3
 761 01a8 002B     		cmp	r3, #0
 762 01aa 33D0     		beq	.L29
 195:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			if (dwc_otg_is_host_mode(core_if)) {
 763              		.loc 2 195 0
 764 01ac 7868     		ldr	r0, [r7, #4]
 765 01ae FFF7FEFF 		bl	dwc_otg_is_host_mode
 766 01b2 0346     		mov	r3, r0
 767 01b4 002B     		cmp	r3, #0
 768 01b6 40D0     		beq	.L28
 196:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				core_if->op_state = B_HOST;
 769              		.loc 2 196 0
 770 01b8 7B68     		ldr	r3, [r7, #4]
 771 01ba 4FF00502 		mov	r2, #5
 772 01be 83F86420 		strb	r2, [r3, #100]
 197:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				/*
 198:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				 * Need to disable SOF interrupt immediately.
 199:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				 * When switching from device to host, the PCD
 200:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				 * interrupt handler won't handle the
 201:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				 * interrupt if host mode is already set. The
 202:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				 * HCD interrupt handler won't get called if
 203:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				 * the HCD state is HALT. This means that the
 204:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				 * interrupt does not get handled and Linux
 205:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				 * complains loudly.
 206:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				 */
 207:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				gintmsk.d32 = 0;
 773              		.loc 2 207 0
 774 01c2 4FF00003 		mov	r3, #0
 775 01c6 3B61     		str	r3, [r7, #16]
 208:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				gintmsk.b.sofintr = 1;
 776              		.loc 2 208 0
 777 01c8 3B69     		ldr	r3, [r7, #16]
 778 01ca 43F00803 		orr	r3, r3, #8
 779 01ce 3B61     		str	r3, [r7, #16]
 209:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				DWC_MODIFY_REG32(&global_regs->gintmsk,
 780              		.loc 2 209 0
 781 01d0 FB69     		ldr	r3, [r7, #28]
 782 01d2 03F11802 		add	r2, r3, #24
 783 01d6 3B69     		ldr	r3, [r7, #16]
 784 01d8 1046     		mov	r0, r2
 785 01da 1946     		mov	r1, r3
 786 01dc 4FF00002 		mov	r2, #0
 787 01e0 FFF7FEFF 		bl	DWC_MODIFY_REG32
 210:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 						 gintmsk.d32, 0);
 211:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				/* Call callback function with spin lock released */
 212:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				DWC_SPINUNLOCK(core_if->lock);
 788              		.loc 2 212 0
 789 01e4 7B68     		ldr	r3, [r7, #4]
 790 01e6 D3F8CC30 		ldr	r3, [r3, #204]
 791 01ea 1846     		mov	r0, r3
 792 01ec FFF7FEFF 		bl	DWC_SPINUNLOCK
 213:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				cil_pcd_stop(core_if);
 793              		.loc 2 213 0
 794 01f0 7868     		ldr	r0, [r7, #4]
 795 01f2 FFF7FEFF 		bl	cil_pcd_stop
 214:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				/*
 215:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				 * Initialize the Core for Host mode.
 216:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				 */
 217:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				cil_hcd_start(core_if);
 796              		.loc 2 217 0
 797 01f6 7868     		ldr	r0, [r7, #4]
 798 01f8 FFF7FEFF 		bl	cil_hcd_start
 218:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				DWC_SPINLOCK(core_if->lock);
 799              		.loc 2 218 0
 800 01fc 7B68     		ldr	r3, [r7, #4]
 801 01fe D3F8CC30 		ldr	r3, [r3, #204]
 802 0202 1846     		mov	r0, r3
 803 0204 FFF7FEFF 		bl	DWC_SPINLOCK
 219:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				core_if->op_state = B_HOST;
 804              		.loc 2 219 0
 805 0208 7B68     		ldr	r3, [r7, #4]
 806 020a 4FF00502 		mov	r2, #5
 807 020e 83F86420 		strb	r2, [r3, #100]
 808 0212 12E0     		b	.L28
 809              	.L29:
 220:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			}
 221:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		} else {
 222:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			gotgctl.d32 = 0;
 810              		.loc 2 222 0
 811 0214 4FF00003 		mov	r3, #0
 812 0218 7B61     		str	r3, [r7, #20]
 223:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			gotgctl.b.hnpreq = 1;
 813              		.loc 2 223 0
 814 021a 7B69     		ldr	r3, [r7, #20]
 815 021c 43F40073 		orr	r3, r3, #512
 816 0220 7B61     		str	r3, [r7, #20]
 224:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			gotgctl.b.devhnpen = 1;
 817              		.loc 2 224 0
 818 0222 7B69     		ldr	r3, [r7, #20]
 819 0224 43F40063 		orr	r3, r3, #2048
 820 0228 7B61     		str	r3, [r7, #20]
 225:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_MODIFY_REG32(&global_regs->gotgctl, gotgctl.d32, 0);
 821              		.loc 2 225 0
 822 022a FA69     		ldr	r2, [r7, #28]
 823 022c 7B69     		ldr	r3, [r7, #20]
 824 022e 1046     		mov	r0, r2
 825 0230 1946     		mov	r1, r3
 826 0232 4FF00002 		mov	r2, #0
 827 0236 FFF7FEFF 		bl	DWC_MODIFY_REG32
 828              	.L28:
 226:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_DEBUGPL(DBG_ANY, "HNP Failed\n");
 227:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			__DWC_ERROR("Device Not Connected/Responding\n");
 228:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		}
 229:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	}
 230:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (gotgint.b.hstnegdet) {
 829              		.loc 2 230 0
 830 023a BB7E     		ldrb	r3, [r7, #26]	@ zero_extendqisi2
 831 023c 03F00203 		and	r3, r3, #2
 832 0240 DBB2     		uxtb	r3, r3
 833 0242 002B     		cmp	r3, #0
 834 0244 45D0     		beq	.L30
 231:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		/* The disconnect interrupt is set at the same time as
 232:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		 * Host Negotiation Detected.  During the mode
 233:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		 * switch all interrupts are cleared so the disconnect
 234:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		 * interrupt handler will not get executed.
 235:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		 */
 236:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_DEBUGPL(DBG_ANY, " ++OTG Interrupt: "
 237:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			    "Host Negotiation Detected++ (%s)\n",
 238:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			    (dwc_otg_is_host_mode(core_if) ? "Host" :
 239:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			     "Device"));
 240:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		if (dwc_otg_is_device_mode(core_if)) {
 835              		.loc 2 240 0
 836 0246 7868     		ldr	r0, [r7, #4]
 837 0248 FFF7FEFF 		bl	dwc_otg_is_device_mode
 838 024c 0346     		mov	r3, r0
 839 024e 002B     		cmp	r3, #0
 840 0250 17D0     		beq	.L31
 241:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_DEBUGPL(DBG_ANY, "a_suspend->a_peripheral (%d)\n",
 242:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				    core_if->op_state);
 243:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_SPINUNLOCK(core_if->lock);
 841              		.loc 2 243 0
 842 0252 7B68     		ldr	r3, [r7, #4]
 843 0254 D3F8CC30 		ldr	r3, [r3, #204]
 844 0258 1846     		mov	r0, r3
 845 025a FFF7FEFF 		bl	DWC_SPINUNLOCK
 244:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			cil_hcd_disconnect(core_if);
 846              		.loc 2 244 0
 847 025e 7868     		ldr	r0, [r7, #4]
 848 0260 FFF7FEFF 		bl	cil_hcd_disconnect
 245:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			cil_pcd_start(core_if);
 849              		.loc 2 245 0
 850 0264 7868     		ldr	r0, [r7, #4]
 851 0266 FFF7FEFF 		bl	cil_pcd_start
 246:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_SPINLOCK(core_if->lock);
 852              		.loc 2 246 0
 853 026a 7B68     		ldr	r3, [r7, #4]
 854 026c D3F8CC30 		ldr	r3, [r3, #204]
 855 0270 1846     		mov	r0, r3
 856 0272 FFF7FEFF 		bl	DWC_SPINLOCK
 247:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			core_if->op_state = A_PERIPHERAL;
 857              		.loc 2 247 0
 858 0276 7B68     		ldr	r3, [r7, #4]
 859 0278 4FF00302 		mov	r2, #3
 860 027c 83F86420 		strb	r2, [r3, #100]
 861 0280 27E0     		b	.L30
 862              	.L31:
 248:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		} else {
 249:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			/*
 250:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			 * Need to disable SOF interrupt immediately. When
 251:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			 * switching from device to host, the PCD interrupt
 252:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			 * handler won't handle the interrupt if host mode is
 253:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			 * already set. The HCD interrupt handler won't get
 254:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			 * called if the HCD state is HALT. This means that
 255:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			 * the interrupt does not get handled and Linux
 256:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			 * complains loudly.
 257:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			 */
 258:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			gintmsk.d32 = 0;
 863              		.loc 2 258 0
 864 0282 4FF00003 		mov	r3, #0
 865 0286 3B61     		str	r3, [r7, #16]
 259:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			gintmsk.b.sofintr = 1;
 866              		.loc 2 259 0
 867 0288 3B69     		ldr	r3, [r7, #16]
 868 028a 43F00803 		orr	r3, r3, #8
 869 028e 3B61     		str	r3, [r7, #16]
 260:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_MODIFY_REG32(&global_regs->gintmsk, gintmsk.d32, 0);
 870              		.loc 2 260 0
 871 0290 FB69     		ldr	r3, [r7, #28]
 872 0292 03F11802 		add	r2, r3, #24
 873 0296 3B69     		ldr	r3, [r7, #16]
 874 0298 1046     		mov	r0, r2
 875 029a 1946     		mov	r1, r3
 876 029c 4FF00002 		mov	r2, #0
 877 02a0 FFF7FEFF 		bl	DWC_MODIFY_REG32
 261:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_SPINUNLOCK(core_if->lock);
 878              		.loc 2 261 0
 879 02a4 7B68     		ldr	r3, [r7, #4]
 880 02a6 D3F8CC30 		ldr	r3, [r3, #204]
 881 02aa 1846     		mov	r0, r3
 882 02ac FFF7FEFF 		bl	DWC_SPINUNLOCK
 262:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			cil_pcd_stop(core_if);
 883              		.loc 2 262 0
 884 02b0 7868     		ldr	r0, [r7, #4]
 885 02b2 FFF7FEFF 		bl	cil_pcd_stop
 263:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			cil_hcd_start(core_if);
 886              		.loc 2 263 0
 887 02b6 7868     		ldr	r0, [r7, #4]
 888 02b8 FFF7FEFF 		bl	cil_hcd_start
 264:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_SPINLOCK(core_if->lock);
 889              		.loc 2 264 0
 890 02bc 7B68     		ldr	r3, [r7, #4]
 891 02be D3F8CC30 		ldr	r3, [r3, #204]
 892 02c2 1846     		mov	r0, r3
 893 02c4 FFF7FEFF 		bl	DWC_SPINLOCK
 265:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			core_if->op_state = A_HOST;
 894              		.loc 2 265 0
 895 02c8 7B68     		ldr	r3, [r7, #4]
 896 02ca 4FF00102 		mov	r2, #1
 897 02ce 83F86420 		strb	r2, [r3, #100]
 898              	.L30:
 266:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		}
 267:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	}
 268:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (gotgint.b.adevtoutchng) {
 269:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_DEBUGPL(DBG_ANY, " ++OTG Interrupt: "
 270:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			    "A-Device Timeout Change++\n");
 271:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	}
 272:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (gotgint.b.debdone) {
 273:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_DEBUGPL(DBG_ANY, " ++OTG Interrupt: " "Debounce Done++\n");
 274:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	}
 275:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 276:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Clear GOTGINT */
 277:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_WRITE_REG32(&core_if->core_global_regs->gotgint, gotgint.d32);
 899              		.loc 2 277 0
 900 02d2 7B68     		ldr	r3, [r7, #4]
 901 02d4 5B68     		ldr	r3, [r3, #4]
 902 02d6 03F10402 		add	r2, r3, #4
 903 02da BB69     		ldr	r3, [r7, #24]
 904 02dc 1046     		mov	r0, r2
 905 02de 1946     		mov	r1, r3
 906 02e0 FFF7FEFF 		bl	DWC_WRITE_REG32
 278:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 279:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	return 1;
 907              		.loc 2 279 0
 908 02e4 4FF00103 		mov	r3, #1
 280:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** }
 909              		.loc 2 280 0
 910 02e8 1846     		mov	r0, r3
 911 02ea 07F12007 		add	r7, r7, #32
 912 02ee BD46     		mov	sp, r7
 913 02f0 80BD     		pop	{r7, pc}
 914              		.cfi_endproc
 915              	.LFE21:
 917 02f2 00BF     		.section	.text.w_conn_id_status_change,"ax",%progbits
 918              		.align	2
 919              		.global	w_conn_id_status_change
 920              		.thumb
 921              		.thumb_func
 923              	w_conn_id_status_change:
 924              	.LFB22:
 281:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 282:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** void w_conn_id_status_change(void *p)
 283:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** {
 925              		.loc 2 283 0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 24
 928              		@ frame_needed = 1, uses_anonymous_args = 0
 929 0000 80B5     		push	{r7, lr}
 930              	.LCFI33:
 931              		.cfi_def_cfa_offset 8
 932              		.cfi_offset 7, -8
 933              		.cfi_offset 14, -4
 934 0002 86B0     		sub	sp, sp, #24
 935              	.LCFI34:
 936              		.cfi_def_cfa_offset 32
 937 0004 00AF     		add	r7, sp, #0
 938              	.LCFI35:
 939              		.cfi_def_cfa_register 7
 940 0006 7860     		str	r0, [r7, #4]
 284:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	dwc_otg_core_if_t *core_if = p;
 941              		.loc 2 284 0
 942 0008 7B68     		ldr	r3, [r7, #4]
 943 000a 3B61     		str	r3, [r7, #16]
 285:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	uint32_t count = 0;
 944              		.loc 2 285 0
 945 000c 4FF00003 		mov	r3, #0
 946 0010 7B61     		str	r3, [r7, #20]
 286:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	
 287:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gotgctl_data_t gotgctl = {.d32 = 0 };
 947              		.loc 2 287 0
 948 0012 4FF00003 		mov	r3, #0
 949 0016 FB60     		str	r3, [r7, #12]
 288:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 289:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gotgctl.d32 = DWC_READ_REG32(&core_if->core_global_regs->gotgctl);
 950              		.loc 2 289 0
 951 0018 3B69     		ldr	r3, [r7, #16]
 952 001a 5B68     		ldr	r3, [r3, #4]
 953 001c 1846     		mov	r0, r3
 954 001e FFF7FEFF 		bl	DWC_READ_REG32
 955 0022 0346     		mov	r3, r0
 956 0024 FB60     		str	r3, [r7, #12]
 290:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_DEBUGPL(DBG_CIL, "gotgctl=%0x\n", gotgctl.d32);
 291:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_DEBUGPL(DBG_CIL, "gotgctl.b.conidsts=%d\n", gotgctl.b.conidsts);
 292:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 293:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* B-Device connector (Device Mode) */
 294:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (gotgctl.b.conidsts) {
 957              		.loc 2 294 0
 958 0026 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 959 0028 03F00103 		and	r3, r3, #1
 960 002c DBB2     		uxtb	r3, r3
 961 002e 002B     		cmp	r3, #0
 962 0030 32D0     		beq	.L42
 295:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		/* Wait for switch to device mode. */
 296:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		while (!dwc_otg_is_device_mode(core_if)) {
 963              		.loc 2 296 0
 964 0032 0CE0     		b	.L35
 965              	.L37:
 297:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_PRINTF("Waiting for Peripheral Mode, Mode=%s\n",
 298:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				   (dwc_otg_is_host_mode(core_if) ? "Host" :
 299:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				    "Peripheral"));
 300:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			dwc_mdelay(100);
 966              		.loc 2 300 0
 967 0034 4FF06400 		mov	r0, #100
 968 0038 FFF7FEFF 		bl	DWC_MDELAY
 301:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			if (++count > 10000)
 969              		.loc 2 301 0
 970 003c 7B69     		ldr	r3, [r7, #20]
 971 003e 03F10103 		add	r3, r3, #1
 972 0042 7B61     		str	r3, [r7, #20]
 973 0044 7A69     		ldr	r2, [r7, #20]
 974 0046 42F21073 		movw	r3, #10000
 975 004a 9A42     		cmp	r2, r3
 976 004c 06D8     		bhi	.L43
 977              	.L35:
 296:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		while (!dwc_otg_is_device_mode(core_if)) {
 978              		.loc 2 296 0 discriminator 1
 979 004e 3869     		ldr	r0, [r7, #16]
 980 0050 FFF7FEFF 		bl	dwc_otg_is_device_mode
 981 0054 0346     		mov	r3, r0
 982 0056 002B     		cmp	r3, #0
 983 0058 ECD0     		beq	.L37
 984 005a 00E0     		b	.L36
 985              	.L43:
 302:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				break;
 986              		.loc 2 302 0
 987 005c 00BF     		nop
 988              	.L36:
 303:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		}
 304:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_ASSERT(++count < 10000,
 305:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			   "Connection id status change timed out");
 306:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		core_if->op_state = B_PERIPHERAL;
 989              		.loc 2 306 0
 990 005e 3B69     		ldr	r3, [r7, #16]
 991 0060 4FF00402 		mov	r2, #4
 992 0064 83F86420 		strb	r2, [r3, #100]
 307:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		dwc_otg_core_init(core_if);
 993              		.loc 2 307 0
 994 0068 3869     		ldr	r0, [r7, #16]
 995 006a FFF7FEFF 		bl	dwc_otg_core_init
 308:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		dwc_otg_enable_global_interrupts(core_if);
 996              		.loc 2 308 0
 997 006e 3869     		ldr	r0, [r7, #16]
 998 0070 FFF7FEFF 		bl	dwc_otg_enable_global_interrupts
 309:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		cil_pcd_start(core_if);
 999              		.loc 2 309 0
 1000 0074 3869     		ldr	r0, [r7, #16]
 1001 0076 FFF7FEFF 		bl	cil_pcd_start
 1002 007a 24E0     		b	.L33
 1003              	.L41:
 310:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	} else {
 311:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		/* A-Device connector (Host Mode) */
 312:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		while (!dwc_otg_is_host_mode(core_if)) {
 313:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_PRINTF("Waiting for Host Mode, Mode=%s\n",
 314:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				   (dwc_otg_is_host_mode(core_if) ? "Host" :
 315:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				    "Peripheral"));
 316:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			dwc_mdelay(100);
 1004              		.loc 2 316 0
 1005 007c 4FF06400 		mov	r0, #100
 1006 0080 FFF7FEFF 		bl	DWC_MDELAY
 317:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			if (++count > 10000)
 1007              		.loc 2 317 0
 1008 0084 7B69     		ldr	r3, [r7, #20]
 1009 0086 03F10103 		add	r3, r3, #1
 1010 008a 7B61     		str	r3, [r7, #20]
 1011 008c 7A69     		ldr	r2, [r7, #20]
 1012 008e 42F21073 		movw	r3, #10000
 1013 0092 9A42     		cmp	r2, r3
 1014 0094 08D8     		bhi	.L44
 1015 0096 00E0     		b	.L39
 1016              	.L42:
 312:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		while (!dwc_otg_is_host_mode(core_if)) {
 1017              		.loc 2 312 0
 1018 0098 00BF     		nop
 1019              	.L39:
 312:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		while (!dwc_otg_is_host_mode(core_if)) {
 1020              		.loc 2 312 0 is_stmt 0 discriminator 1
 1021 009a 3869     		ldr	r0, [r7, #16]
 1022 009c FFF7FEFF 		bl	dwc_otg_is_host_mode
 1023 00a0 0346     		mov	r3, r0
 1024 00a2 002B     		cmp	r3, #0
 1025 00a4 EAD0     		beq	.L41
 1026 00a6 00E0     		b	.L40
 1027              	.L44:
 318:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				break;
 1028              		.loc 2 318 0 is_stmt 1
 1029 00a8 00BF     		nop
 1030              	.L40:
 319:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		}
 320:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_ASSERT(++count < 10000,
 321:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			   "Connection id status change timed out");
 322:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		core_if->op_state = A_HOST;
 1031              		.loc 2 322 0
 1032 00aa 3B69     		ldr	r3, [r7, #16]
 1033 00ac 4FF00102 		mov	r2, #1
 1034 00b0 83F86420 		strb	r2, [r3, #100]
 323:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		/*
 324:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		 * Initialize the Core for Host mode.
 325:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		 */
 326:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		dwc_otg_core_init(core_if);
 1035              		.loc 2 326 0
 1036 00b4 3869     		ldr	r0, [r7, #16]
 1037 00b6 FFF7FEFF 		bl	dwc_otg_core_init
 327:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		dwc_otg_enable_global_interrupts(core_if);
 1038              		.loc 2 327 0
 1039 00ba 3869     		ldr	r0, [r7, #16]
 1040 00bc FFF7FEFF 		bl	dwc_otg_enable_global_interrupts
 328:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		cil_hcd_start(core_if);
 1041              		.loc 2 328 0
 1042 00c0 3869     		ldr	r0, [r7, #16]
 1043 00c2 FFF7FEFF 		bl	cil_hcd_start
 1044              	.L33:
 329:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	}
 330:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** }
 1045              		.loc 2 330 0
 1046 00c6 07F11807 		add	r7, r7, #24
 1047 00ca BD46     		mov	sp, r7
 1048 00cc 80BD     		pop	{r7, pc}
 1049              		.cfi_endproc
 1050              	.LFE22:
 1052 00ce 00BF     		.section	.rodata
 1053              		.align	2
 1054              	.LC0:
 1055 0000 636F6E6E 		.ascii	"connection id status change\000"
 1055      65637469 
 1055      6F6E2069 
 1055      64207374 
 1055      61747573 
 1056              		.section	.text.dwc_otg_handle_conn_id_status_change_intr,"ax",%progbits
 1057              		.align	2
 1058              		.global	dwc_otg_handle_conn_id_status_change_intr
 1059              		.thumb
 1060              		.thumb_func
 1062              	dwc_otg_handle_conn_id_status_change_intr:
 1063              	.LFB23:
 331:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 332:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** /**
 333:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * This function handles the Connector ID Status Change Interrupt.  It
 334:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * reads the OTG Interrupt Register (GOTCTL) to determine whether this
 335:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * is a Device to Host Mode transition or a Host Mode to Device
 336:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * Transition. 
 337:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  *
 338:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * This only occurs when the cable is connected/removed from the PHY
 339:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * connector.
 340:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  *
 341:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * @param core_if Programming view of DWC_otg controller.
 342:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  */
 343:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** int32_t dwc_otg_handle_conn_id_status_change_intr(dwc_otg_core_if_t * core_if)
 344:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** {
 1064              		.loc 2 344 0
 1065              		.cfi_startproc
 1066              		@ args = 0, pretend = 0, frame = 16
 1067              		@ frame_needed = 1, uses_anonymous_args = 0
 1068 0000 80B5     		push	{r7, lr}
 1069              	.LCFI36:
 1070              		.cfi_def_cfa_offset 8
 1071              		.cfi_offset 7, -8
 1072              		.cfi_offset 14, -4
 1073 0002 84B0     		sub	sp, sp, #16
 1074              	.LCFI37:
 1075              		.cfi_def_cfa_offset 24
 1076 0004 00AF     		add	r7, sp, #0
 1077              	.LCFI38:
 1078              		.cfi_def_cfa_register 7
 1079 0006 7860     		str	r0, [r7, #4]
 345:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 346:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/*
 347:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	 * Need to disable SOF interrupt immediately. If switching from device
 348:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	 * to host, the PCD interrupt handler won't handle the interrupt if
 349:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	 * host mode is already set. The HCD interrupt handler won't get
 350:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	 * called if the HCD state is HALT. This means that the interrupt does
 351:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	 * not get handled and Linux complains loudly.
 352:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	 */
 353:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintmsk_data_t gintmsk = {.d32 = 0 };
 1080              		.loc 2 353 0
 1081 0008 4FF00003 		mov	r3, #0
 1082 000c FB60     		str	r3, [r7, #12]
 354:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintsts_data_t gintsts = {.d32 = 0 };
 1083              		.loc 2 354 0
 1084 000e 4FF00003 		mov	r3, #0
 1085 0012 BB60     		str	r3, [r7, #8]
 355:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 356:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintmsk.b.sofintr = 1;
 1086              		.loc 2 356 0
 1087 0014 FB68     		ldr	r3, [r7, #12]
 1088 0016 43F00803 		orr	r3, r3, #8
 1089 001a FB60     		str	r3, [r7, #12]
 357:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_MODIFY_REG32(&core_if->core_global_regs->gintmsk, gintmsk.d32, 0);
 1090              		.loc 2 357 0
 1091 001c 7B68     		ldr	r3, [r7, #4]
 1092 001e 5B68     		ldr	r3, [r3, #4]
 1093 0020 03F11802 		add	r2, r3, #24
 1094 0024 FB68     		ldr	r3, [r7, #12]
 1095 0026 1046     		mov	r0, r2
 1096 0028 1946     		mov	r1, r3
 1097 002a 4FF00002 		mov	r2, #0
 1098 002e FFF7FEFF 		bl	DWC_MODIFY_REG32
 358:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 359:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_DEBUGPL(DBG_CIL,
 360:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		    " ++Connector ID Status Change Interrupt++  (%s)\n",
 361:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		    (dwc_otg_is_host_mode(core_if) ? "Host" : "Device"));
 362:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 363:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/*
 364:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	 * Need to schedule a work, as there are possible DELAY function calls
 365:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	 * Release lock before scheduling workq as it holds spinlock during scheduling
 366:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	 */
 367:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 368:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_SPINUNLOCK(core_if->lock);
 1099              		.loc 2 368 0
 1100 0032 7B68     		ldr	r3, [r7, #4]
 1101 0034 D3F8CC30 		ldr	r3, [r3, #204]
 1102 0038 1846     		mov	r0, r3
 1103 003a FFF7FEFF 		bl	DWC_SPINUNLOCK
 369:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_WORKQ_SCHEDULE(core_if->wq_otg, w_conn_id_status_change,
 1104              		.loc 2 369 0
 1105 003e 7B68     		ldr	r3, [r7, #4]
 1106 0040 9B6F     		ldr	r3, [r3, #120]
 1107 0042 1846     		mov	r0, r3
 1108 0044 40F20001 		movw	r1, #:lower16:w_conn_id_status_change
 1109 0048 C0F20001 		movt	r1, #:upper16:w_conn_id_status_change
 1110 004c 7A68     		ldr	r2, [r7, #4]
 1111 004e 40F20003 		movw	r3, #:lower16:.LC0
 1112 0052 C0F20003 		movt	r3, #:upper16:.LC0
 1113 0056 FFF7FEFF 		bl	DWC_WORKQ_SCHEDULE
 370:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			   core_if, "connection id status change");
 371:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_SPINLOCK(core_if->lock);
 1114              		.loc 2 371 0
 1115 005a 7B68     		ldr	r3, [r7, #4]
 1116 005c D3F8CC30 		ldr	r3, [r3, #204]
 1117 0060 1846     		mov	r0, r3
 1118 0062 FFF7FEFF 		bl	DWC_SPINLOCK
 372:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 373:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Set flag and clear interrupt */
 374:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintsts.b.conidstschng = 1;
 1119              		.loc 2 374 0
 1120 0066 BB68     		ldr	r3, [r7, #8]
 1121 0068 43F08053 		orr	r3, r3, #268435456
 1122 006c BB60     		str	r3, [r7, #8]
 375:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_WRITE_REG32(&core_if->core_global_regs->gintsts, gintsts.d32);
 1123              		.loc 2 375 0
 1124 006e 7B68     		ldr	r3, [r7, #4]
 1125 0070 5B68     		ldr	r3, [r3, #4]
 1126 0072 03F11402 		add	r2, r3, #20
 1127 0076 BB68     		ldr	r3, [r7, #8]
 1128 0078 1046     		mov	r0, r2
 1129 007a 1946     		mov	r1, r3
 1130 007c FFF7FEFF 		bl	DWC_WRITE_REG32
 376:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 377:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	return 1;
 1131              		.loc 2 377 0
 1132 0080 4FF00103 		mov	r3, #1
 378:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** }
 1133              		.loc 2 378 0
 1134 0084 1846     		mov	r0, r3
 1135 0086 07F11007 		add	r7, r7, #16
 1136 008a BD46     		mov	sp, r7
 1137 008c 80BD     		pop	{r7, pc}
 1138              		.cfi_endproc
 1139              	.LFE23:
 1141 008e 00BF     		.section	.text.dwc_otg_handle_session_req_intr,"ax",%progbits
 1142              		.align	2
 1143              		.global	dwc_otg_handle_session_req_intr
 1144              		.thumb
 1145              		.thumb_func
 1147              	dwc_otg_handle_session_req_intr:
 1148              	.LFB24:
 379:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 380:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** /**
 381:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * This interrupt indicates that a device is initiating the Session
 382:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * Request Protocol to request the host to turn on bus power so a new
 383:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * session can begin. The handler responds by turning on bus power. If
 384:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * the DWC_otg controller is in low power mode, the handler brings the
 385:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * controller out of low power mode before turning on bus power.
 386:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  *
 387:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * @param core_if Programming view of DWC_otg controller.
 388:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  */
 389:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** int32_t dwc_otg_handle_session_req_intr(dwc_otg_core_if_t * core_if)
 390:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** {
 1149              		.loc 2 390 0
 1150              		.cfi_startproc
 1151              		@ args = 0, pretend = 0, frame = 16
 1152              		@ frame_needed = 1, uses_anonymous_args = 0
 1153 0000 80B5     		push	{r7, lr}
 1154              	.LCFI39:
 1155              		.cfi_def_cfa_offset 8
 1156              		.cfi_offset 7, -8
 1157              		.cfi_offset 14, -4
 1158 0002 84B0     		sub	sp, sp, #16
 1159              	.LCFI40:
 1160              		.cfi_def_cfa_offset 24
 1161 0004 00AF     		add	r7, sp, #0
 1162              	.LCFI41:
 1163              		.cfi_def_cfa_register 7
 1164 0006 7860     		str	r0, [r7, #4]
 391:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintsts_data_t gintsts;
 392:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 393:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** #ifndef DWC_HOST_ONLY
 394:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	hprt0_data_t hprt0;
 395:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_DEBUGPL(DBG_ANY, "++Session Request Interrupt++\n");
 396:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 397:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (dwc_otg_is_device_mode(core_if)) {
 1165              		.loc 2 397 0
 1166 0008 7868     		ldr	r0, [r7, #4]
 1167 000a FFF7FEFF 		bl	dwc_otg_is_device_mode
 1168 000e 0346     		mov	r3, r0
 1169 0010 002B     		cmp	r3, #0
 1170 0012 13D1     		bne	.L48
 398:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_PRINTF("SRP: Device mode\n");
 399:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	} else {
 400:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_PRINTF("SRP: Host mode\n");
 401:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 402:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		/* Turn on the port power bit. */
 403:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		hprt0.d32 = dwc_otg_read_hprt0(core_if);
 1171              		.loc 2 403 0
 1172 0014 7868     		ldr	r0, [r7, #4]
 1173 0016 FFF7FEFF 		bl	dwc_otg_read_hprt0
 1174 001a 0346     		mov	r3, r0
 1175 001c BB60     		str	r3, [r7, #8]
 404:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		hprt0.b.prtpwr = 1;
 1176              		.loc 2 404 0
 1177 001e BB68     		ldr	r3, [r7, #8]
 1178 0020 43F48053 		orr	r3, r3, #4096
 1179 0024 BB60     		str	r3, [r7, #8]
 405:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_WRITE_REG32(core_if->host_if->hprt0, hprt0.d32);
 1180              		.loc 2 405 0
 1181 0026 7B68     		ldr	r3, [r7, #4]
 1182 0028 DB68     		ldr	r3, [r3, #12]
 1183 002a 5A68     		ldr	r2, [r3, #4]
 1184 002c BB68     		ldr	r3, [r7, #8]
 1185 002e 1046     		mov	r0, r2
 1186 0030 1946     		mov	r1, r3
 1187 0032 FFF7FEFF 		bl	DWC_WRITE_REG32
 406:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 407:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		/* Start the Connection timer. So a message can be displayed
 408:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		 * if connect does not occur within 10 seconds. */
 409:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		cil_hcd_session_start(core_if);
 1188              		.loc 2 409 0
 1189 0036 7868     		ldr	r0, [r7, #4]
 1190 0038 FFF7FEFF 		bl	cil_hcd_session_start
 1191              	.L48:
 410:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	}
 411:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** #endif
 412:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 413:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Clear interrupt */
 414:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintsts.d32 = 0;
 1192              		.loc 2 414 0
 1193 003c 4FF00003 		mov	r3, #0
 1194 0040 FB60     		str	r3, [r7, #12]
 415:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintsts.b.sessreqintr = 1;
 1195              		.loc 2 415 0
 1196 0042 FB68     		ldr	r3, [r7, #12]
 1197 0044 43F08043 		orr	r3, r3, #1073741824
 1198 0048 FB60     		str	r3, [r7, #12]
 416:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_WRITE_REG32(&core_if->core_global_regs->gintsts, gintsts.d32);
 1199              		.loc 2 416 0
 1200 004a 7B68     		ldr	r3, [r7, #4]
 1201 004c 5B68     		ldr	r3, [r3, #4]
 1202 004e 03F11402 		add	r2, r3, #20
 1203 0052 FB68     		ldr	r3, [r7, #12]
 1204 0054 1046     		mov	r0, r2
 1205 0056 1946     		mov	r1, r3
 1206 0058 FFF7FEFF 		bl	DWC_WRITE_REG32
 417:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 418:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	return 1;
 1207              		.loc 2 418 0
 1208 005c 4FF00103 		mov	r3, #1
 419:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** }
 1209              		.loc 2 419 0
 1210 0060 1846     		mov	r0, r3
 1211 0062 07F11007 		add	r7, r7, #16
 1212 0066 BD46     		mov	sp, r7
 1213 0068 80BD     		pop	{r7, pc}
 1214              		.cfi_endproc
 1215              	.LFE24:
 1217 006a 00BF     		.section	.text.w_wakeup_detected,"ax",%progbits
 1218              		.align	2
 1219              		.global	w_wakeup_detected
 1220              		.thumb
 1221              		.thumb_func
 1223              	w_wakeup_detected:
 1224              	.LFB25:
 420:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 421:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** void w_wakeup_detected(void *p)
 422:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** {
 1225              		.loc 2 422 0
 1226              		.cfi_startproc
 1227              		@ args = 0, pretend = 0, frame = 16
 1228              		@ frame_needed = 1, uses_anonymous_args = 0
 1229 0000 80B5     		push	{r7, lr}
 1230              	.LCFI42:
 1231              		.cfi_def_cfa_offset 8
 1232              		.cfi_offset 7, -8
 1233              		.cfi_offset 14, -4
 1234 0002 84B0     		sub	sp, sp, #16
 1235              	.LCFI43:
 1236              		.cfi_def_cfa_offset 24
 1237 0004 00AF     		add	r7, sp, #0
 1238              	.LCFI44:
 1239              		.cfi_def_cfa_register 7
 1240 0006 7860     		str	r0, [r7, #4]
 423:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	dwc_otg_core_if_t *core_if = (dwc_otg_core_if_t *) p;
 1241              		.loc 2 423 0
 1242 0008 7B68     		ldr	r3, [r7, #4]
 1243 000a FB60     		str	r3, [r7, #12]
 424:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/*
 425:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	 * Clear the Resume after 70ms. (Need 20 ms minimum. Use 70 ms
 426:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	 * so that OPT tests pass with all PHYs).
 427:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	 */
 428:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 429:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	hprt0_data_t hprt0 = {.d32 = 0 };
 1244              		.loc 2 429 0
 1245 000c 4FF00003 		mov	r3, #0
 1246 0010 BB60     		str	r3, [r7, #8]
 430:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 431:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** #if 0
 432:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	pcgcctl_data_t pcgcctl = {.d32 = 0 };
 433:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Restart the Phy Clock */
 434:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	pcgcctl.b.stoppclk = 1;
 435:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_MODIFY_REG32(core_if->pcgcctl, pcgcctl.d32, 0);
 436:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	dwc_udelay(10);
 437:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** #endif //0
 438:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	hprt0.d32 = dwc_otg_read_hprt0(core_if);
 1247              		.loc 2 438 0
 1248 0012 F868     		ldr	r0, [r7, #12]
 1249 0014 FFF7FEFF 		bl	dwc_otg_read_hprt0
 1250 0018 0346     		mov	r3, r0
 1251 001a BB60     		str	r3, [r7, #8]
 439:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_DEBUGPL(DBG_ANY, "Resume: HPRT0=%0x\n", hprt0.d32);
 440:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** //      dwc_mdelay(70);
 441:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	hprt0.b.prtres = 0;	/* Resume */
 1252              		.loc 2 441 0
 1253 001c BB68     		ldr	r3, [r7, #8]
 1254 001e 6FF38613 		bfc	r3, #6, #1
 1255 0022 BB60     		str	r3, [r7, #8]
 442:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_WRITE_REG32(core_if->host_if->hprt0, hprt0.d32);
 1256              		.loc 2 442 0
 1257 0024 FB68     		ldr	r3, [r7, #12]
 1258 0026 DB68     		ldr	r3, [r3, #12]
 1259 0028 5A68     		ldr	r2, [r3, #4]
 1260 002a BB68     		ldr	r3, [r7, #8]
 1261 002c 1046     		mov	r0, r2
 1262 002e 1946     		mov	r1, r3
 1263 0030 FFF7FEFF 		bl	DWC_WRITE_REG32
 443:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_DEBUGPL(DBG_ANY, "Clear Resume: HPRT0=%0x\n",
 444:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		    DWC_READ_REG32(core_if->host_if->hprt0));
 445:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 446:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	cil_hcd_resume(core_if);
 1264              		.loc 2 446 0
 1265 0034 F868     		ldr	r0, [r7, #12]
 1266 0036 FFF7FEFF 		bl	cil_hcd_resume
 447:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 448:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/** Change to L0 state*/
 449:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	core_if->lx_state = DWC_OTG_L0;
 1267              		.loc 2 449 0
 1268 003a FB68     		ldr	r3, [r7, #12]
 1269 003c 4FF00002 		mov	r2, #0
 1270 0040 83F88020 		strb	r2, [r3, #128]
 450:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** }
 1271              		.loc 2 450 0
 1272 0044 07F11007 		add	r7, r7, #16
 1273 0048 BD46     		mov	sp, r7
 1274 004a 80BD     		pop	{r7, pc}
 1275              		.cfi_endproc
 1276              	.LFE25:
 1278              		.section	.text.dwc_otg_handle_wakeup_detected_intr,"ax",%progbits
 1279              		.align	2
 1280              		.global	dwc_otg_handle_wakeup_detected_intr
 1281              		.thumb
 1282              		.thumb_func
 1284              	dwc_otg_handle_wakeup_detected_intr:
 1285              	.LFB26:
 451:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 452:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** /**
 453:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * This interrupt indicates that the DWC_otg controller has detected a
 454:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * resume or remote wakeup sequence. If the DWC_otg controller is in
 455:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * low power mode, the handler must brings the controller out of low
 456:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * power mode. The controller automatically begins resume
 457:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * signaling. The handler schedules a time to stop resume signaling.
 458:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  */
 459:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** int32_t dwc_otg_handle_wakeup_detected_intr(dwc_otg_core_if_t * core_if)
 460:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** {
 1286              		.loc 2 460 0
 1287              		.cfi_startproc
 1288              		@ args = 0, pretend = 0, frame = 24
 1289              		@ frame_needed = 1, uses_anonymous_args = 0
 1290 0000 80B5     		push	{r7, lr}
 1291              	.LCFI45:
 1292              		.cfi_def_cfa_offset 8
 1293              		.cfi_offset 7, -8
 1294              		.cfi_offset 14, -4
 1295 0002 86B0     		sub	sp, sp, #24
 1296              	.LCFI46:
 1297              		.cfi_def_cfa_offset 32
 1298 0004 00AF     		add	r7, sp, #0
 1299              	.LCFI47:
 1300              		.cfi_def_cfa_register 7
 1301 0006 7860     		str	r0, [r7, #4]
 461:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintsts_data_t gintsts;
 462:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 463:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_DEBUGPL(DBG_ANY,
 464:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		    "++Resume and Remote Wakeup Detected Interrupt++\n");
 465:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 466:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_PRINTF("%s lxstate = %d\n", __func__, core_if->lx_state);
 467:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 468:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (dwc_otg_is_device_mode(core_if)) {
 1302              		.loc 2 468 0
 1303 0008 7868     		ldr	r0, [r7, #4]
 1304 000a FFF7FEFF 		bl	dwc_otg_is_device_mode
 1305 000e 0346     		mov	r3, r0
 1306 0010 002B     		cmp	r3, #0
 1307 0012 58D0     		beq	.L52
 1308              	.LBB2:
 469:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 470:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		dctl_data_t dctl = {.d32 = 0 };
 1309              		.loc 2 470 0
 1310 0014 4FF00003 		mov	r3, #0
 1311 0018 3B61     		str	r3, [r7, #16]
 471:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 472:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_DEBUGPL(DBG_PCD, "DSTS=0x%0x\n",
 473:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			    DWC_READ_REG32(&core_if->dev_if->
 474:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 					   dev_global_regs->dsts));
 475:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		if (core_if->lx_state == DWC_OTG_L2) {
 1312              		.loc 2 475 0
 1313 001a 7B68     		ldr	r3, [r7, #4]
 1314 001c 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 1315 0020 022B     		cmp	r3, #2
 1316 0022 2DD1     		bne	.L53
 476:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** #ifdef PARTIAL_POWER_DOWN
 477:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			if (core_if->hwcfg4.b.power_optimiz) {
 478:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				pcgcctl_data_t power = {.d32 = 0 };
 479:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 480:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				power.d32 = DWC_READ_REG32(core_if->pcgcctl);
 481:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				DWC_DEBUGPL(DBG_CIL, "PCGCCTL=%0x\n",
 482:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 					    power.d32);
 483:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 484:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				power.b.stoppclk = 0;
 485:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				DWC_WRITE_REG32(core_if->pcgcctl, power.d32);
 486:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 487:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				power.b.pwrclmp = 0;
 488:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				DWC_WRITE_REG32(core_if->pcgcctl, power.d32);
 489:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 490:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				power.b.rstpdwnmodule = 0;
 491:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				DWC_WRITE_REG32(core_if->pcgcctl, power.d32);
 492:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			}
 493:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** #endif
 494:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			/* Clear the Remote Wakeup Signaling */
 495:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			dctl.b.rmtwkupsig = 1;
 1317              		.loc 2 495 0
 1318 0024 3B69     		ldr	r3, [r7, #16]
 1319 0026 43F00103 		orr	r3, r3, #1
 1320 002a 3B61     		str	r3, [r7, #16]
 496:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_MODIFY_REG32(&core_if->dev_if->
 1321              		.loc 2 496 0
 1322 002c 7B68     		ldr	r3, [r7, #4]
 1323 002e 9B68     		ldr	r3, [r3, #8]
 1324 0030 1B68     		ldr	r3, [r3, #0]
 1325 0032 03F10402 		add	r2, r3, #4
 1326 0036 3B69     		ldr	r3, [r7, #16]
 1327 0038 1046     		mov	r0, r2
 1328 003a 1946     		mov	r1, r3
 1329 003c 4FF00002 		mov	r2, #0
 1330 0040 FFF7FEFF 		bl	DWC_MODIFY_REG32
 497:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 					 dev_global_regs->dctl, dctl.d32, 0);
 498:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 499:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_SPINUNLOCK(core_if->lock);
 1331              		.loc 2 499 0
 1332 0044 7B68     		ldr	r3, [r7, #4]
 1333 0046 D3F8CC30 		ldr	r3, [r3, #204]
 1334 004a 1846     		mov	r0, r3
 1335 004c FFF7FEFF 		bl	DWC_SPINUNLOCK
 500:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			if (core_if->pcd_cb && core_if->pcd_cb->resume_wakeup) {
 1336              		.loc 2 500 0
 1337 0050 7B68     		ldr	r3, [r7, #4]
 1338 0052 DB6E     		ldr	r3, [r3, #108]
 1339 0054 002B     		cmp	r3, #0
 1340 0056 0CD0     		beq	.L54
 1341              		.loc 2 500 0 is_stmt 0 discriminator 1
 1342 0058 7B68     		ldr	r3, [r7, #4]
 1343 005a DB6E     		ldr	r3, [r3, #108]
 1344 005c DB68     		ldr	r3, [r3, #12]
 1345 005e 002B     		cmp	r3, #0
 1346 0060 07D0     		beq	.L54
 501:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				core_if->pcd_cb->resume_wakeup(core_if->pcd_cb->p);
 1347              		.loc 2 501 0 is_stmt 1
 1348 0062 7B68     		ldr	r3, [r7, #4]
 1349 0064 DB6E     		ldr	r3, [r3, #108]
 1350 0066 DB68     		ldr	r3, [r3, #12]
 1351 0068 7A68     		ldr	r2, [r7, #4]
 1352 006a D26E     		ldr	r2, [r2, #108]
 1353 006c 9269     		ldr	r2, [r2, #24]
 1354 006e 1046     		mov	r0, r2
 1355 0070 9847     		blx	r3
 1356              	.L54:
 502:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			}
 503:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_SPINLOCK(core_if->lock);
 1357              		.loc 2 503 0
 1358 0072 7B68     		ldr	r3, [r7, #4]
 1359 0074 D3F8CC30 		ldr	r3, [r3, #204]
 1360 0078 1846     		mov	r0, r3
 1361 007a FFF7FEFF 		bl	DWC_SPINLOCK
 1362 007e 1CE0     		b	.L55
 1363              	.L53:
 1364              	.LBB3:
 504:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		} else {
 505:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			glpmcfg_data_t lpmcfg;
 506:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			lpmcfg.d32 =
 507:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			    DWC_READ_REG32(&core_if->core_global_regs->glpmcfg);
 1365              		.loc 2 507 0
 1366 0080 7B68     		ldr	r3, [r7, #4]
 1367 0082 5B68     		ldr	r3, [r3, #4]
 1368 0084 03F15403 		add	r3, r3, #84
 1369 0088 1846     		mov	r0, r3
 1370 008a FFF7FEFF 		bl	DWC_READ_REG32
 1371 008e 0346     		mov	r3, r0
 506:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			lpmcfg.d32 =
 1372              		.loc 2 506 0
 1373 0090 FB60     		str	r3, [r7, #12]
 508:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			lpmcfg.b.hird_thres &= (~(1 << 4));
 1374              		.loc 2 508 0
 1375 0092 FB68     		ldr	r3, [r7, #12]
 1376 0094 C3F30423 		ubfx	r3, r3, #8, #5
 1377 0098 DBB2     		uxtb	r3, r3
 1378 009a 03F00F03 		and	r3, r3, #15
 1379 009e DAB2     		uxtb	r2, r3
 1380 00a0 FB68     		ldr	r3, [r7, #12]
 1381 00a2 62F30C23 		bfi	r3, r2, #8, #5
 1382 00a6 FB60     		str	r3, [r7, #12]
 509:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_WRITE_REG32(&core_if->core_global_regs->glpmcfg,
 1383              		.loc 2 509 0
 1384 00a8 7B68     		ldr	r3, [r7, #4]
 1385 00aa 5B68     		ldr	r3, [r3, #4]
 1386 00ac 03F15402 		add	r2, r3, #84
 1387 00b0 FB68     		ldr	r3, [r7, #12]
 1388 00b2 1046     		mov	r0, r2
 1389 00b4 1946     		mov	r1, r3
 1390 00b6 FFF7FEFF 		bl	DWC_WRITE_REG32
 1391              	.L55:
 1392              	.LBE3:
 510:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 					lpmcfg.d32);
 511:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		}
 512:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		/** Change to L0 state*/
 513:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		core_if->lx_state = DWC_OTG_L0;
 1393              		.loc 2 513 0
 1394 00ba 7B68     		ldr	r3, [r7, #4]
 1395 00bc 4FF00002 		mov	r2, #0
 1396 00c0 83F88020 		strb	r2, [r3, #128]
 1397 00c4 21E0     		b	.L56
 1398              	.L52:
 1399              	.LBE2:
 514:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	} else {
 515:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		if (core_if->lx_state != DWC_OTG_L1) {
 1400              		.loc 2 515 0
 1401 00c6 7B68     		ldr	r3, [r7, #4]
 1402 00c8 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 1403 00cc 012B     		cmp	r3, #1
 1404 00ce 17D0     		beq	.L57
 1405              	.LBB4:
 516:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 517:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			pcgcctl_data_t pcgcctl = {.d32 = 0 };
 1406              		.loc 2 517 0
 1407 00d0 4FF00003 		mov	r3, #0
 1408 00d4 BB60     		str	r3, [r7, #8]
 518:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 519:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			/* Restart the Phy Clock */
 520:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			pcgcctl.b.stoppclk = 1;
 1409              		.loc 2 520 0
 1410 00d6 BB68     		ldr	r3, [r7, #8]
 1411 00d8 43F00103 		orr	r3, r3, #1
 1412 00dc BB60     		str	r3, [r7, #8]
 521:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_MODIFY_REG32(core_if->pcgcctl, pcgcctl.d32, 0);
 1413              		.loc 2 521 0
 1414 00de 7B68     		ldr	r3, [r7, #4]
 1415 00e0 DA69     		ldr	r2, [r3, #28]
 1416 00e2 BB68     		ldr	r3, [r7, #8]
 1417 00e4 1046     		mov	r0, r2
 1418 00e6 1946     		mov	r1, r3
 1419 00e8 4FF00002 		mov	r2, #0
 1420 00ec FFF7FEFF 		bl	DWC_MODIFY_REG32
 522:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_TIMER_SCHEDULE(core_if->wkp_timer, 71);
 1421              		.loc 2 522 0
 1422 00f0 7B68     		ldr	r3, [r7, #4]
 1423 00f2 DB6F     		ldr	r3, [r3, #124]
 1424 00f4 1846     		mov	r0, r3
 1425 00f6 4FF04701 		mov	r1, #71
 1426 00fa FFF7FEFF 		bl	DWC_TIMER_SCHEDULE
 1427 00fe 04E0     		b	.L56
 1428              	.L57:
 1429              	.LBE4:
 523:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		} else {
 524:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			/** Change to L0 state*/
 525:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			core_if->lx_state = DWC_OTG_L0;
 1430              		.loc 2 525 0
 1431 0100 7B68     		ldr	r3, [r7, #4]
 1432 0102 4FF00002 		mov	r2, #0
 1433 0106 83F88020 		strb	r2, [r3, #128]
 1434              	.L56:
 526:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		}
 527:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	}
 528:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 529:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Clear interrupt */
 530:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintsts.d32 = 0;
 1435              		.loc 2 530 0
 1436 010a 4FF00003 		mov	r3, #0
 1437 010e 7B61     		str	r3, [r7, #20]
 531:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintsts.b.wkupintr = 1;
 1438              		.loc 2 531 0
 1439 0110 7B69     		ldr	r3, [r7, #20]
 1440 0112 43F00043 		orr	r3, r3, #-2147483648
 1441 0116 7B61     		str	r3, [r7, #20]
 532:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_WRITE_REG32(&core_if->core_global_regs->gintsts, gintsts.d32);
 1442              		.loc 2 532 0
 1443 0118 7B68     		ldr	r3, [r7, #4]
 1444 011a 5B68     		ldr	r3, [r3, #4]
 1445 011c 03F11402 		add	r2, r3, #20
 1446 0120 7B69     		ldr	r3, [r7, #20]
 1447 0122 1046     		mov	r0, r2
 1448 0124 1946     		mov	r1, r3
 1449 0126 FFF7FEFF 		bl	DWC_WRITE_REG32
 533:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 534:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	return 1;
 1450              		.loc 2 534 0
 1451 012a 4FF00103 		mov	r3, #1
 535:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** }
 1452              		.loc 2 535 0
 1453 012e 1846     		mov	r0, r3
 1454 0130 07F11807 		add	r7, r7, #24
 1455 0134 BD46     		mov	sp, r7
 1456 0136 80BD     		pop	{r7, pc}
 1457              		.cfi_endproc
 1458              	.LFE26:
 1460              		.section	.text.dwc_otg_handle_pwrdn_disconnect_intr,"ax",%progbits
 1461              		.align	2
 1462              		.thumb
 1463              		.thumb_func
 1465              	dwc_otg_handle_pwrdn_disconnect_intr:
 1466              	.LFB27:
 536:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 537:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** /**
 538:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * This interrupt indicates that the Wakeup Logic has detected a
 539:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * Device disconnect.
 540:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  */
 541:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** static int32_t dwc_otg_handle_pwrdn_disconnect_intr(dwc_otg_core_if_t *core_if)
 542:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** {
 1467              		.loc 2 542 0
 1468              		.cfi_startproc
 1469              		@ args = 0, pretend = 0, frame = 16
 1470              		@ frame_needed = 1, uses_anonymous_args = 0
 1471 0000 80B5     		push	{r7, lr}
 1472              	.LCFI48:
 1473              		.cfi_def_cfa_offset 8
 1474              		.cfi_offset 7, -8
 1475              		.cfi_offset 14, -4
 1476 0002 84B0     		sub	sp, sp, #16
 1477              	.LCFI49:
 1478              		.cfi_def_cfa_offset 24
 1479 0004 00AF     		add	r7, sp, #0
 1480              	.LCFI50:
 1481              		.cfi_def_cfa_register 7
 1482 0006 7860     		str	r0, [r7, #4]
 543:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn_data_t gpwrdn = { .d32 = 0 };
 1483              		.loc 2 543 0
 1484 0008 4FF00003 		mov	r3, #0
 1485 000c FB60     		str	r3, [r7, #12]
 544:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn_data_t gpwrdn_temp = { .d32 = 0 };
 1486              		.loc 2 544 0
 1487 000e 4FF00003 		mov	r3, #0
 1488 0012 BB60     		str	r3, [r7, #8]
 545:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 546:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn_temp.d32 = DWC_READ_REG32(&core_if->core_global_regs->gpwrdn);
 1489              		.loc 2 546 0
 1490 0014 7B68     		ldr	r3, [r7, #4]
 1491 0016 5B68     		ldr	r3, [r3, #4]
 1492 0018 03F15803 		add	r3, r3, #88
 1493 001c 1846     		mov	r0, r3
 1494 001e FFF7FEFF 		bl	DWC_READ_REG32
 1495 0022 0346     		mov	r3, r0
 1496 0024 BB60     		str	r3, [r7, #8]
 547:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 548:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_PRINTF("%s called\n", __FUNCTION__);
 549:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 550:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (!core_if->hibernation_suspend) {
 1497              		.loc 2 550 0
 1498 0026 7B68     		ldr	r3, [r7, #4]
 1499 0028 D3F8C030 		ldr	r3, [r3, #192]
 1500 002c 002B     		cmp	r3, #0
 1501 002e 02D1     		bne	.L60
 551:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_PRINTF("Already exited from Hibernation\n");
 552:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		return 1;
 1502              		.loc 2 552 0
 1503 0030 4FF00103 		mov	r3, #1
 1504 0034 A2E0     		b	.L64
 1505              	.L60:
 553:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	}
 554:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 555:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Switch on the voltage to the core */
 556:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.b.pwrdnswtch = 1;
 1506              		.loc 2 556 0
 1507 0036 FB68     		ldr	r3, [r7, #12]
 1508 0038 43F02003 		orr	r3, r3, #32
 1509 003c FB60     		str	r3, [r7, #12]
 557:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, gpwrdn.d32, 0);
 1510              		.loc 2 557 0
 1511 003e 7B68     		ldr	r3, [r7, #4]
 1512 0040 5B68     		ldr	r3, [r3, #4]
 1513 0042 03F15802 		add	r2, r3, #88
 1514 0046 FB68     		ldr	r3, [r7, #12]
 1515 0048 1046     		mov	r0, r2
 1516 004a 1946     		mov	r1, r3
 1517 004c 4FF00002 		mov	r2, #0
 1518 0050 FFF7FEFF 		bl	DWC_MODIFY_REG32
 558:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	dwc_udelay(10);
 1519              		.loc 2 558 0
 1520 0054 4FF00A00 		mov	r0, #10
 1521 0058 FFF7FEFF 		bl	DWC_UDELAY
 559:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 560:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Reset the core */
 561:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.d32 = 0;
 1522              		.loc 2 561 0
 1523 005c 4FF00003 		mov	r3, #0
 1524 0060 FB60     		str	r3, [r7, #12]
 562:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.b.pwrdnrstn = 1;
 1525              		.loc 2 562 0
 1526 0062 FB68     		ldr	r3, [r7, #12]
 1527 0064 43F01003 		orr	r3, r3, #16
 1528 0068 FB60     		str	r3, [r7, #12]
 563:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, gpwrdn.d32, 0);
 1529              		.loc 2 563 0
 1530 006a 7B68     		ldr	r3, [r7, #4]
 1531 006c 5B68     		ldr	r3, [r3, #4]
 1532 006e 03F15802 		add	r2, r3, #88
 1533 0072 FB68     		ldr	r3, [r7, #12]
 1534 0074 1046     		mov	r0, r2
 1535 0076 1946     		mov	r1, r3
 1536 0078 4FF00002 		mov	r2, #0
 1537 007c FFF7FEFF 		bl	DWC_MODIFY_REG32
 564:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	dwc_udelay(10);
 1538              		.loc 2 564 0
 1539 0080 4FF00A00 		mov	r0, #10
 1540 0084 FFF7FEFF 		bl	DWC_UDELAY
 565:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 566:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Disable power clamps*/
 567:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.d32 = 0;
 1541              		.loc 2 567 0
 1542 0088 4FF00003 		mov	r3, #0
 1543 008c FB60     		str	r3, [r7, #12]
 568:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.b.pwrdnclmp = 1;
 1544              		.loc 2 568 0
 1545 008e FB68     		ldr	r3, [r7, #12]
 1546 0090 43F00803 		orr	r3, r3, #8
 1547 0094 FB60     		str	r3, [r7, #12]
 569:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, gpwrdn.d32, 0);
 1548              		.loc 2 569 0
 1549 0096 7B68     		ldr	r3, [r7, #4]
 1550 0098 5B68     		ldr	r3, [r3, #4]
 1551 009a 03F15802 		add	r2, r3, #88
 1552 009e FB68     		ldr	r3, [r7, #12]
 1553 00a0 1046     		mov	r0, r2
 1554 00a2 1946     		mov	r1, r3
 1555 00a4 4FF00002 		mov	r2, #0
 1556 00a8 FFF7FEFF 		bl	DWC_MODIFY_REG32
 570:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 571:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Remove reset the core signal */
 572:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.d32 = 0;
 1557              		.loc 2 572 0
 1558 00ac 4FF00003 		mov	r3, #0
 1559 00b0 FB60     		str	r3, [r7, #12]
 573:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.b.pwrdnrstn = 1;
 1560              		.loc 2 573 0
 1561 00b2 FB68     		ldr	r3, [r7, #12]
 1562 00b4 43F01003 		orr	r3, r3, #16
 1563 00b8 FB60     		str	r3, [r7, #12]
 574:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, 0, gpwrdn.d32);
 1564              		.loc 2 574 0
 1565 00ba 7B68     		ldr	r3, [r7, #4]
 1566 00bc 5B68     		ldr	r3, [r3, #4]
 1567 00be 03F15802 		add	r2, r3, #88
 1568 00c2 FB68     		ldr	r3, [r7, #12]
 1569 00c4 1046     		mov	r0, r2
 1570 00c6 4FF00001 		mov	r1, #0
 1571 00ca 1A46     		mov	r2, r3
 1572 00cc FFF7FEFF 		bl	DWC_MODIFY_REG32
 575:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	dwc_udelay(10);
 1573              		.loc 2 575 0
 1574 00d0 4FF00A00 		mov	r0, #10
 1575 00d4 FFF7FEFF 		bl	DWC_UDELAY
 576:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 577:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Disable PMU interrupt */
 578:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.d32 = 0;
 1576              		.loc 2 578 0
 1577 00d8 4FF00003 		mov	r3, #0
 1578 00dc FB60     		str	r3, [r7, #12]
 579:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.b.pmuintsel = 1;
 1579              		.loc 2 579 0
 1580 00de FB68     		ldr	r3, [r7, #12]
 1581 00e0 43F00103 		orr	r3, r3, #1
 1582 00e4 FB60     		str	r3, [r7, #12]
 580:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, gpwrdn.d32, 0);
 1583              		.loc 2 580 0
 1584 00e6 7B68     		ldr	r3, [r7, #4]
 1585 00e8 5B68     		ldr	r3, [r3, #4]
 1586 00ea 03F15802 		add	r2, r3, #88
 1587 00ee FB68     		ldr	r3, [r7, #12]
 1588 00f0 1046     		mov	r0, r2
 1589 00f2 1946     		mov	r1, r3
 1590 00f4 4FF00002 		mov	r2, #0
 1591 00f8 FFF7FEFF 		bl	DWC_MODIFY_REG32
 581:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 582:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	core_if->hibernation_suspend = 0;
 1592              		.loc 2 582 0
 1593 00fc 7B68     		ldr	r3, [r7, #4]
 1594 00fe 4FF00002 		mov	r2, #0
 1595 0102 C3F8C020 		str	r2, [r3, #192]
 583:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 584:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Disable PMU */
 585:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.d32 = 0;
 1596              		.loc 2 585 0
 1597 0106 4FF00003 		mov	r3, #0
 1598 010a FB60     		str	r3, [r7, #12]
 586:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.b.pmuactv = 1;
 1599              		.loc 2 586 0
 1600 010c FB68     		ldr	r3, [r7, #12]
 1601 010e 43F00203 		orr	r3, r3, #2
 1602 0112 FB60     		str	r3, [r7, #12]
 587:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, gpwrdn.d32, 0);
 1603              		.loc 2 587 0
 1604 0114 7B68     		ldr	r3, [r7, #4]
 1605 0116 5B68     		ldr	r3, [r3, #4]
 1606 0118 03F15802 		add	r2, r3, #88
 1607 011c FB68     		ldr	r3, [r7, #12]
 1608 011e 1046     		mov	r0, r2
 1609 0120 1946     		mov	r1, r3
 1610 0122 4FF00002 		mov	r2, #0
 1611 0126 FFF7FEFF 		bl	DWC_MODIFY_REG32
 588:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	dwc_udelay(10);
 1612              		.loc 2 588 0
 1613 012a 4FF00A00 		mov	r0, #10
 1614 012e FFF7FEFF 		bl	DWC_UDELAY
 589:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 590:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (gpwrdn_temp.b.idsts) {
 1615              		.loc 2 590 0
 1616 0132 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 1617 0134 03F02003 		and	r3, r3, #32
 1618 0138 DBB2     		uxtb	r3, r3
 1619 013a 002B     		cmp	r3, #0
 1620 013c 0ED0     		beq	.L62
 591:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		core_if->op_state = B_PERIPHERAL;
 1621              		.loc 2 591 0
 1622 013e 7B68     		ldr	r3, [r7, #4]
 1623 0140 4FF00402 		mov	r2, #4
 1624 0144 83F86420 		strb	r2, [r3, #100]
 592:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		dwc_otg_core_init(core_if);
 1625              		.loc 2 592 0
 1626 0148 7868     		ldr	r0, [r7, #4]
 1627 014a FFF7FEFF 		bl	dwc_otg_core_init
 593:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		dwc_otg_enable_global_interrupts(core_if);
 1628              		.loc 2 593 0
 1629 014e 7868     		ldr	r0, [r7, #4]
 1630 0150 FFF7FEFF 		bl	dwc_otg_enable_global_interrupts
 594:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		cil_pcd_start(core_if);
 1631              		.loc 2 594 0
 1632 0154 7868     		ldr	r0, [r7, #4]
 1633 0156 FFF7FEFF 		bl	cil_pcd_start
 1634 015a 0DE0     		b	.L63
 1635              	.L62:
 595:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	} else {
 596:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		core_if->op_state = A_HOST;
 1636              		.loc 2 596 0
 1637 015c 7B68     		ldr	r3, [r7, #4]
 1638 015e 4FF00102 		mov	r2, #1
 1639 0162 83F86420 		strb	r2, [r3, #100]
 597:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		dwc_otg_core_init(core_if);
 1640              		.loc 2 597 0
 1641 0166 7868     		ldr	r0, [r7, #4]
 1642 0168 FFF7FEFF 		bl	dwc_otg_core_init
 598:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		dwc_otg_enable_global_interrupts(core_if);
 1643              		.loc 2 598 0
 1644 016c 7868     		ldr	r0, [r7, #4]
 1645 016e FFF7FEFF 		bl	dwc_otg_enable_global_interrupts
 599:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		cil_hcd_start(core_if);
 1646              		.loc 2 599 0
 1647 0172 7868     		ldr	r0, [r7, #4]
 1648 0174 FFF7FEFF 		bl	cil_hcd_start
 1649              	.L63:
 600:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	}
 601:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 602:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	return 1;
 1650              		.loc 2 602 0
 1651 0178 4FF00103 		mov	r3, #1
 1652              	.L64:
 603:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** }
 1653              		.loc 2 603 0
 1654 017c 1846     		mov	r0, r3
 1655 017e 07F11007 		add	r7, r7, #16
 1656 0182 BD46     		mov	sp, r7
 1657 0184 80BD     		pop	{r7, pc}
 1658              		.cfi_endproc
 1659              	.LFE27:
 1661 0186 00BF     		.section	.text.dwc_otg_handle_pwrdn_wakeup_detected_intr,"ax",%progbits
 1662              		.align	2
 1663              		.thumb
 1664              		.thumb_func
 1666              	dwc_otg_handle_pwrdn_wakeup_detected_intr:
 1667              	.LFB28:
 604:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 605:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** /**
 606:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * This interrupt indicates that the Wakeup Logic has detected a
 607:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * remote wakeup sequence.
 608:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  */
 609:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** static int32_t dwc_otg_handle_pwrdn_wakeup_detected_intr(dwc_otg_core_if_t * core_if)
 610:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** {
 1668              		.loc 2 610 0
 1669              		.cfi_startproc
 1670              		@ args = 0, pretend = 0, frame = 16
 1671              		@ frame_needed = 1, uses_anonymous_args = 0
 1672 0000 80B5     		push	{r7, lr}
 1673              	.LCFI51:
 1674              		.cfi_def_cfa_offset 8
 1675              		.cfi_offset 7, -8
 1676              		.cfi_offset 14, -4
 1677 0002 84B0     		sub	sp, sp, #16
 1678              	.LCFI52:
 1679              		.cfi_def_cfa_offset 24
 1680 0004 00AF     		add	r7, sp, #0
 1681              	.LCFI53:
 1682              		.cfi_def_cfa_register 7
 1683 0006 7860     		str	r0, [r7, #4]
 611:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn_data_t gpwrdn = {.d32 = 0 };
 1684              		.loc 2 611 0
 1685 0008 4FF00003 		mov	r3, #0
 1686 000c FB60     		str	r3, [r7, #12]
 612:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 613:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_DEBUGPL(DBG_ANY,
 614:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		    "++Powerdown Remote Wakeup Detected Interrupt++\n");
 615:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 616:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (!core_if->hibernation_suspend) {
 1687              		.loc 2 616 0
 1688 000e 7B68     		ldr	r3, [r7, #4]
 1689 0010 D3F8C030 		ldr	r3, [r3, #192]
 1690 0014 002B     		cmp	r3, #0
 1691 0016 02D1     		bne	.L66
 617:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_PRINTF("Already exited from Hibernation\n");
 618:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		return 1;
 1692              		.loc 2 618 0
 1693 0018 4FF00103 		mov	r3, #1
 1694 001c 33E0     		b	.L70
 1695              	.L66:
 619:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	}
 620:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 621:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.d32 = DWC_READ_REG32(&core_if->core_global_regs->gpwrdn);
 1696              		.loc 2 621 0
 1697 001e 7B68     		ldr	r3, [r7, #4]
 1698 0020 5B68     		ldr	r3, [r3, #4]
 1699 0022 03F15803 		add	r3, r3, #88
 1700 0026 1846     		mov	r0, r3
 1701 0028 FFF7FEFF 		bl	DWC_READ_REG32
 1702 002c 0346     		mov	r3, r0
 1703 002e FB60     		str	r3, [r7, #12]
 622:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (gpwrdn.b.idsts) {	// Device Mode
 1704              		.loc 2 622 0
 1705 0030 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1706 0032 03F02003 		and	r3, r3, #32
 1707 0036 DBB2     		uxtb	r3, r3
 1708 0038 002B     		cmp	r3, #0
 1709 003a 11D0     		beq	.L68
 623:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		if ((core_if->power_down == 2)
 1710              		.loc 2 623 0
 1711 003c 7B68     		ldr	r3, [r7, #4]
 1712 003e D3F89030 		ldr	r3, [r3, #144]
 1713 0042 022B     		cmp	r3, #2
 1714 0044 1DD1     		bne	.L69
 624:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		    && (core_if->hibernation_suspend == 1)) {
 1715              		.loc 2 624 0
 1716 0046 7B68     		ldr	r3, [r7, #4]
 1717 0048 D3F8C030 		ldr	r3, [r3, #192]
 1718 004c 012B     		cmp	r3, #1
 1719 004e 18D1     		bne	.L69
 625:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			dwc_otg_device_hibernation_restore(core_if, 0, 0);
 1720              		.loc 2 625 0
 1721 0050 7868     		ldr	r0, [r7, #4]
 1722 0052 4FF00001 		mov	r1, #0
 1723 0056 4FF00002 		mov	r2, #0
 1724 005a FFF7FEFF 		bl	dwc_otg_device_hibernation_restore
 1725 005e 10E0     		b	.L69
 1726              	.L68:
 626:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		}
 627:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	} else {
 628:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		if ((core_if->power_down == 2)
 1727              		.loc 2 628 0
 1728 0060 7B68     		ldr	r3, [r7, #4]
 1729 0062 D3F89030 		ldr	r3, [r3, #144]
 1730 0066 022B     		cmp	r3, #2
 1731 0068 0BD1     		bne	.L69
 629:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		    && (core_if->hibernation_suspend == 1)) {
 1732              		.loc 2 629 0
 1733 006a 7B68     		ldr	r3, [r7, #4]
 1734 006c D3F8C030 		ldr	r3, [r3, #192]
 1735 0070 012B     		cmp	r3, #1
 1736 0072 06D1     		bne	.L69
 630:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			dwc_otg_host_hibernation_restore(core_if, 1, 0);
 1737              		.loc 2 630 0
 1738 0074 7868     		ldr	r0, [r7, #4]
 1739 0076 4FF00101 		mov	r1, #1
 1740 007a 4FF00002 		mov	r2, #0
 1741 007e FFF7FEFF 		bl	dwc_otg_host_hibernation_restore
 1742              	.L69:
 631:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		}
 632:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	}
 633:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	return 1;
 1743              		.loc 2 633 0
 1744 0082 4FF00103 		mov	r3, #1
 1745              	.L70:
 634:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** }
 1746              		.loc 2 634 0
 1747 0086 1846     		mov	r0, r3
 1748 0088 07F11007 		add	r7, r7, #16
 1749 008c BD46     		mov	sp, r7
 1750 008e 80BD     		pop	{r7, pc}
 1751              		.cfi_endproc
 1752              	.LFE28:
 1754              		.section	.text.dwc_otg_handle_pwrdn_idsts_change,"ax",%progbits
 1755              		.align	2
 1756              		.thumb
 1757              		.thumb_func
 1759              	dwc_otg_handle_pwrdn_idsts_change:
 1760              	.LFB29:
 635:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 636:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** static int32_t dwc_otg_handle_pwrdn_idsts_change(dwc_otg_core_if_t * core_if)
 637:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** {
 1761              		.loc 2 637 0
 1762              		.cfi_startproc
 1763              		@ args = 0, pretend = 0, frame = 16
 1764              		@ frame_needed = 1, uses_anonymous_args = 0
 1765 0000 80B5     		push	{r7, lr}
 1766              	.LCFI54:
 1767              		.cfi_def_cfa_offset 8
 1768              		.cfi_offset 7, -8
 1769              		.cfi_offset 14, -4
 1770 0002 84B0     		sub	sp, sp, #16
 1771              	.LCFI55:
 1772              		.cfi_def_cfa_offset 24
 1773 0004 00AF     		add	r7, sp, #0
 1774              	.LCFI56:
 1775              		.cfi_def_cfa_register 7
 1776 0006 7860     		str	r0, [r7, #4]
 638:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn_data_t gpwrdn = {.d32 = 0 };
 1777              		.loc 2 638 0
 1778 0008 4FF00003 		mov	r3, #0
 1779 000c FB60     		str	r3, [r7, #12]
 639:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn_data_t gpwrdn_temp = {.d32 = 0 };
 1780              		.loc 2 639 0
 1781 000e 4FF00003 		mov	r3, #0
 1782 0012 BB60     		str	r3, [r7, #8]
 640:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 641:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (!core_if->hibernation_suspend) {
 1783              		.loc 2 641 0
 1784 0014 7B68     		ldr	r3, [r7, #4]
 1785 0016 D3F8C030 		ldr	r3, [r3, #192]
 1786 001a 002B     		cmp	r3, #0
 1787 001c 02D1     		bne	.L72
 642:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_PRINTF("Already exited from Hibernation\n");
 643:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		return 1;
 1788              		.loc 2 643 0
 1789 001e 4FF00103 		mov	r3, #1
 1790 0022 C8E0     		b	.L77
 1791              	.L72:
 644:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	}
 645:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 646:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_DEBUGPL(DBG_ANY, "%s called\n", __FUNCTION__);
 647:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn_temp.d32 = DWC_READ_REG32(&core_if->core_global_regs->gpwrdn);
 1792              		.loc 2 647 0
 1793 0024 7B68     		ldr	r3, [r7, #4]
 1794 0026 5B68     		ldr	r3, [r3, #4]
 1795 0028 03F15803 		add	r3, r3, #88
 1796 002c 1846     		mov	r0, r3
 1797 002e FFF7FEFF 		bl	DWC_READ_REG32
 1798 0032 0346     		mov	r3, r0
 1799 0034 BB60     		str	r3, [r7, #8]
 648:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 649:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Switch on the voltage to the core */
 650:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.b.pwrdnswtch = 1;
 1800              		.loc 2 650 0
 1801 0036 FB68     		ldr	r3, [r7, #12]
 1802 0038 43F02003 		orr	r3, r3, #32
 1803 003c FB60     		str	r3, [r7, #12]
 651:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, gpwrdn.d32, 0);
 1804              		.loc 2 651 0
 1805 003e 7B68     		ldr	r3, [r7, #4]
 1806 0040 5B68     		ldr	r3, [r3, #4]
 1807 0042 03F15802 		add	r2, r3, #88
 1808 0046 FB68     		ldr	r3, [r7, #12]
 1809 0048 1046     		mov	r0, r2
 1810 004a 1946     		mov	r1, r3
 1811 004c 4FF00002 		mov	r2, #0
 1812 0050 FFF7FEFF 		bl	DWC_MODIFY_REG32
 652:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	dwc_udelay(10);
 1813              		.loc 2 652 0
 1814 0054 4FF00A00 		mov	r0, #10
 1815 0058 FFF7FEFF 		bl	DWC_UDELAY
 653:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 654:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Reset the core */
 655:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.d32 = 0;
 1816              		.loc 2 655 0
 1817 005c 4FF00003 		mov	r3, #0
 1818 0060 FB60     		str	r3, [r7, #12]
 656:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.b.pwrdnrstn = 1;
 1819              		.loc 2 656 0
 1820 0062 FB68     		ldr	r3, [r7, #12]
 1821 0064 43F01003 		orr	r3, r3, #16
 1822 0068 FB60     		str	r3, [r7, #12]
 657:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, gpwrdn.d32, 0);
 1823              		.loc 2 657 0
 1824 006a 7B68     		ldr	r3, [r7, #4]
 1825 006c 5B68     		ldr	r3, [r3, #4]
 1826 006e 03F15802 		add	r2, r3, #88
 1827 0072 FB68     		ldr	r3, [r7, #12]
 1828 0074 1046     		mov	r0, r2
 1829 0076 1946     		mov	r1, r3
 1830 0078 4FF00002 		mov	r2, #0
 1831 007c FFF7FEFF 		bl	DWC_MODIFY_REG32
 658:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	dwc_udelay(10);
 1832              		.loc 2 658 0
 1833 0080 4FF00A00 		mov	r0, #10
 1834 0084 FFF7FEFF 		bl	DWC_UDELAY
 659:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 660:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Disable power clamps */
 661:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.d32 = 0;
 1835              		.loc 2 661 0
 1836 0088 4FF00003 		mov	r3, #0
 1837 008c FB60     		str	r3, [r7, #12]
 662:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.b.pwrdnclmp = 1;
 1838              		.loc 2 662 0
 1839 008e FB68     		ldr	r3, [r7, #12]
 1840 0090 43F00803 		orr	r3, r3, #8
 1841 0094 FB60     		str	r3, [r7, #12]
 663:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, gpwrdn.d32, 0);
 1842              		.loc 2 663 0
 1843 0096 7B68     		ldr	r3, [r7, #4]
 1844 0098 5B68     		ldr	r3, [r3, #4]
 1845 009a 03F15802 		add	r2, r3, #88
 1846 009e FB68     		ldr	r3, [r7, #12]
 1847 00a0 1046     		mov	r0, r2
 1848 00a2 1946     		mov	r1, r3
 1849 00a4 4FF00002 		mov	r2, #0
 1850 00a8 FFF7FEFF 		bl	DWC_MODIFY_REG32
 664:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 665:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Remove reset the core signal */
 666:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.d32 = 0;
 1851              		.loc 2 666 0
 1852 00ac 4FF00003 		mov	r3, #0
 1853 00b0 FB60     		str	r3, [r7, #12]
 667:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.b.pwrdnrstn = 1;
 1854              		.loc 2 667 0
 1855 00b2 FB68     		ldr	r3, [r7, #12]
 1856 00b4 43F01003 		orr	r3, r3, #16
 1857 00b8 FB60     		str	r3, [r7, #12]
 668:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, 0, gpwrdn.d32);
 1858              		.loc 2 668 0
 1859 00ba 7B68     		ldr	r3, [r7, #4]
 1860 00bc 5B68     		ldr	r3, [r3, #4]
 1861 00be 03F15802 		add	r2, r3, #88
 1862 00c2 FB68     		ldr	r3, [r7, #12]
 1863 00c4 1046     		mov	r0, r2
 1864 00c6 4FF00001 		mov	r1, #0
 1865 00ca 1A46     		mov	r2, r3
 1866 00cc FFF7FEFF 		bl	DWC_MODIFY_REG32
 669:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	dwc_udelay(10);
 1867              		.loc 2 669 0
 1868 00d0 4FF00A00 		mov	r0, #10
 1869 00d4 FFF7FEFF 		bl	DWC_UDELAY
 670:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 671:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Disable PMU interrupt */
 672:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.d32 = 0;
 1870              		.loc 2 672 0
 1871 00d8 4FF00003 		mov	r3, #0
 1872 00dc FB60     		str	r3, [r7, #12]
 673:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.b.pmuintsel = 1;
 1873              		.loc 2 673 0
 1874 00de FB68     		ldr	r3, [r7, #12]
 1875 00e0 43F00103 		orr	r3, r3, #1
 1876 00e4 FB60     		str	r3, [r7, #12]
 674:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, gpwrdn.d32, 0);
 1877              		.loc 2 674 0
 1878 00e6 7B68     		ldr	r3, [r7, #4]
 1879 00e8 5B68     		ldr	r3, [r3, #4]
 1880 00ea 03F15802 		add	r2, r3, #88
 1881 00ee FB68     		ldr	r3, [r7, #12]
 1882 00f0 1046     		mov	r0, r2
 1883 00f2 1946     		mov	r1, r3
 1884 00f4 4FF00002 		mov	r2, #0
 1885 00f8 FFF7FEFF 		bl	DWC_MODIFY_REG32
 675:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 676:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/*Indicates that we are exiting from hibernation */
 677:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	core_if->hibernation_suspend = 0;
 1886              		.loc 2 677 0
 1887 00fc 7B68     		ldr	r3, [r7, #4]
 1888 00fe 4FF00002 		mov	r2, #0
 1889 0102 C3F8C020 		str	r2, [r3, #192]
 678:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 679:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Disable PMU */
 680:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.d32 = 0;
 1890              		.loc 2 680 0
 1891 0106 4FF00003 		mov	r3, #0
 1892 010a FB60     		str	r3, [r7, #12]
 681:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.b.pmuactv = 1;
 1893              		.loc 2 681 0
 1894 010c FB68     		ldr	r3, [r7, #12]
 1895 010e 43F00203 		orr	r3, r3, #2
 1896 0112 FB60     		str	r3, [r7, #12]
 682:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, gpwrdn.d32, 0);
 1897              		.loc 2 682 0
 1898 0114 7B68     		ldr	r3, [r7, #4]
 1899 0116 5B68     		ldr	r3, [r3, #4]
 1900 0118 03F15802 		add	r2, r3, #88
 1901 011c FB68     		ldr	r3, [r7, #12]
 1902 011e 1046     		mov	r0, r2
 1903 0120 1946     		mov	r1, r3
 1904 0122 4FF00002 		mov	r2, #0
 1905 0126 FFF7FEFF 		bl	DWC_MODIFY_REG32
 683:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	dwc_udelay(10);
 1906              		.loc 2 683 0
 1907 012a 4FF00A00 		mov	r0, #10
 1908 012e FFF7FEFF 		bl	DWC_UDELAY
 684:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 685:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.d32 = core_if->gr_backup->gpwrdn_local;
 1909              		.loc 2 685 0
 1910 0132 7B68     		ldr	r3, [r7, #4]
 1911 0134 D3F88430 		ldr	r3, [r3, #132]
 1912 0138 9B6C     		ldr	r3, [r3, #72]
 1913 013a FB60     		str	r3, [r7, #12]
 686:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (gpwrdn.b.dis_vbus == 1) {
 1914              		.loc 2 686 0
 1915 013c 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1916 013e 03F04003 		and	r3, r3, #64
 1917 0142 DBB2     		uxtb	r3, r3
 1918 0144 002B     		cmp	r3, #0
 1919 0146 11D0     		beq	.L74
 687:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		gpwrdn.d32 = 0;
 1920              		.loc 2 687 0
 1921 0148 4FF00003 		mov	r3, #0
 1922 014c FB60     		str	r3, [r7, #12]
 688:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		gpwrdn.b.dis_vbus = 1;
 1923              		.loc 2 688 0
 1924 014e FB68     		ldr	r3, [r7, #12]
 1925 0150 43F04003 		orr	r3, r3, #64
 1926 0154 FB60     		str	r3, [r7, #12]
 689:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, gpwrdn.d32, 0);
 1927              		.loc 2 689 0
 1928 0156 7B68     		ldr	r3, [r7, #4]
 1929 0158 5B68     		ldr	r3, [r3, #4]
 1930 015a 03F15802 		add	r2, r3, #88
 1931 015e FB68     		ldr	r3, [r7, #12]
 1932 0160 1046     		mov	r0, r2
 1933 0162 1946     		mov	r1, r3
 1934 0164 4FF00002 		mov	r2, #0
 1935 0168 FFF7FEFF 		bl	DWC_MODIFY_REG32
 1936              	.L74:
 690:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	}
 691:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 692:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (gpwrdn_temp.b.idsts) {
 1937              		.loc 2 692 0
 1938 016c BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 1939 016e 03F02003 		and	r3, r3, #32
 1940 0172 DBB2     		uxtb	r3, r3
 1941 0174 002B     		cmp	r3, #0
 1942 0176 0ED0     		beq	.L75
 693:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		core_if->op_state = B_PERIPHERAL;
 1943              		.loc 2 693 0
 1944 0178 7B68     		ldr	r3, [r7, #4]
 1945 017a 4FF00402 		mov	r2, #4
 1946 017e 83F86420 		strb	r2, [r3, #100]
 694:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		dwc_otg_core_init(core_if);
 1947              		.loc 2 694 0
 1948 0182 7868     		ldr	r0, [r7, #4]
 1949 0184 FFF7FEFF 		bl	dwc_otg_core_init
 695:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		dwc_otg_enable_global_interrupts(core_if);
 1950              		.loc 2 695 0
 1951 0188 7868     		ldr	r0, [r7, #4]
 1952 018a FFF7FEFF 		bl	dwc_otg_enable_global_interrupts
 696:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		cil_pcd_start(core_if);
 1953              		.loc 2 696 0
 1954 018e 7868     		ldr	r0, [r7, #4]
 1955 0190 FFF7FEFF 		bl	cil_pcd_start
 1956 0194 0DE0     		b	.L76
 1957              	.L75:
 697:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	} else {
 698:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		core_if->op_state = A_HOST;
 1958              		.loc 2 698 0
 1959 0196 7B68     		ldr	r3, [r7, #4]
 1960 0198 4FF00102 		mov	r2, #1
 1961 019c 83F86420 		strb	r2, [r3, #100]
 699:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		dwc_otg_core_init(core_if);
 1962              		.loc 2 699 0
 1963 01a0 7868     		ldr	r0, [r7, #4]
 1964 01a2 FFF7FEFF 		bl	dwc_otg_core_init
 700:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		dwc_otg_enable_global_interrupts(core_if);
 1965              		.loc 2 700 0
 1966 01a6 7868     		ldr	r0, [r7, #4]
 1967 01a8 FFF7FEFF 		bl	dwc_otg_enable_global_interrupts
 701:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		cil_hcd_start(core_if);
 1968              		.loc 2 701 0
 1969 01ac 7868     		ldr	r0, [r7, #4]
 1970 01ae FFF7FEFF 		bl	cil_hcd_start
 1971              	.L76:
 702:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	}
 703:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 704:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	return 1;
 1972              		.loc 2 704 0
 1973 01b2 4FF00103 		mov	r3, #1
 1974              	.L77:
 705:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** }
 1975              		.loc 2 705 0
 1976 01b6 1846     		mov	r0, r3
 1977 01b8 07F11007 		add	r7, r7, #16
 1978 01bc BD46     		mov	sp, r7
 1979 01be 80BD     		pop	{r7, pc}
 1980              		.cfi_endproc
 1981              	.LFE29:
 1983              		.section	.text.dwc_otg_handle_pwrdn_session_change,"ax",%progbits
 1984              		.align	2
 1985              		.thumb
 1986              		.thumb_func
 1988              	dwc_otg_handle_pwrdn_session_change:
 1989              	.LFB30:
 706:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 707:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** static int32_t dwc_otg_handle_pwrdn_session_change(dwc_otg_core_if_t * core_if)
 708:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** {
 1990              		.loc 2 708 0
 1991              		.cfi_startproc
 1992              		@ args = 0, pretend = 0, frame = 16
 1993              		@ frame_needed = 1, uses_anonymous_args = 0
 1994 0000 90B5     		push	{r4, r7, lr}
 1995              	.LCFI57:
 1996              		.cfi_def_cfa_offset 12
 1997              		.cfi_offset 4, -12
 1998              		.cfi_offset 7, -8
 1999              		.cfi_offset 14, -4
 2000 0002 85B0     		sub	sp, sp, #20
 2001              	.LCFI58:
 2002              		.cfi_def_cfa_offset 32
 2003 0004 00AF     		add	r7, sp, #0
 2004              	.LCFI59:
 2005              		.cfi_def_cfa_register 7
 2006 0006 7860     		str	r0, [r7, #4]
 709:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn_data_t gpwrdn = {.d32 = 0 };
 2007              		.loc 2 709 0
 2008 0008 4FF00003 		mov	r3, #0
 2009 000c BB60     		str	r3, [r7, #8]
 710:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	
 711:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	int32_t otg_cap_param = core_if->core_params->otg_cap;
 2010              		.loc 2 711 0
 2011 000e 7B68     		ldr	r3, [r7, #4]
 2012 0010 1B68     		ldr	r3, [r3, #0]
 2013 0012 5B68     		ldr	r3, [r3, #4]
 2014 0014 FB60     		str	r3, [r7, #12]
 712:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 713:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_DEBUGPL(DBG_ANY, "%s called\n", __FUNCTION__);
 714:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 715:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.d32 = DWC_READ_REG32(&core_if->core_global_regs->gpwrdn);
 2015              		.loc 2 715 0
 2016 0016 7B68     		ldr	r3, [r7, #4]
 2017 0018 5B68     		ldr	r3, [r3, #4]
 2018 001a 03F15803 		add	r3, r3, #88
 2019 001e 1846     		mov	r0, r3
 2020 0020 FFF7FEFF 		bl	DWC_READ_REG32
 2021 0024 0346     		mov	r3, r0
 2022 0026 BB60     		str	r3, [r7, #8]
 716:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (!core_if->hibernation_suspend) {
 2023              		.loc 2 716 0
 2024 0028 7B68     		ldr	r3, [r7, #4]
 2025 002a D3F8C030 		ldr	r3, [r3, #192]
 2026 002e 002B     		cmp	r3, #0
 2027 0030 02D1     		bne	.L79
 717:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_PRINTF("Already exited from Hibernation\n");
 718:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		return 1;
 2028              		.loc 2 718 0
 2029 0032 4FF00103 		mov	r3, #1
 2030 0036 B8E0     		b	.L85
 2031              	.L79:
 719:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	}
 720:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 721:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if ((otg_cap_param != DWC_OTG_CAP_PARAM_HNP_SRP_CAPABLE ||
 2032              		.loc 2 721 0
 2033 0038 FB68     		ldr	r3, [r7, #12]
 2034 003a 002B     		cmp	r3, #0
 2035 003c 02D1     		bne	.L81
 2036              		.loc 2 721 0 is_stmt 0 discriminator 1
 2037 003e FB68     		ldr	r3, [r7, #12]
 2038 0040 012B     		cmp	r3, #1
 2039 0042 14D0     		beq	.L82
 2040              	.L81:
 722:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	     otg_cap_param != DWC_OTG_CAP_PARAM_SRP_ONLY_CAPABLE) &&
 723:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	    gpwrdn.b.bsessvld == 0) {
 2041              		.loc 2 723 0 is_stmt 1
 2042 0044 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 2043 0046 03F04003 		and	r3, r3, #64
 2044 004a DBB2     		uxtb	r3, r3
 722:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	     otg_cap_param != DWC_OTG_CAP_PARAM_SRP_ONLY_CAPABLE) &&
 2045              		.loc 2 722 0
 2046 004c 002B     		cmp	r3, #0
 2047 004e 0ED1     		bne	.L82
 724:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		/* Save gpwrdn register for further usage if stschng interrupt */
 725:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		core_if->gr_backup->gpwrdn_local =
 2048              		.loc 2 725 0
 2049 0050 7B68     		ldr	r3, [r7, #4]
 2050 0052 D3F88440 		ldr	r4, [r3, #132]
 726:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		    DWC_READ_REG32(&core_if->core_global_regs->gpwrdn);
 2051              		.loc 2 726 0
 2052 0056 7B68     		ldr	r3, [r7, #4]
 2053 0058 5B68     		ldr	r3, [r3, #4]
 2054 005a 03F15803 		add	r3, r3, #88
 2055 005e 1846     		mov	r0, r3
 2056 0060 FFF7FEFF 		bl	DWC_READ_REG32
 2057 0064 0346     		mov	r3, r0
 725:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		core_if->gr_backup->gpwrdn_local =
 2058              		.loc 2 725 0
 2059 0066 A364     		str	r3, [r4, #72]
 727:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		/*Exit from ISR and wait for stschng interrupt with bsessvld = 1 */
 728:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		return 1;
 2060              		.loc 2 728 0
 2061 0068 4FF00103 		mov	r3, #1
 2062 006c 9DE0     		b	.L85
 2063              	.L82:
 729:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	}
 730:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 731:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Switch on the voltage to the core */
 732:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.d32 = 0;
 2064              		.loc 2 732 0
 2065 006e 4FF00003 		mov	r3, #0
 2066 0072 BB60     		str	r3, [r7, #8]
 733:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.b.pwrdnswtch = 1;
 2067              		.loc 2 733 0
 2068 0074 BB68     		ldr	r3, [r7, #8]
 2069 0076 43F02003 		orr	r3, r3, #32
 2070 007a BB60     		str	r3, [r7, #8]
 734:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, gpwrdn.d32, 0);
 2071              		.loc 2 734 0
 2072 007c 7B68     		ldr	r3, [r7, #4]
 2073 007e 5B68     		ldr	r3, [r3, #4]
 2074 0080 03F15802 		add	r2, r3, #88
 2075 0084 BB68     		ldr	r3, [r7, #8]
 2076 0086 1046     		mov	r0, r2
 2077 0088 1946     		mov	r1, r3
 2078 008a 4FF00002 		mov	r2, #0
 2079 008e FFF7FEFF 		bl	DWC_MODIFY_REG32
 735:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	dwc_udelay(10);
 2080              		.loc 2 735 0
 2081 0092 4FF00A00 		mov	r0, #10
 2082 0096 FFF7FEFF 		bl	DWC_UDELAY
 736:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 737:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Reset the core */
 738:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.d32 = 0;
 2083              		.loc 2 738 0
 2084 009a 4FF00003 		mov	r3, #0
 2085 009e BB60     		str	r3, [r7, #8]
 739:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.b.pwrdnrstn = 1;
 2086              		.loc 2 739 0
 2087 00a0 BB68     		ldr	r3, [r7, #8]
 2088 00a2 43F01003 		orr	r3, r3, #16
 2089 00a6 BB60     		str	r3, [r7, #8]
 740:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, gpwrdn.d32, 0);
 2090              		.loc 2 740 0
 2091 00a8 7B68     		ldr	r3, [r7, #4]
 2092 00aa 5B68     		ldr	r3, [r3, #4]
 2093 00ac 03F15802 		add	r2, r3, #88
 2094 00b0 BB68     		ldr	r3, [r7, #8]
 2095 00b2 1046     		mov	r0, r2
 2096 00b4 1946     		mov	r1, r3
 2097 00b6 4FF00002 		mov	r2, #0
 2098 00ba FFF7FEFF 		bl	DWC_MODIFY_REG32
 741:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	dwc_udelay(10);
 2099              		.loc 2 741 0
 2100 00be 4FF00A00 		mov	r0, #10
 2101 00c2 FFF7FEFF 		bl	DWC_UDELAY
 742:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 743:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Disable power clamps */
 744:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.d32 = 0;
 2102              		.loc 2 744 0
 2103 00c6 4FF00003 		mov	r3, #0
 2104 00ca BB60     		str	r3, [r7, #8]
 745:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.b.pwrdnclmp = 1;
 2105              		.loc 2 745 0
 2106 00cc BB68     		ldr	r3, [r7, #8]
 2107 00ce 43F00803 		orr	r3, r3, #8
 2108 00d2 BB60     		str	r3, [r7, #8]
 746:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, gpwrdn.d32, 0);
 2109              		.loc 2 746 0
 2110 00d4 7B68     		ldr	r3, [r7, #4]
 2111 00d6 5B68     		ldr	r3, [r3, #4]
 2112 00d8 03F15802 		add	r2, r3, #88
 2113 00dc BB68     		ldr	r3, [r7, #8]
 2114 00de 1046     		mov	r0, r2
 2115 00e0 1946     		mov	r1, r3
 2116 00e2 4FF00002 		mov	r2, #0
 2117 00e6 FFF7FEFF 		bl	DWC_MODIFY_REG32
 747:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 748:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Remove reset the core signal */
 749:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.d32 = 0;
 2118              		.loc 2 749 0
 2119 00ea 4FF00003 		mov	r3, #0
 2120 00ee BB60     		str	r3, [r7, #8]
 750:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.b.pwrdnrstn = 1;
 2121              		.loc 2 750 0
 2122 00f0 BB68     		ldr	r3, [r7, #8]
 2123 00f2 43F01003 		orr	r3, r3, #16
 2124 00f6 BB60     		str	r3, [r7, #8]
 751:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, 0, gpwrdn.d32);
 2125              		.loc 2 751 0
 2126 00f8 7B68     		ldr	r3, [r7, #4]
 2127 00fa 5B68     		ldr	r3, [r3, #4]
 2128 00fc 03F15802 		add	r2, r3, #88
 2129 0100 BB68     		ldr	r3, [r7, #8]
 2130 0102 1046     		mov	r0, r2
 2131 0104 4FF00001 		mov	r1, #0
 2132 0108 1A46     		mov	r2, r3
 2133 010a FFF7FEFF 		bl	DWC_MODIFY_REG32
 752:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	dwc_udelay(10);
 2134              		.loc 2 752 0
 2135 010e 4FF00A00 		mov	r0, #10
 2136 0112 FFF7FEFF 		bl	DWC_UDELAY
 753:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 754:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Disable PMU interrupt */
 755:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.d32 = 0;
 2137              		.loc 2 755 0
 2138 0116 4FF00003 		mov	r3, #0
 2139 011a BB60     		str	r3, [r7, #8]
 756:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.b.pmuintsel = 1;
 2140              		.loc 2 756 0
 2141 011c BB68     		ldr	r3, [r7, #8]
 2142 011e 43F00103 		orr	r3, r3, #1
 2143 0122 BB60     		str	r3, [r7, #8]
 757:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, gpwrdn.d32, 0);
 2144              		.loc 2 757 0
 2145 0124 7B68     		ldr	r3, [r7, #4]
 2146 0126 5B68     		ldr	r3, [r3, #4]
 2147 0128 03F15802 		add	r2, r3, #88
 2148 012c BB68     		ldr	r3, [r7, #8]
 2149 012e 1046     		mov	r0, r2
 2150 0130 1946     		mov	r1, r3
 2151 0132 4FF00002 		mov	r2, #0
 2152 0136 FFF7FEFF 		bl	DWC_MODIFY_REG32
 758:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	dwc_udelay(10);
 2153              		.loc 2 758 0
 2154 013a 4FF00A00 		mov	r0, #10
 2155 013e FFF7FEFF 		bl	DWC_UDELAY
 759:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 760:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/*Indicates that we are exiting from hibernation */
 761:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	core_if->hibernation_suspend = 0;
 2156              		.loc 2 761 0
 2157 0142 7B68     		ldr	r3, [r7, #4]
 2158 0144 4FF00002 		mov	r2, #0
 2159 0148 C3F8C020 		str	r2, [r3, #192]
 762:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 763:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Disable PMU */
 764:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.d32 = 0;
 2160              		.loc 2 764 0
 2161 014c 4FF00003 		mov	r3, #0
 2162 0150 BB60     		str	r3, [r7, #8]
 765:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.b.pmuactv = 1;
 2163              		.loc 2 765 0
 2164 0152 BB68     		ldr	r3, [r7, #8]
 2165 0154 43F00203 		orr	r3, r3, #2
 2166 0158 BB60     		str	r3, [r7, #8]
 766:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, gpwrdn.d32, 0);
 2167              		.loc 2 766 0
 2168 015a 7B68     		ldr	r3, [r7, #4]
 2169 015c 5B68     		ldr	r3, [r3, #4]
 2170 015e 03F15802 		add	r2, r3, #88
 2171 0162 BB68     		ldr	r3, [r7, #8]
 2172 0164 1046     		mov	r0, r2
 2173 0166 1946     		mov	r1, r3
 2174 0168 4FF00002 		mov	r2, #0
 2175 016c FFF7FEFF 		bl	DWC_MODIFY_REG32
 767:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	dwc_udelay(10);
 2176              		.loc 2 767 0
 2177 0170 4FF00A00 		mov	r0, #10
 2178 0174 FFF7FEFF 		bl	DWC_UDELAY
 768:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 769:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	core_if->op_state = B_PERIPHERAL;
 2179              		.loc 2 769 0
 2180 0178 7B68     		ldr	r3, [r7, #4]
 2181 017a 4FF00402 		mov	r2, #4
 2182 017e 83F86420 		strb	r2, [r3, #100]
 770:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	dwc_otg_core_init(core_if);
 2183              		.loc 2 770 0
 2184 0182 7868     		ldr	r0, [r7, #4]
 2185 0184 FFF7FEFF 		bl	dwc_otg_core_init
 771:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	dwc_otg_enable_global_interrupts(core_if);
 2186              		.loc 2 771 0
 2187 0188 7868     		ldr	r0, [r7, #4]
 2188 018a FFF7FEFF 		bl	dwc_otg_enable_global_interrupts
 772:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	cil_pcd_start(core_if);
 2189              		.loc 2 772 0
 2190 018e 7868     		ldr	r0, [r7, #4]
 2191 0190 FFF7FEFF 		bl	cil_pcd_start
 773:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 774:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (otg_cap_param == DWC_OTG_CAP_PARAM_HNP_SRP_CAPABLE ||
 2192              		.loc 2 774 0
 2193 0194 FB68     		ldr	r3, [r7, #12]
 2194 0196 002B     		cmp	r3, #0
 2195 0198 02D0     		beq	.L83
 2196              		.loc 2 774 0 is_stmt 0 discriminator 1
 2197 019a FB68     		ldr	r3, [r7, #12]
 2198 019c 012B     		cmp	r3, #1
 2199 019e 02D1     		bne	.L84
 2200              	.L83:
 775:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	    otg_cap_param == DWC_OTG_CAP_PARAM_SRP_ONLY_CAPABLE) {
 776:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		/*
 777:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		 * Initiate SRP after initial ADP probe.
 778:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		 */
 779:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		dwc_otg_initiate_srp(core_if);	
 2201              		.loc 2 779 0 is_stmt 1
 2202 01a0 7868     		ldr	r0, [r7, #4]
 2203 01a2 FFF7FEFF 		bl	dwc_otg_initiate_srp
 2204              	.L84:
 780:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	}
 781:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 782:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	return 1;
 2205              		.loc 2 782 0
 2206 01a6 4FF00103 		mov	r3, #1
 2207              	.L85:
 783:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** }
 2208              		.loc 2 783 0
 2209 01aa 1846     		mov	r0, r3
 2210 01ac 07F11407 		add	r7, r7, #20
 2211 01b0 BD46     		mov	sp, r7
 2212 01b2 90BD     		pop	{r4, r7, pc}
 2213              		.cfi_endproc
 2214              	.LFE30:
 2216              		.section	.text.dwc_otg_handle_pwrdn_stschng_intr,"ax",%progbits
 2217              		.align	2
 2218              		.thumb
 2219              		.thumb_func
 2221              	dwc_otg_handle_pwrdn_stschng_intr:
 2222              	.LFB31:
 784:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** /**
 785:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * This interrupt indicates that the Wakeup Logic has detected a
 786:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * status change either on IDDIG or BSessVld.
 787:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  */
 788:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** static uint32_t dwc_otg_handle_pwrdn_stschng_intr(dwc_otg_core_if_t * core_if)
 789:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** {
 2223              		.loc 2 789 0
 2224              		.cfi_startproc
 2225              		@ args = 0, pretend = 0, frame = 24
 2226              		@ frame_needed = 1, uses_anonymous_args = 0
 2227 0000 80B5     		push	{r7, lr}
 2228              	.LCFI60:
 2229              		.cfi_def_cfa_offset 8
 2230              		.cfi_offset 7, -8
 2231              		.cfi_offset 14, -4
 2232 0002 86B0     		sub	sp, sp, #24
 2233              	.LCFI61:
 2234              		.cfi_def_cfa_offset 32
 2235 0004 00AF     		add	r7, sp, #0
 2236              	.LCFI62:
 2237              		.cfi_def_cfa_register 7
 2238 0006 7860     		str	r0, [r7, #4]
 790:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	int retval;
 791:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 792:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn_data_t gpwrdn = {.d32 = 0 };
 2239              		.loc 2 792 0
 2240 0008 4FF00003 		mov	r3, #0
 2241 000c 3B61     		str	r3, [r7, #16]
 793:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn_data_t gpwrdn_temp = {.d32 = 0 };
 2242              		.loc 2 793 0
 2243 000e 4FF00003 		mov	r3, #0
 2244 0012 FB60     		str	r3, [r7, #12]
 794:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 795:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_PRINTF("%s called\n", __FUNCTION__);
 796:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 797:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (!core_if->hibernation_suspend) {
 2245              		.loc 2 797 0
 2246 0014 7B68     		ldr	r3, [r7, #4]
 2247 0016 D3F8C030 		ldr	r3, [r3, #192]
 2248 001a 002B     		cmp	r3, #0
 2249 001c 02D1     		bne	.L87
 798:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_PRINTF("Already exited from Hibernation\n");
 799:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		return 1;
 2250              		.loc 2 799 0
 2251 001e 4FF00103 		mov	r3, #1
 2252 0022 2BE0     		b	.L91
 2253              	.L87:
 800:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	}
 801:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 802:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.d32 = DWC_READ_REG32(&core_if->core_global_regs->gpwrdn);
 2254              		.loc 2 802 0
 2255 0024 7B68     		ldr	r3, [r7, #4]
 2256 0026 5B68     		ldr	r3, [r3, #4]
 2257 0028 03F15803 		add	r3, r3, #88
 2258 002c 1846     		mov	r0, r3
 2259 002e FFF7FEFF 		bl	DWC_READ_REG32
 2260 0032 0346     		mov	r3, r0
 2261 0034 3B61     		str	r3, [r7, #16]
 803:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn_temp.d32 = core_if->gr_backup->gpwrdn_local;
 2262              		.loc 2 803 0
 2263 0036 7B68     		ldr	r3, [r7, #4]
 2264 0038 D3F88430 		ldr	r3, [r3, #132]
 2265 003c 9B6C     		ldr	r3, [r3, #72]
 2266 003e FB60     		str	r3, [r7, #12]
 804:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 805:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (gpwrdn.b.idsts ^ gpwrdn_temp.b.idsts) {
 2267              		.loc 2 805 0
 2268 0040 3B69     		ldr	r3, [r7, #16]
 2269 0042 C3F34053 		ubfx	r3, r3, #21, #1
 2270 0046 DAB2     		uxtb	r2, r3
 2271 0048 FB68     		ldr	r3, [r7, #12]
 2272 004a C3F34053 		ubfx	r3, r3, #21, #1
 2273 004e DBB2     		uxtb	r3, r3
 2274 0050 9A42     		cmp	r2, r3
 2275 0052 04D0     		beq	.L89
 806:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		retval = dwc_otg_handle_pwrdn_idsts_change(core_if);
 2276              		.loc 2 806 0
 2277 0054 7868     		ldr	r0, [r7, #4]
 2278 0056 FFF7FEFF 		bl	dwc_otg_handle_pwrdn_idsts_change
 2279 005a 7861     		str	r0, [r7, #20]
 2280 005c 0DE0     		b	.L90
 2281              	.L89:
 807:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	} else if (gpwrdn.b.bsessvld ^ gpwrdn_temp.b.bsessvld) {
 2282              		.loc 2 807 0
 2283 005e 3B69     		ldr	r3, [r7, #16]
 2284 0060 C3F38053 		ubfx	r3, r3, #22, #1
 2285 0064 DAB2     		uxtb	r2, r3
 2286 0066 FB68     		ldr	r3, [r7, #12]
 2287 0068 C3F38053 		ubfx	r3, r3, #22, #1
 2288 006c DBB2     		uxtb	r3, r3
 2289 006e 9A42     		cmp	r2, r3
 2290 0070 03D0     		beq	.L90
 808:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		retval = dwc_otg_handle_pwrdn_session_change(core_if);
 2291              		.loc 2 808 0
 2292 0072 7868     		ldr	r0, [r7, #4]
 2293 0074 FFF7FEFF 		bl	dwc_otg_handle_pwrdn_session_change
 2294 0078 7861     		str	r0, [r7, #20]
 2295              	.L90:
 809:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	}
 810:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 811:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	return retval;
 2296              		.loc 2 811 0
 2297 007a 7B69     		ldr	r3, [r7, #20]
 2298              	.L91:
 812:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** }
 2299              		.loc 2 812 0
 2300 007c 1846     		mov	r0, r3
 2301 007e 07F11807 		add	r7, r7, #24
 2302 0082 BD46     		mov	sp, r7
 2303 0084 80BD     		pop	{r7, pc}
 2304              		.cfi_endproc
 2305              	.LFE31:
 2307 0086 00BF     		.section	.text.dwc_otg_handle_pwrdn_srp_intr,"ax",%progbits
 2308              		.align	2
 2309              		.thumb
 2310              		.thumb_func
 2312              	dwc_otg_handle_pwrdn_srp_intr:
 2313              	.LFB32:
 813:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 814:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** /**
 815:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * This interrupt indicates that the Wakeup Logic has detected a
 816:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * SRP.
 817:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  */
 818:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** static int32_t dwc_otg_handle_pwrdn_srp_intr(dwc_otg_core_if_t * core_if)
 819:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** {
 2314              		.loc 2 819 0
 2315              		.cfi_startproc
 2316              		@ args = 0, pretend = 0, frame = 16
 2317              		@ frame_needed = 1, uses_anonymous_args = 0
 2318 0000 80B5     		push	{r7, lr}
 2319              	.LCFI63:
 2320              		.cfi_def_cfa_offset 8
 2321              		.cfi_offset 7, -8
 2322              		.cfi_offset 14, -4
 2323 0002 84B0     		sub	sp, sp, #16
 2324              	.LCFI64:
 2325              		.cfi_def_cfa_offset 24
 2326 0004 00AF     		add	r7, sp, #0
 2327              	.LCFI65:
 2328              		.cfi_def_cfa_register 7
 2329 0006 7860     		str	r0, [r7, #4]
 820:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn_data_t gpwrdn = {.d32 = 0 };
 2330              		.loc 2 820 0
 2331 0008 4FF00003 		mov	r3, #0
 2332 000c FB60     		str	r3, [r7, #12]
 821:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 822:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_PRINTF("%s called\n", __FUNCTION__);
 823:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 824:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (!core_if->hibernation_suspend) {
 2333              		.loc 2 824 0
 2334 000e 7B68     		ldr	r3, [r7, #4]
 2335 0010 D3F8C030 		ldr	r3, [r3, #192]
 2336 0014 002B     		cmp	r3, #0
 2337 0016 02D1     		bne	.L93
 825:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_PRINTF("Already exited from Hibernation\n");
 826:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		return 1;
 2338              		.loc 2 826 0
 2339 0018 4FF00103 		mov	r3, #1
 2340 001c 9FE0     		b	.L95
 2341              	.L93:
 827:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	}
 828:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** #ifdef DWC_DEV_SRPCAP
 829:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (core_if->pwron_timer_started) {
 830:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		core_if->pwron_timer_started = 0;
 831:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_TIMER_CANCEL(core_if->pwron_timer);
 832:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	}
 833:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** #endif
 834:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 835:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Switch on the voltage to the core */
 836:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.b.pwrdnswtch = 1;
 2342              		.loc 2 836 0
 2343 001e FB68     		ldr	r3, [r7, #12]
 2344 0020 43F02003 		orr	r3, r3, #32
 2345 0024 FB60     		str	r3, [r7, #12]
 837:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, gpwrdn.d32, 0);
 2346              		.loc 2 837 0
 2347 0026 7B68     		ldr	r3, [r7, #4]
 2348 0028 5B68     		ldr	r3, [r3, #4]
 2349 002a 03F15802 		add	r2, r3, #88
 2350 002e FB68     		ldr	r3, [r7, #12]
 2351 0030 1046     		mov	r0, r2
 2352 0032 1946     		mov	r1, r3
 2353 0034 4FF00002 		mov	r2, #0
 2354 0038 FFF7FEFF 		bl	DWC_MODIFY_REG32
 838:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	dwc_udelay(10);
 2355              		.loc 2 838 0
 2356 003c 4FF00A00 		mov	r0, #10
 2357 0040 FFF7FEFF 		bl	DWC_UDELAY
 839:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 840:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Reset the core */
 841:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.d32 = 0;
 2358              		.loc 2 841 0
 2359 0044 4FF00003 		mov	r3, #0
 2360 0048 FB60     		str	r3, [r7, #12]
 842:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.b.pwrdnrstn = 1;
 2361              		.loc 2 842 0
 2362 004a FB68     		ldr	r3, [r7, #12]
 2363 004c 43F01003 		orr	r3, r3, #16
 2364 0050 FB60     		str	r3, [r7, #12]
 843:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, gpwrdn.d32, 0);
 2365              		.loc 2 843 0
 2366 0052 7B68     		ldr	r3, [r7, #4]
 2367 0054 5B68     		ldr	r3, [r3, #4]
 2368 0056 03F15802 		add	r2, r3, #88
 2369 005a FB68     		ldr	r3, [r7, #12]
 2370 005c 1046     		mov	r0, r2
 2371 005e 1946     		mov	r1, r3
 2372 0060 4FF00002 		mov	r2, #0
 2373 0064 FFF7FEFF 		bl	DWC_MODIFY_REG32
 844:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	dwc_udelay(10);
 2374              		.loc 2 844 0
 2375 0068 4FF00A00 		mov	r0, #10
 2376 006c FFF7FEFF 		bl	DWC_UDELAY
 845:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 846:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Disable power clamps */
 847:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.d32 = 0;
 2377              		.loc 2 847 0
 2378 0070 4FF00003 		mov	r3, #0
 2379 0074 FB60     		str	r3, [r7, #12]
 848:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.b.pwrdnclmp = 1;
 2380              		.loc 2 848 0
 2381 0076 FB68     		ldr	r3, [r7, #12]
 2382 0078 43F00803 		orr	r3, r3, #8
 2383 007c FB60     		str	r3, [r7, #12]
 849:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, gpwrdn.d32, 0);
 2384              		.loc 2 849 0
 2385 007e 7B68     		ldr	r3, [r7, #4]
 2386 0080 5B68     		ldr	r3, [r3, #4]
 2387 0082 03F15802 		add	r2, r3, #88
 2388 0086 FB68     		ldr	r3, [r7, #12]
 2389 0088 1046     		mov	r0, r2
 2390 008a 1946     		mov	r1, r3
 2391 008c 4FF00002 		mov	r2, #0
 2392 0090 FFF7FEFF 		bl	DWC_MODIFY_REG32
 850:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 851:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Remove reset the core signal */
 852:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.d32 = 0;
 2393              		.loc 2 852 0
 2394 0094 4FF00003 		mov	r3, #0
 2395 0098 FB60     		str	r3, [r7, #12]
 853:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.b.pwrdnrstn = 1;
 2396              		.loc 2 853 0
 2397 009a FB68     		ldr	r3, [r7, #12]
 2398 009c 43F01003 		orr	r3, r3, #16
 2399 00a0 FB60     		str	r3, [r7, #12]
 854:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, 0, gpwrdn.d32);
 2400              		.loc 2 854 0
 2401 00a2 7B68     		ldr	r3, [r7, #4]
 2402 00a4 5B68     		ldr	r3, [r3, #4]
 2403 00a6 03F15802 		add	r2, r3, #88
 2404 00aa FB68     		ldr	r3, [r7, #12]
 2405 00ac 1046     		mov	r0, r2
 2406 00ae 4FF00001 		mov	r1, #0
 2407 00b2 1A46     		mov	r2, r3
 2408 00b4 FFF7FEFF 		bl	DWC_MODIFY_REG32
 855:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	dwc_udelay(10);
 2409              		.loc 2 855 0
 2410 00b8 4FF00A00 		mov	r0, #10
 2411 00bc FFF7FEFF 		bl	DWC_UDELAY
 856:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 857:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Disable PMU interrupt */
 858:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.d32 = 0;
 2412              		.loc 2 858 0
 2413 00c0 4FF00003 		mov	r3, #0
 2414 00c4 FB60     		str	r3, [r7, #12]
 859:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.b.pmuintsel = 1;
 2415              		.loc 2 859 0
 2416 00c6 FB68     		ldr	r3, [r7, #12]
 2417 00c8 43F00103 		orr	r3, r3, #1
 2418 00cc FB60     		str	r3, [r7, #12]
 860:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, gpwrdn.d32, 0);
 2419              		.loc 2 860 0
 2420 00ce 7B68     		ldr	r3, [r7, #4]
 2421 00d0 5B68     		ldr	r3, [r3, #4]
 2422 00d2 03F15802 		add	r2, r3, #88
 2423 00d6 FB68     		ldr	r3, [r7, #12]
 2424 00d8 1046     		mov	r0, r2
 2425 00da 1946     		mov	r1, r3
 2426 00dc 4FF00002 		mov	r2, #0
 2427 00e0 FFF7FEFF 		bl	DWC_MODIFY_REG32
 861:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 862:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Indicates that we are exiting from hibernation */
 863:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	core_if->hibernation_suspend = 0;
 2428              		.loc 2 863 0
 2429 00e4 7B68     		ldr	r3, [r7, #4]
 2430 00e6 4FF00002 		mov	r2, #0
 2431 00ea C3F8C020 		str	r2, [r3, #192]
 864:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 865:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Disable PMU */
 866:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.d32 = 0;
 2432              		.loc 2 866 0
 2433 00ee 4FF00003 		mov	r3, #0
 2434 00f2 FB60     		str	r3, [r7, #12]
 867:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.b.pmuactv = 1;
 2435              		.loc 2 867 0
 2436 00f4 FB68     		ldr	r3, [r7, #12]
 2437 00f6 43F00203 		orr	r3, r3, #2
 2438 00fa FB60     		str	r3, [r7, #12]
 868:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, gpwrdn.d32, 0);
 2439              		.loc 2 868 0
 2440 00fc 7B68     		ldr	r3, [r7, #4]
 2441 00fe 5B68     		ldr	r3, [r3, #4]
 2442 0100 03F15802 		add	r2, r3, #88
 2443 0104 FB68     		ldr	r3, [r7, #12]
 2444 0106 1046     		mov	r0, r2
 2445 0108 1946     		mov	r1, r3
 2446 010a 4FF00002 		mov	r2, #0
 2447 010e FFF7FEFF 		bl	DWC_MODIFY_REG32
 869:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	dwc_udelay(10);
 2448              		.loc 2 869 0
 2449 0112 4FF00A00 		mov	r0, #10
 2450 0116 FFF7FEFF 		bl	DWC_UDELAY
 870:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 871:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Programm Disable VBUS to 0 */
 872:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.d32 = 0;
 2451              		.loc 2 872 0
 2452 011a 4FF00003 		mov	r3, #0
 2453 011e FB60     		str	r3, [r7, #12]
 873:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn.b.dis_vbus = 1;
 2454              		.loc 2 873 0
 2455 0120 FB68     		ldr	r3, [r7, #12]
 2456 0122 43F04003 		orr	r3, r3, #64
 2457 0126 FB60     		str	r3, [r7, #12]
 874:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_MODIFY_REG32(&core_if->core_global_regs->gpwrdn, gpwrdn.d32, 0);
 2458              		.loc 2 874 0
 2459 0128 7B68     		ldr	r3, [r7, #4]
 2460 012a 5B68     		ldr	r3, [r3, #4]
 2461 012c 03F15802 		add	r2, r3, #88
 2462 0130 FB68     		ldr	r3, [r7, #12]
 2463 0132 1046     		mov	r0, r2
 2464 0134 1946     		mov	r1, r3
 2465 0136 4FF00002 		mov	r2, #0
 2466 013a FFF7FEFF 		bl	DWC_MODIFY_REG32
 875:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 876:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/*Initialize the core as Host */
 877:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	core_if->op_state = A_HOST;
 2467              		.loc 2 877 0
 2468 013e 7B68     		ldr	r3, [r7, #4]
 2469 0140 4FF00102 		mov	r2, #1
 2470 0144 83F86420 		strb	r2, [r3, #100]
 878:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	dwc_otg_core_init(core_if);
 2471              		.loc 2 878 0
 2472 0148 7868     		ldr	r0, [r7, #4]
 2473 014a FFF7FEFF 		bl	dwc_otg_core_init
 879:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	dwc_otg_enable_global_interrupts(core_if);
 2474              		.loc 2 879 0
 2475 014e 7868     		ldr	r0, [r7, #4]
 2476 0150 FFF7FEFF 		bl	dwc_otg_enable_global_interrupts
 880:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	cil_hcd_start(core_if);
 2477              		.loc 2 880 0
 2478 0154 7868     		ldr	r0, [r7, #4]
 2479 0156 FFF7FEFF 		bl	cil_hcd_start
 881:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 882:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	return 1;
 2480              		.loc 2 882 0
 2481 015a 4FF00103 		mov	r3, #1
 2482              	.L95:
 883:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** }
 2483              		.loc 2 883 0
 2484 015e 1846     		mov	r0, r3
 2485 0160 07F11007 		add	r7, r7, #16
 2486 0164 BD46     		mov	sp, r7
 2487 0166 80BD     		pop	{r7, pc}
 2488              		.cfi_endproc
 2489              	.LFE32:
 2491              		.section	.text.dwc_otg_handle_restore_done_intr,"ax",%progbits
 2492              		.align	2
 2493              		.global	dwc_otg_handle_restore_done_intr
 2494              		.thumb
 2495              		.thumb_func
 2497              	dwc_otg_handle_restore_done_intr:
 2498              	.LFB33:
 884:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 885:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** /** This interrupt indicates that restore command after Hibernation
 886:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * was completed by the core. */
 887:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** int32_t dwc_otg_handle_restore_done_intr(dwc_otg_core_if_t * core_if)
 888:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** {
 2499              		.loc 2 888 0
 2500              		.cfi_startproc
 2501              		@ args = 0, pretend = 0, frame = 16
 2502              		@ frame_needed = 1, uses_anonymous_args = 0
 2503 0000 80B5     		push	{r7, lr}
 2504              	.LCFI66:
 2505              		.cfi_def_cfa_offset 8
 2506              		.cfi_offset 7, -8
 2507              		.cfi_offset 14, -4
 2508 0002 84B0     		sub	sp, sp, #16
 2509              	.LCFI67:
 2510              		.cfi_def_cfa_offset 24
 2511 0004 00AF     		add	r7, sp, #0
 2512              	.LCFI68:
 2513              		.cfi_def_cfa_register 7
 2514 0006 7860     		str	r0, [r7, #4]
 889:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	pcgcctl_data_t pcgcctl;
 890:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_DEBUGPL(DBG_ANY, "++Restore Done Interrupt++\n");
 891:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 892:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	//TODO De-assert restore signal. 8.a
 893:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	pcgcctl.d32 = DWC_READ_REG32(core_if->pcgcctl);
 2515              		.loc 2 893 0
 2516 0008 7B68     		ldr	r3, [r7, #4]
 2517 000a DB69     		ldr	r3, [r3, #28]
 2518 000c 1846     		mov	r0, r3
 2519 000e FFF7FEFF 		bl	DWC_READ_REG32
 2520 0012 0346     		mov	r3, r0
 2521 0014 FB60     		str	r3, [r7, #12]
 894:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (pcgcctl.b.restoremode == 1) {
 2522              		.loc 2 894 0
 2523 0016 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 2524 0018 03F00203 		and	r3, r3, #2
 2525 001c DBB2     		uxtb	r3, r3
 2526 001e 002B     		cmp	r3, #0
 2527 0020 11D0     		beq	.L97
 2528              	.LBB5:
 895:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		gintmsk_data_t gintmsk = {.d32 = 0 };
 2529              		.loc 2 895 0
 2530 0022 4FF00003 		mov	r3, #0
 2531 0026 BB60     		str	r3, [r7, #8]
 896:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 897:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		/*
 898:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		 * If restore mode is Remote Wakeup,
 899:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		 * unmask Remote Wakeup interrupt.
 900:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		 */
 901:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		gintmsk.b.wkupintr = 1;
 2532              		.loc 2 901 0
 2533 0028 BB68     		ldr	r3, [r7, #8]
 2534 002a 43F00043 		orr	r3, r3, #-2147483648
 2535 002e BB60     		str	r3, [r7, #8]
 902:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_MODIFY_REG32(&core_if->core_global_regs->gintmsk,
 2536              		.loc 2 902 0
 2537 0030 7B68     		ldr	r3, [r7, #4]
 2538 0032 5B68     		ldr	r3, [r3, #4]
 2539 0034 03F11802 		add	r2, r3, #24
 2540 0038 BB68     		ldr	r3, [r7, #8]
 2541 003a 1046     		mov	r0, r2
 2542 003c 4FF00001 		mov	r1, #0
 2543 0040 1A46     		mov	r2, r3
 2544 0042 FFF7FEFF 		bl	DWC_MODIFY_REG32
 2545              	.L97:
 2546              	.LBE5:
 903:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				 0, gintmsk.d32);
 904:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	}
 905:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 906:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	return 1;
 2547              		.loc 2 906 0
 2548 0046 4FF00103 		mov	r3, #1
 907:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** }
 2549              		.loc 2 907 0
 2550 004a 1846     		mov	r0, r3
 2551 004c 07F11007 		add	r7, r7, #16
 2552 0050 BD46     		mov	sp, r7
 2553 0052 80BD     		pop	{r7, pc}
 2554              		.cfi_endproc
 2555              	.LFE33:
 2557              		.section	.text.dwc_otg_handle_disconnect_intr,"ax",%progbits
 2558              		.align	2
 2559              		.global	dwc_otg_handle_disconnect_intr
 2560              		.thumb
 2561              		.thumb_func
 2563              	dwc_otg_handle_disconnect_intr:
 2564              	.LFB34:
 908:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 909:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** /**
 910:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * This interrupt indicates that a device has been disconnected from
 911:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * the root port.
 912:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  */
 913:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** int32_t dwc_otg_handle_disconnect_intr(dwc_otg_core_if_t * core_if)
 914:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** {
 2565              		.loc 2 914 0
 2566              		.cfi_startproc
 2567              		@ args = 0, pretend = 0, frame = 16
 2568              		@ frame_needed = 1, uses_anonymous_args = 0
 2569 0000 80B5     		push	{r7, lr}
 2570              	.LCFI69:
 2571              		.cfi_def_cfa_offset 8
 2572              		.cfi_offset 7, -8
 2573              		.cfi_offset 14, -4
 2574 0002 84B0     		sub	sp, sp, #16
 2575              	.LCFI70:
 2576              		.cfi_def_cfa_offset 24
 2577 0004 00AF     		add	r7, sp, #0
 2578              	.LCFI71:
 2579              		.cfi_def_cfa_register 7
 2580 0006 7860     		str	r0, [r7, #4]
 915:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintsts_data_t gintsts;
 916:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 917:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_DEBUGPL(DBG_ANY, "++Disconnect Detected Interrupt++ (%s) %s\n",
 918:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		    (dwc_otg_is_host_mode(core_if) ? "Host" : "Device"),
 919:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		    op_state_str(core_if));
 920:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 921:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** /** @todo Consolidate this if statement. */
 922:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** #ifdef DWC_HOST_ONLY
 923:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (core_if->op_state == B_HOST) {
 924:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		/* If in device mode Disconnect and stop the HCD, then
 925:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		 * start the PCD. */
 926:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_SPINUNLOCK(core_if->lock);
 927:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		cil_hcd_disconnect(core_if);
 928:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		cil_pcd_start(core_if);
 929:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_SPINLOCK(core_if->lock);
 930:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		core_if->op_state = B_PERIPHERAL;
 931:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	} else if (dwc_otg_is_device_mode(core_if)) {
 932:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		gotgctl_data_t gotgctl = {.d32 = 0 };
 933:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		gotgctl.d32 =
 934:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		    DWC_READ_REG32(&core_if->core_global_regs->gotgctl);
 935:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		if (gotgctl.b.hstsethnpen == 1) {
 936:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			/* Do nothing, if HNP in process the OTG
 937:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			 * interrupt "Host Negotiation Detected"
 938:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			 * interrupt will do the mode switch.
 939:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			 */
 940:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		} else if (gotgctl.b.devhnpen == 0) {
 941:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			/* If in device mode Disconnect and stop the HCD, then
 942:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			 * start the PCD. */
 943:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_SPINUNLOCK(core_if->lock);
 944:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			cil_hcd_disconnect(core_if);
 945:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			cil_pcd_start(core_if);
 946:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_SPINLOCK(core_if->lock);
 947:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			core_if->op_state = B_PERIPHERAL;
 948:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		} else {
 949:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_DEBUGPL(DBG_ANY, "!a_peripheral && !devhnpen\n");
 950:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		}
 951:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	} else {
 952:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		if (core_if->op_state == A_HOST) {
 953:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			/* A-Cable still connected but device disconnected. */
 954:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			cil_hcd_disconnect(core_if);
 955:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			if (core_if->adp_enable) {
 956:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				gpwrdn_data_t gpwrdn;
 957:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				/* Power off the core */
 958:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				if (core_if->power_down == 2) {
 959:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				} else {
 960:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 					/* Enable Power Down Logic */
 961:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 					gpwrdn.b.pmuactv = 1;
 962:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 					DWC_MODIFY_REG32(&core_if->
 963:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 							 core_global_regs->
 964:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 							 gpwrdn, 0, gpwrdn.d32);
 965:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				}
 966:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 967:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				/* Power off the core */
 968:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				if (core_if->power_down == 2) {
 969:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 					gpwrdn.d32 = 0;
 970:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 					gpwrdn.b.pwrdnswtch = 1;
 971:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 					DWC_MODIFY_REG32(&core_if->
 972:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 							 core_global_regs->
 973:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 							 gpwrdn, gpwrdn.d32, 0);
 974:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				}
 975:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 976:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				/* Enable Power Down Logic */
 977:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				gpwrdn.d32 = 0;
 978:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				gpwrdn.b.pmuactv = 1;
 979:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				DWC_MODIFY_REG32(&core_if->core_global_regs->
 980:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 						 gpwrdn, 0, gpwrdn.d32);
 981:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 982:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				/* Unmask SRP detected interrupt from Power Down Logic */
 983:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				gpwrdn.d32 = 0;
 984:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				gpwrdn.b.srp_det_msk = 1;
 985:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				DWC_MODIFY_REG32(&core_if->core_global_regs->
 986:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 						 gpwrdn, 0, gpwrdn.d32);
 987:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 988:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				dwc_otg_adp_probe_start(core_if);
 989:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			}
 990:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		}
 991:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	}
 992:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** #endif
 993:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Change to L3(OFF) state */
 994:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	core_if->lx_state = DWC_OTG_L3;
 2581              		.loc 2 994 0
 2582 0008 7B68     		ldr	r3, [r7, #4]
 2583 000a 4FF00302 		mov	r2, #3
 2584 000e 83F88020 		strb	r2, [r3, #128]
 995:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
 996:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintsts.d32 = 0;
 2585              		.loc 2 996 0
 2586 0012 4FF00003 		mov	r3, #0
 2587 0016 FB60     		str	r3, [r7, #12]
 997:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintsts.b.disconnect = 1;
 2588              		.loc 2 997 0
 2589 0018 FB68     		ldr	r3, [r7, #12]
 2590 001a 43F00053 		orr	r3, r3, #536870912
 2591 001e FB60     		str	r3, [r7, #12]
 998:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_WRITE_REG32(&core_if->core_global_regs->gintsts, gintsts.d32);
 2592              		.loc 2 998 0
 2593 0020 7B68     		ldr	r3, [r7, #4]
 2594 0022 5B68     		ldr	r3, [r3, #4]
 2595 0024 03F11402 		add	r2, r3, #20
 2596 0028 FB68     		ldr	r3, [r7, #12]
 2597 002a 1046     		mov	r0, r2
 2598 002c 1946     		mov	r1, r3
 2599 002e FFF7FEFF 		bl	DWC_WRITE_REG32
 999:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	return 1;
 2600              		.loc 2 999 0
 2601 0032 4FF00103 		mov	r3, #1
1000:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** }
 2602              		.loc 2 1000 0
 2603 0036 1846     		mov	r0, r3
 2604 0038 07F11007 		add	r7, r7, #16
 2605 003c BD46     		mov	sp, r7
 2606 003e 80BD     		pop	{r7, pc}
 2607              		.cfi_endproc
 2608              	.LFE34:
 2610              		.section	.text.dwc_otg_handle_usb_suspend_intr,"ax",%progbits
 2611              		.align	2
 2612              		.global	dwc_otg_handle_usb_suspend_intr
 2613              		.thumb
 2614              		.thumb_func
 2616              	dwc_otg_handle_usb_suspend_intr:
 2617              	.LFB35:
1001:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1002:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** /**
1003:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * This interrupt indicates that SUSPEND state has been detected on
1004:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * the USB.
1005:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  *
1006:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * For HNP the USB Suspend interrupt signals the change from
1007:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * "a_peripheral" to "a_host".
1008:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  *
1009:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * When power management is enabled the core will be put in low power
1010:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * mode.
1011:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  */
1012:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** int32_t dwc_otg_handle_usb_suspend_intr(dwc_otg_core_if_t * core_if)
1013:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** {
 2618              		.loc 2 1013 0
 2619              		.cfi_startproc
 2620              		@ args = 0, pretend = 0, frame = 32
 2621              		@ frame_needed = 1, uses_anonymous_args = 0
 2622 0000 90B5     		push	{r4, r7, lr}
 2623              	.LCFI72:
 2624              		.cfi_def_cfa_offset 12
 2625              		.cfi_offset 4, -12
 2626              		.cfi_offset 7, -8
 2627              		.cfi_offset 14, -4
 2628 0002 89B0     		sub	sp, sp, #36
 2629              	.LCFI73:
 2630              		.cfi_def_cfa_offset 48
 2631 0004 00AF     		add	r7, sp, #0
 2632              	.LCFI74:
 2633              		.cfi_def_cfa_register 7
 2634 0006 7860     		str	r0, [r7, #4]
1014:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** #ifdef PARTIAL_POWER_DOWN
1015:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	dsts_data_t dsts;
1016:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** #endif
1017:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintsts_data_t gintsts;
1018:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	dcfg_data_t dcfg;
1019:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1020:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_DEBUGPL(DBG_ANY, "USB SUSPEND\n");
1021:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1022:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (dwc_otg_is_device_mode(core_if)) {
 2635              		.loc 2 1022 0
 2636 0008 7868     		ldr	r0, [r7, #4]
 2637 000a FFF7FEFF 		bl	dwc_otg_is_device_mode
 2638 000e 0346     		mov	r3, r0
 2639 0010 002B     		cmp	r3, #0
 2640 0012 00F00981 		beq	.L102
1023:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		/* Check the Device status register to determine if the Suspend
1024:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		 * state is active. */
1025:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** #ifdef PARTIAL_POWER_DOWN
1026:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		dsts.d32 =
1027:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		    DWC_READ_REG32(&core_if->dev_if->dev_global_regs->dsts);
1028:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_DEBUGPL(DBG_PCD, "DSTS=0x%0x\n", dsts.d32);
1029:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_DEBUGPL(DBG_PCD, "DSTS.Suspend Status=%d "
1030:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			    "HWCFG4.power Optimize=%d\n",
1031:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			    dsts.b.suspsts, core_if->hwcfg4.b.power_optimiz);
1032:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1033:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1034:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** /** @todo Add a module parameter for power management. */
1035:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1036:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		if (dsts.b.suspsts && core_if->hwcfg4.b.power_optimiz) {
1037:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			pcgcctl_data_t power = {.d32 = 0 };
1038:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_DEBUGPL(DBG_CIL, "suspend\n");
1039:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1040:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			power.b.pwrclmp = 1;
1041:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_WRITE_REG32(core_if->pcgcctl, power.d32);
1042:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1043:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			power.b.rstpdwnmodule = 1;
1044:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_MODIFY_REG32(core_if->pcgcctl, 0, power.d32);
1045:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1046:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			power.b.stoppclk = 1;
1047:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_MODIFY_REG32(core_if->pcgcctl, 0, power.d32);
1048:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1049:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		} else {
1050:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_DEBUGPL(DBG_ANY, "disconnect?\n");
1051:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		}
1052:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** #endif
1053:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		/* PCD callback for suspend. Release the lock inside of callback function */
1054:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		cil_pcd_suspend(core_if);
 2641              		.loc 2 1054 0
 2642 0016 7868     		ldr	r0, [r7, #4]
 2643 0018 FFF7FEFF 		bl	cil_pcd_suspend
1055:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		if (core_if->power_down == 2)
 2644              		.loc 2 1055 0
 2645 001c 7B68     		ldr	r3, [r7, #4]
 2646 001e D3F89030 		ldr	r3, [r3, #144]
 2647 0022 022B     		cmp	r3, #2
 2648 0024 40F01C81 		bne	.L103
1056:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		{
1057:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			dcfg.d32 = DWC_READ_REG32(&core_if->dev_if->dev_global_regs->dcfg);
 2649              		.loc 2 1057 0
 2650 0028 7B68     		ldr	r3, [r7, #4]
 2651 002a 9B68     		ldr	r3, [r3, #8]
 2652 002c 1B68     		ldr	r3, [r3, #0]
 2653 002e 1846     		mov	r0, r3
 2654 0030 FFF7FEFF 		bl	DWC_READ_REG32
 2655 0034 0346     		mov	r3, r0
 2656 0036 BB61     		str	r3, [r7, #24]
1058:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_DEBUGPL(DBG_ANY,"lx_state = %08x\n",core_if->lx_state);
1059:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_DEBUGPL(DBG_ANY," device address = %08d\n",dcfg.b.devaddr);
1060:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1061:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			if (core_if->lx_state != DWC_OTG_L3 && dcfg.b.devaddr) {
 2657              		.loc 2 1061 0
 2658 0038 7B68     		ldr	r3, [r7, #4]
 2659 003a 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 2660 003e 032B     		cmp	r3, #3
 2661 0040 00F00E81 		beq	.L103
 2662              		.loc 2 1061 0 is_stmt 0 discriminator 1
 2663 0044 3B8B     		ldrh	r3, [r7, #24]
 2664 0046 03F4FE63 		and	r3, r3, #2032
 2665 004a 9BB2     		uxth	r3, r3
 2666 004c 002B     		cmp	r3, #0
 2667 004e 00F00781 		beq	.L103
 2668              	.LBB6:
1062:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1063:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				pcgcctl_data_t pcgcctl = {.d32 = 0 };
 2669              		.loc 2 1063 0 is_stmt 1
 2670 0052 4FF00003 		mov	r3, #0
 2671 0056 7B61     		str	r3, [r7, #20]
1064:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				gpwrdn_data_t gpwrdn = {.d32 = 0 };
 2672              		.loc 2 1064 0
 2673 0058 4FF00003 		mov	r3, #0
 2674 005c 3B61     		str	r3, [r7, #16]
1065:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				gusbcfg_data_t gusbcfg = {.d32 = 0 };
 2675              		.loc 2 1065 0
 2676 005e 4FF00003 		mov	r3, #0
 2677 0062 FB60     		str	r3, [r7, #12]
1066:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1067:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				/* Change to L2(suspend) state */
1068:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				core_if->lx_state = DWC_OTG_L2;
 2678              		.loc 2 1068 0
 2679 0064 7B68     		ldr	r3, [r7, #4]
 2680 0066 4FF00202 		mov	r2, #2
 2681 006a 83F88020 		strb	r2, [r3, #128]
1069:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1070:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				/* Clear interrupt in gintsts */
1071:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				gintsts.d32 = 0;
 2682              		.loc 2 1071 0
 2683 006e 4FF00003 		mov	r3, #0
 2684 0072 FB61     		str	r3, [r7, #28]
1072:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				gintsts.b.usbsuspend = 1;
 2685              		.loc 2 1072 0
 2686 0074 FB69     		ldr	r3, [r7, #28]
 2687 0076 43F40063 		orr	r3, r3, #2048
 2688 007a FB61     		str	r3, [r7, #28]
1073:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				DWC_WRITE_REG32(&core_if->core_global_regs->
 2689              		.loc 2 1073 0
 2690 007c 7B68     		ldr	r3, [r7, #4]
 2691 007e 5B68     		ldr	r3, [r3, #4]
 2692 0080 03F11402 		add	r2, r3, #20
 2693 0084 FB69     		ldr	r3, [r7, #28]
 2694 0086 1046     		mov	r0, r2
 2695 0088 1946     		mov	r1, r3
 2696 008a FFF7FEFF 		bl	DWC_WRITE_REG32
1074:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 						gintsts, gintsts.d32);
1075:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				DWC_PRINTF("Start of hibernation completed\n");
1076:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				dwc_otg_save_global_regs(core_if);
 2697              		.loc 2 1076 0
 2698 008e 7868     		ldr	r0, [r7, #4]
 2699 0090 FFF7FEFF 		bl	dwc_otg_save_global_regs
1077:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				dwc_otg_save_dev_regs(core_if);
 2700              		.loc 2 1077 0
 2701 0094 7868     		ldr	r0, [r7, #4]
 2702 0096 FFF7FEFF 		bl	dwc_otg_save_dev_regs
1078:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1079:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				gusbcfg.d32 =
1080:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				    DWC_READ_REG32(&core_if->core_global_regs->
 2703              		.loc 2 1080 0
 2704 009a 7B68     		ldr	r3, [r7, #4]
 2705 009c 5B68     		ldr	r3, [r3, #4]
 2706 009e 03F10C03 		add	r3, r3, #12
 2707 00a2 1846     		mov	r0, r3
 2708 00a4 FFF7FEFF 		bl	DWC_READ_REG32
 2709 00a8 0346     		mov	r3, r0
1079:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				gusbcfg.d32 =
 2710              		.loc 2 1079 0
 2711 00aa FB60     		str	r3, [r7, #12]
1081:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 						   gusbcfg);
1082:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				if (gusbcfg.b.ulpi_utmi_sel == 1) {
 2712              		.loc 2 1082 0
 2713 00ac 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 2714 00ae 03F01003 		and	r3, r3, #16
 2715 00b2 DBB2     		uxtb	r3, r3
 2716 00b4 002B     		cmp	r3, #0
 2717 00b6 23D0     		beq	.L104
1083:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 					/* ULPI interface */
1084:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 					/* Suspend the Phy Clock */
1085:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 					pcgcctl.d32 = 0;
 2718              		.loc 2 1085 0
 2719 00b8 4FF00003 		mov	r3, #0
 2720 00bc 7B61     		str	r3, [r7, #20]
1086:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 					pcgcctl.b.stoppclk = 1;
 2721              		.loc 2 1086 0
 2722 00be 7B69     		ldr	r3, [r7, #20]
 2723 00c0 43F00103 		orr	r3, r3, #1
 2724 00c4 7B61     		str	r3, [r7, #20]
1087:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 					DWC_MODIFY_REG32(core_if->pcgcctl, 0,
 2725              		.loc 2 1087 0
 2726 00c6 7B68     		ldr	r3, [r7, #4]
 2727 00c8 DA69     		ldr	r2, [r3, #28]
 2728 00ca 7B69     		ldr	r3, [r7, #20]
 2729 00cc 1046     		mov	r0, r2
 2730 00ce 4FF00001 		mov	r1, #0
 2731 00d2 1A46     		mov	r2, r3
 2732 00d4 FFF7FEFF 		bl	DWC_MODIFY_REG32
1088:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 							 pcgcctl.d32);
1089:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 					dwc_udelay(10);
 2733              		.loc 2 1089 0
 2734 00d8 4FF00A00 		mov	r0, #10
 2735 00dc FFF7FEFF 		bl	DWC_UDELAY
1090:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 					gpwrdn.b.pmuactv = 1;
 2736              		.loc 2 1090 0
 2737 00e0 3B69     		ldr	r3, [r7, #16]
 2738 00e2 43F00203 		orr	r3, r3, #2
 2739 00e6 3B61     		str	r3, [r7, #16]
1091:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 					DWC_MODIFY_REG32(&core_if->
 2740              		.loc 2 1091 0
 2741 00e8 7B68     		ldr	r3, [r7, #4]
 2742 00ea 5B68     		ldr	r3, [r3, #4]
 2743 00ec 03F15802 		add	r2, r3, #88
 2744 00f0 3B69     		ldr	r3, [r7, #16]
 2745 00f2 1046     		mov	r0, r2
 2746 00f4 4FF00001 		mov	r1, #0
 2747 00f8 1A46     		mov	r2, r3
 2748 00fa FFF7FEFF 		bl	DWC_MODIFY_REG32
 2749 00fe 23E0     		b	.L105
 2750              	.L104:
1092:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 							 core_global_regs->
1093:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 							 gpwrdn, 0, gpwrdn.d32);
1094:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				} else {
1095:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 					/* UTMI+ Interface */
1096:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 					gpwrdn.b.pmuactv = 1;
 2751              		.loc 2 1096 0
 2752 0100 3B69     		ldr	r3, [r7, #16]
 2753 0102 43F00203 		orr	r3, r3, #2
 2754 0106 3B61     		str	r3, [r7, #16]
1097:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 					DWC_MODIFY_REG32(&core_if->
 2755              		.loc 2 1097 0
 2756 0108 7B68     		ldr	r3, [r7, #4]
 2757 010a 5B68     		ldr	r3, [r3, #4]
 2758 010c 03F15802 		add	r2, r3, #88
 2759 0110 3B69     		ldr	r3, [r7, #16]
 2760 0112 1046     		mov	r0, r2
 2761 0114 4FF00001 		mov	r1, #0
 2762 0118 1A46     		mov	r2, r3
 2763 011a FFF7FEFF 		bl	DWC_MODIFY_REG32
1098:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 							 core_global_regs->
1099:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 							 gpwrdn, 0, gpwrdn.d32);
1100:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 					dwc_udelay(10);
 2764              		.loc 2 1100 0
 2765 011e 4FF00A00 		mov	r0, #10
 2766 0122 FFF7FEFF 		bl	DWC_UDELAY
1101:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 					pcgcctl.b.stoppclk = 1;
 2767              		.loc 2 1101 0
 2768 0126 7B69     		ldr	r3, [r7, #20]
 2769 0128 43F00103 		orr	r3, r3, #1
 2770 012c 7B61     		str	r3, [r7, #20]
1102:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 					DWC_MODIFY_REG32(core_if->pcgcctl, 0,
 2771              		.loc 2 1102 0
 2772 012e 7B68     		ldr	r3, [r7, #4]
 2773 0130 DA69     		ldr	r2, [r3, #28]
 2774 0132 7B69     		ldr	r3, [r7, #20]
 2775 0134 1046     		mov	r0, r2
 2776 0136 4FF00001 		mov	r1, #0
 2777 013a 1A46     		mov	r2, r3
 2778 013c FFF7FEFF 		bl	DWC_MODIFY_REG32
1103:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 							 pcgcctl.d32);
1104:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 					dwc_udelay(10);
 2779              		.loc 2 1104 0
 2780 0140 4FF00A00 		mov	r0, #10
 2781 0144 FFF7FEFF 		bl	DWC_UDELAY
 2782              	.L105:
1105:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				}
1106:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1107:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				/* Set flag to indicate that we are in hibernation */
1108:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				core_if->hibernation_suspend = 1;
 2783              		.loc 2 1108 0
 2784 0148 7B68     		ldr	r3, [r7, #4]
 2785 014a 4FF00102 		mov	r2, #1
 2786 014e C3F8C020 		str	r2, [r3, #192]
1109:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				/* Enable interrupts from wake up logic */
1110:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				gpwrdn.d32 = 0;
 2787              		.loc 2 1110 0
 2788 0152 4FF00003 		mov	r3, #0
 2789 0156 3B61     		str	r3, [r7, #16]
1111:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				gpwrdn.b.pmuintsel = 1;
 2790              		.loc 2 1111 0
 2791 0158 3B69     		ldr	r3, [r7, #16]
 2792 015a 43F00103 		orr	r3, r3, #1
 2793 015e 3B61     		str	r3, [r7, #16]
1112:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				DWC_MODIFY_REG32(&core_if->core_global_regs->
 2794              		.loc 2 1112 0
 2795 0160 7B68     		ldr	r3, [r7, #4]
 2796 0162 5B68     		ldr	r3, [r3, #4]
 2797 0164 03F15802 		add	r2, r3, #88
 2798 0168 3B69     		ldr	r3, [r7, #16]
 2799 016a 1046     		mov	r0, r2
 2800 016c 4FF00001 		mov	r1, #0
 2801 0170 1A46     		mov	r2, r3
 2802 0172 FFF7FEFF 		bl	DWC_MODIFY_REG32
1113:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 						 gpwrdn, 0, gpwrdn.d32);
1114:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				dwc_udelay(10);
 2803              		.loc 2 1114 0
 2804 0176 4FF00A00 		mov	r0, #10
 2805 017a FFF7FEFF 		bl	DWC_UDELAY
1115:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1116:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				/* Unmask device mode interrupts in GPWRDN */
1117:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				gpwrdn.d32 = 0;
 2806              		.loc 2 1117 0
 2807 017e 4FF00003 		mov	r3, #0
 2808 0182 3B61     		str	r3, [r7, #16]
1118:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				gpwrdn.b.rst_det_msk = 1;
 2809              		.loc 2 1118 0
 2810 0184 3B69     		ldr	r3, [r7, #16]
 2811 0186 43F48063 		orr	r3, r3, #1024
 2812 018a 3B61     		str	r3, [r7, #16]
1119:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				gpwrdn.b.lnstchng_msk = 1;
 2813              		.loc 2 1119 0
 2814 018c 3B69     		ldr	r3, [r7, #16]
 2815 018e 43F48073 		orr	r3, r3, #256
 2816 0192 3B61     		str	r3, [r7, #16]
1120:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				gpwrdn.b.sts_chngint_msk = 1;
 2817              		.loc 2 1120 0
 2818 0194 3B69     		ldr	r3, [r7, #16]
 2819 0196 43F48023 		orr	r3, r3, #262144
 2820 019a 3B61     		str	r3, [r7, #16]
1121:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				DWC_MODIFY_REG32(&core_if->core_global_regs->
 2821              		.loc 2 1121 0
 2822 019c 7B68     		ldr	r3, [r7, #4]
 2823 019e 5B68     		ldr	r3, [r3, #4]
 2824 01a0 03F15802 		add	r2, r3, #88
 2825 01a4 3B69     		ldr	r3, [r7, #16]
 2826 01a6 1046     		mov	r0, r2
 2827 01a8 4FF00001 		mov	r1, #0
 2828 01ac 1A46     		mov	r2, r3
 2829 01ae FFF7FEFF 		bl	DWC_MODIFY_REG32
1122:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 						 gpwrdn, 0, gpwrdn.d32);
1123:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				dwc_udelay(10);
 2830              		.loc 2 1123 0
 2831 01b2 4FF00A00 		mov	r0, #10
 2832 01b6 FFF7FEFF 		bl	DWC_UDELAY
1124:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1125:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				/* Enable Power Down Clamp */
1126:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				gpwrdn.d32 = 0;
 2833              		.loc 2 1126 0
 2834 01ba 4FF00003 		mov	r3, #0
 2835 01be 3B61     		str	r3, [r7, #16]
1127:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				gpwrdn.b.pwrdnclmp = 1;
 2836              		.loc 2 1127 0
 2837 01c0 3B69     		ldr	r3, [r7, #16]
 2838 01c2 43F00803 		orr	r3, r3, #8
 2839 01c6 3B61     		str	r3, [r7, #16]
1128:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				DWC_MODIFY_REG32(&core_if->core_global_regs->
 2840              		.loc 2 1128 0
 2841 01c8 7B68     		ldr	r3, [r7, #4]
 2842 01ca 5B68     		ldr	r3, [r3, #4]
 2843 01cc 03F15802 		add	r2, r3, #88
 2844 01d0 3B69     		ldr	r3, [r7, #16]
 2845 01d2 1046     		mov	r0, r2
 2846 01d4 4FF00001 		mov	r1, #0
 2847 01d8 1A46     		mov	r2, r3
 2848 01da FFF7FEFF 		bl	DWC_MODIFY_REG32
1129:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 						 gpwrdn, 0, gpwrdn.d32);
1130:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				dwc_udelay(10);
 2849              		.loc 2 1130 0
 2850 01de 4FF00A00 		mov	r0, #10
 2851 01e2 FFF7FEFF 		bl	DWC_UDELAY
1131:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1132:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				/* Switch off VDD */
1133:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				gpwrdn.d32 = 0;
 2852              		.loc 2 1133 0
 2853 01e6 4FF00003 		mov	r3, #0
 2854 01ea 3B61     		str	r3, [r7, #16]
1134:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				gpwrdn.b.pwrdnswtch = 1;
 2855              		.loc 2 1134 0
 2856 01ec 3B69     		ldr	r3, [r7, #16]
 2857 01ee 43F02003 		orr	r3, r3, #32
 2858 01f2 3B61     		str	r3, [r7, #16]
1135:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				DWC_MODIFY_REG32(&core_if->core_global_regs->
 2859              		.loc 2 1135 0
 2860 01f4 7B68     		ldr	r3, [r7, #4]
 2861 01f6 5B68     		ldr	r3, [r3, #4]
 2862 01f8 03F15802 		add	r2, r3, #88
 2863 01fc 3B69     		ldr	r3, [r7, #16]
 2864 01fe 1046     		mov	r0, r2
 2865 0200 4FF00001 		mov	r1, #0
 2866 0204 1A46     		mov	r2, r3
 2867 0206 FFF7FEFF 		bl	DWC_MODIFY_REG32
1136:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 						 gpwrdn, 0, gpwrdn.d32);
1137:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1138:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				/* Save gpwrdn register for further usage if stschng interrupt */
1139:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				core_if->gr_backup->gpwrdn_local =
 2868              		.loc 2 1139 0
 2869 020a 7B68     		ldr	r3, [r7, #4]
 2870 020c D3F88440 		ldr	r4, [r3, #132]
1140:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 							DWC_READ_REG32(&core_if->core_global_regs->gpwrdn);
 2871              		.loc 2 1140 0
 2872 0210 7B68     		ldr	r3, [r7, #4]
 2873 0212 5B68     		ldr	r3, [r3, #4]
 2874 0214 03F15803 		add	r3, r3, #88
 2875 0218 1846     		mov	r0, r3
 2876 021a FFF7FEFF 		bl	DWC_READ_REG32
 2877 021e 0346     		mov	r3, r0
1139:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				core_if->gr_backup->gpwrdn_local =
 2878              		.loc 2 1139 0
 2879 0220 A364     		str	r3, [r4, #72]
1141:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				DWC_PRINTF("Hibernation completed\n");
1142:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1143:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				return 1;
 2880              		.loc 2 1143 0
 2881 0222 4FF00103 		mov	r3, #1
 2882 0226 32E0     		b	.L107
 2883              	.L102:
 2884              	.LBE6:
1144:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			}
1145:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		}
1146:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	} else {
1147:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		if (core_if->op_state == A_PERIPHERAL) {
 2885              		.loc 2 1147 0
 2886 0228 7B68     		ldr	r3, [r7, #4]
 2887 022a 93F86430 		ldrb	r3, [r3, #100]	@ zero_extendqisi2
 2888 022e 032B     		cmp	r3, #3
 2889 0230 16D1     		bne	.L103
1148:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_DEBUGPL(DBG_ANY, "a_peripheral->a_host\n");
1149:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			/* Clear the a_peripheral flag, back to a_host. */
1150:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_SPINUNLOCK(core_if->lock);
 2890              		.loc 2 1150 0
 2891 0232 7B68     		ldr	r3, [r7, #4]
 2892 0234 D3F8CC30 		ldr	r3, [r3, #204]
 2893 0238 1846     		mov	r0, r3
 2894 023a FFF7FEFF 		bl	DWC_SPINUNLOCK
1151:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			cil_pcd_stop(core_if);
 2895              		.loc 2 1151 0
 2896 023e 7868     		ldr	r0, [r7, #4]
 2897 0240 FFF7FEFF 		bl	cil_pcd_stop
1152:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			cil_hcd_start(core_if);
 2898              		.loc 2 1152 0
 2899 0244 7868     		ldr	r0, [r7, #4]
 2900 0246 FFF7FEFF 		bl	cil_hcd_start
1153:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_SPINLOCK(core_if->lock);
 2901              		.loc 2 1153 0
 2902 024a 7B68     		ldr	r3, [r7, #4]
 2903 024c D3F8CC30 		ldr	r3, [r3, #204]
 2904 0250 1846     		mov	r0, r3
 2905 0252 FFF7FEFF 		bl	DWC_SPINLOCK
1154:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			core_if->op_state = A_HOST;
 2906              		.loc 2 1154 0
 2907 0256 7B68     		ldr	r3, [r7, #4]
 2908 0258 4FF00102 		mov	r2, #1
 2909 025c 83F86420 		strb	r2, [r3, #100]
 2910              	.L103:
1155:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		}
1156:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	}
1157:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1158:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Change to L2(suspend) state */
1159:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	core_if->lx_state = DWC_OTG_L2;
 2911              		.loc 2 1159 0
 2912 0260 7B68     		ldr	r3, [r7, #4]
 2913 0262 4FF00202 		mov	r2, #2
 2914 0266 83F88020 		strb	r2, [r3, #128]
1160:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1161:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Clear interrupt */
1162:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintsts.d32 = 0;
 2915              		.loc 2 1162 0
 2916 026a 4FF00003 		mov	r3, #0
 2917 026e FB61     		str	r3, [r7, #28]
1163:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintsts.b.usbsuspend = 1;
 2918              		.loc 2 1163 0
 2919 0270 FB69     		ldr	r3, [r7, #28]
 2920 0272 43F40063 		orr	r3, r3, #2048
 2921 0276 FB61     		str	r3, [r7, #28]
1164:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_WRITE_REG32(&core_if->core_global_regs->gintsts, gintsts.d32);
 2922              		.loc 2 1164 0
 2923 0278 7B68     		ldr	r3, [r7, #4]
 2924 027a 5B68     		ldr	r3, [r3, #4]
 2925 027c 03F11402 		add	r2, r3, #20
 2926 0280 FB69     		ldr	r3, [r7, #28]
 2927 0282 1046     		mov	r0, r2
 2928 0284 1946     		mov	r1, r3
 2929 0286 FFF7FEFF 		bl	DWC_WRITE_REG32
1165:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1166:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	return 1;
 2930              		.loc 2 1166 0
 2931 028a 4FF00103 		mov	r3, #1
 2932              	.L107:
1167:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** }
 2933              		.loc 2 1167 0
 2934 028e 1846     		mov	r0, r3
 2935 0290 07F12407 		add	r7, r7, #36
 2936 0294 BD46     		mov	sp, r7
 2937 0296 90BD     		pop	{r4, r7, pc}
 2938              		.cfi_endproc
 2939              	.LFE35:
 2941              		.section	.text.dwc_otg_read_common_intr,"ax",%progbits
 2942              		.align	2
 2943              		.thumb
 2944              		.thumb_func
 2946              	dwc_otg_read_common_intr:
 2947              	.LFB36:
1168:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1169:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** #ifdef CONFIG_USB_DWC_OTG_LPM
1170:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** /**
1171:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * This function hadles LPM transaction received interrupt.
1172:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  */
1173:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** static int32_t dwc_otg_handle_lpm_intr(dwc_otg_core_if_t * core_if)
1174:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** {
1175:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	glpmcfg_data_t lpmcfg;
1176:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintsts_data_t gintsts;
1177:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1178:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (!core_if->core_params->lpm_enable) {
1179:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_PRINTF("Unexpected LPM interrupt\n");
1180:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	}
1181:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1182:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	lpmcfg.d32 = DWC_READ_REG32(&core_if->core_global_regs->glpmcfg);
1183:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_PRINTF("LPM config register = 0x%08x\n", lpmcfg.d32);
1184:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1185:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (dwc_otg_is_host_mode(core_if)) {
1186:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		cil_hcd_sleep(core_if);
1187:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	} else {
1188:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		lpmcfg.b.hird_thres |= (1 << 4);
1189:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_WRITE_REG32(&core_if->core_global_regs->glpmcfg,
1190:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				lpmcfg.d32);
1191:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	}
1192:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1193:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Examine prt_sleep_sts after TL1TokenTetry period max (10 us) */
1194:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	dwc_udelay(10);
1195:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	lpmcfg.d32 = DWC_READ_REG32(&core_if->core_global_regs->glpmcfg);
1196:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (lpmcfg.b.prt_sleep_sts) {
1197:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		/* Save the current state */
1198:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		core_if->lx_state = DWC_OTG_L1;
1199:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	}
1200:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1201:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* Clear interrupt  */
1202:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintsts.d32 = 0;
1203:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintsts.b.lpmtranrcvd = 1;
1204:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	DWC_WRITE_REG32(&core_if->core_global_regs->gintsts, gintsts.d32);
1205:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	return 1;
1206:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** }
1207:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** #endif /* CONFIG_USB_DWC_OTG_LPM */
1208:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1209:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** /**
1210:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * This function returns the Core Interrupt register.
1211:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  */
1212:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** static inline uint32_t dwc_otg_read_common_intr(dwc_otg_core_if_t * core_if)
1213:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** {
 2948              		.loc 2 1213 0
 2949              		.cfi_startproc
 2950              		@ args = 0, pretend = 0, frame = 24
 2951              		@ frame_needed = 1, uses_anonymous_args = 0
 2952 0000 80B5     		push	{r7, lr}
 2953              	.LCFI75:
 2954              		.cfi_def_cfa_offset 8
 2955              		.cfi_offset 7, -8
 2956              		.cfi_offset 14, -4
 2957 0002 86B0     		sub	sp, sp, #24
 2958              	.LCFI76:
 2959              		.cfi_def_cfa_offset 32
 2960 0004 00AF     		add	r7, sp, #0
 2961              	.LCFI77:
 2962              		.cfi_def_cfa_register 7
 2963 0006 7860     		str	r0, [r7, #4]
1214:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintsts_data_t gintsts;
1215:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintmsk_data_t gintmsk;
1216:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	
1217:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintmsk_data_t gintmsk_common = {.d32 = 0 };
 2964              		.loc 2 1217 0
 2965 0008 4FF00003 		mov	r3, #0
 2966 000c FB60     		str	r3, [r7, #12]
1218:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1219:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintmsk_common.b.wkupintr = 1;
 2967              		.loc 2 1219 0
 2968 000e FB68     		ldr	r3, [r7, #12]
 2969 0010 43F00043 		orr	r3, r3, #-2147483648
 2970 0014 FB60     		str	r3, [r7, #12]
1220:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintmsk_common.b.sessreqintr = 1;
 2971              		.loc 2 1220 0
 2972 0016 FB68     		ldr	r3, [r7, #12]
 2973 0018 43F08043 		orr	r3, r3, #1073741824
 2974 001c FB60     		str	r3, [r7, #12]
1221:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintmsk_common.b.conidstschng = 1;
 2975              		.loc 2 1221 0
 2976 001e FB68     		ldr	r3, [r7, #12]
 2977 0020 43F08053 		orr	r3, r3, #268435456
 2978 0024 FB60     		str	r3, [r7, #12]
1222:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintmsk_common.b.otgintr = 1;
 2979              		.loc 2 1222 0
 2980 0026 FB68     		ldr	r3, [r7, #12]
 2981 0028 43F00403 		orr	r3, r3, #4
 2982 002c FB60     		str	r3, [r7, #12]
1223:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintmsk_common.b.modemismatch = 1;
 2983              		.loc 2 1223 0
 2984 002e FB68     		ldr	r3, [r7, #12]
 2985 0030 43F00203 		orr	r3, r3, #2
 2986 0034 FB60     		str	r3, [r7, #12]
1224:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintmsk_common.b.disconnect = 1;
 2987              		.loc 2 1224 0
 2988 0036 FB68     		ldr	r3, [r7, #12]
 2989 0038 43F00053 		orr	r3, r3, #536870912
 2990 003c FB60     		str	r3, [r7, #12]
1225:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintmsk_common.b.usbsuspend = 1;
 2991              		.loc 2 1225 0
 2992 003e FB68     		ldr	r3, [r7, #12]
 2993 0040 43F40063 		orr	r3, r3, #2048
 2994 0044 FB60     		str	r3, [r7, #12]
1226:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** #ifdef CONFIG_USB_DWC_OTG_LPM
1227:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintmsk_common.b.lpmtranrcvd = 1;
1228:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** #endif
1229:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintmsk_common.b.restoredone = 1;
 2995              		.loc 2 1229 0
 2996 0046 FB68     		ldr	r3, [r7, #12]
 2997 0048 43F48033 		orr	r3, r3, #65536
 2998 004c FB60     		str	r3, [r7, #12]
1230:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/** @todo: The port interrupt occurs while in device
1231:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****          * mode. Added code to CIL to clear the interrupt for now!
1232:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****          */
1233:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintmsk_common.b.portintr = 1;
 2999              		.loc 2 1233 0
 3000 004e FB68     		ldr	r3, [r7, #12]
 3001 0050 43F08073 		orr	r3, r3, #16777216
 3002 0054 FB60     		str	r3, [r7, #12]
1234:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1235:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintsts.d32 = DWC_READ_REG32(&core_if->core_global_regs->gintsts);
 3003              		.loc 2 1235 0
 3004 0056 7B68     		ldr	r3, [r7, #4]
 3005 0058 5B68     		ldr	r3, [r3, #4]
 3006 005a 03F11403 		add	r3, r3, #20
 3007 005e 1846     		mov	r0, r3
 3008 0060 FFF7FEFF 		bl	DWC_READ_REG32
 3009 0064 0346     		mov	r3, r0
 3010 0066 7B61     		str	r3, [r7, #20]
1236:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintmsk.d32 = DWC_READ_REG32(&core_if->core_global_regs->gintmsk);
 3011              		.loc 2 1236 0
 3012 0068 7B68     		ldr	r3, [r7, #4]
 3013 006a 5B68     		ldr	r3, [r3, #4]
 3014 006c 03F11803 		add	r3, r3, #24
 3015 0070 1846     		mov	r0, r3
 3016 0072 FFF7FEFF 		bl	DWC_READ_REG32
 3017 0076 0346     		mov	r3, r0
 3018 0078 3B61     		str	r3, [r7, #16]
1237:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1238:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** #ifdef DEBUG
1239:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	/* if any common interrupts set */
1240:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (gintsts.d32 & gintmsk_common.d32) {
1241:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_DEBUGPL(DBG_ANY, "gintsts=%08x  gintmsk=%08x\n",
1242:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			    gintsts.d32, gintmsk.d32);
1243:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	}
1244:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** #endif
1245:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1246:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	return ((gintsts.d32 & gintmsk.d32) & gintmsk_common.d32);
 3019              		.loc 2 1246 0
 3020 007a 7A69     		ldr	r2, [r7, #20]
 3021 007c 3B69     		ldr	r3, [r7, #16]
 3022 007e 1A40     		ands	r2, r2, r3
 3023 0080 FB68     		ldr	r3, [r7, #12]
 3024 0082 1340     		ands	r3, r3, r2
1247:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1248:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** }
 3025              		.loc 2 1248 0
 3026 0084 1846     		mov	r0, r3
 3027 0086 07F11807 		add	r7, r7, #24
 3028 008a BD46     		mov	sp, r7
 3029 008c 80BD     		pop	{r7, pc}
 3030              		.cfi_endproc
 3031              	.LFE36:
 3033 008e 00BF     		.section	.text.dwc_otg_handle_common_intr,"ax",%progbits
 3034              		.align	2
 3035              		.global	dwc_otg_handle_common_intr
 3036              		.thumb
 3037              		.thumb_func
 3039              	dwc_otg_handle_common_intr:
 3040              	.LFB37:
1249:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1250:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** /* MACRO for clearing interupt bits in GPWRDN register */
1251:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** #define CLEAR_GPWRDN_INTR(__core_if,__intr) \
1252:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** do { \
1253:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		gpwrdn_data_t gpwrdn = {.d32=0}; \
1254:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		gpwrdn.b.__intr = 1; \
1255:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_MODIFY_REG32(&__core_if->core_global_regs->gpwrdn, \
1256:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		0, gpwrdn.d32); \
1257:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** } while (0)
1258:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1259:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** /**
1260:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * Common interrupt handler.
1261:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  *
1262:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * The common interrupts are those that occur in both Host and Device mode.
1263:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * This handler handles the following interrupts:
1264:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * - Mode Mismatch Interrupt
1265:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * - Disconnect Interrupt
1266:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * - OTG Interrupt
1267:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * - Connector ID Status Change Interrupt
1268:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * - Session Request Interrupt.
1269:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * - Resume / Remote Wakeup Detected Interrupt.
1270:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * - LPM Transaction Received Interrupt
1271:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  * - ADP Transaction Received Interrupt
1272:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  *
1273:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c ****  */
1274:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** int32_t dwc_otg_handle_common_intr(dwc_otg_core_if_t * core_if)
1275:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** {
 3041              		.loc 2 1275 0
 3042              		.cfi_startproc
 3043              		@ args = 0, pretend = 0, frame = 48
 3044              		@ frame_needed = 1, uses_anonymous_args = 0
 3045 0000 80B5     		push	{r7, lr}
 3046              	.LCFI78:
 3047              		.cfi_def_cfa_offset 8
 3048              		.cfi_offset 7, -8
 3049              		.cfi_offset 14, -4
 3050 0002 8CB0     		sub	sp, sp, #48
 3051              	.LCFI79:
 3052              		.cfi_def_cfa_offset 56
 3053 0004 00AF     		add	r7, sp, #0
 3054              	.LCFI80:
 3055              		.cfi_def_cfa_register 7
 3056 0006 7860     		str	r0, [r7, #4]
1276:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	int retval = 0;
 3057              		.loc 2 1276 0
 3058 0008 4FF00003 		mov	r3, #0
 3059 000c FB62     		str	r3, [r7, #44]
1277:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gintsts_data_t gintsts;
1278:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1279:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	gpwrdn_data_t gpwrdn = {.d32 = 0 };
 3060              		.loc 2 1279 0
 3061 000e 4FF00003 		mov	r3, #0
 3062 0012 7B62     		str	r3, [r7, #36]
1280:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1281:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (core_if->lock)
 3063              		.loc 2 1281 0
 3064 0014 7B68     		ldr	r3, [r7, #4]
 3065 0016 D3F8CC30 		ldr	r3, [r3, #204]
 3066 001a 002B     		cmp	r3, #0
 3067 001c 05D0     		beq	.L111
1282:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_SPINLOCK(core_if->lock);
 3068              		.loc 2 1282 0
 3069 001e 7B68     		ldr	r3, [r7, #4]
 3070 0020 D3F8CC30 		ldr	r3, [r3, #204]
 3071 0024 1846     		mov	r0, r3
 3072 0026 FFF7FEFF 		bl	DWC_SPINLOCK
 3073              	.L111:
1283:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1284:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (core_if->hibernation_suspend <= 0) {
 3074              		.loc 2 1284 0
 3075 002a 7B68     		ldr	r3, [r7, #4]
 3076 002c D3F8C030 		ldr	r3, [r3, #192]
 3077 0030 002B     		cmp	r3, #0
 3078 0032 00F3B080 		bgt	.L112
1285:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		gintsts.d32 = dwc_otg_read_common_intr(core_if);
 3079              		.loc 2 1285 0
 3080 0036 7868     		ldr	r0, [r7, #4]
 3081 0038 FFF7FEFF 		bl	dwc_otg_read_common_intr
 3082 003c 0346     		mov	r3, r0
 3083 003e BB62     		str	r3, [r7, #40]
1286:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1287:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		if (gintsts.b.modemismatch) {
 3084              		.loc 2 1287 0
 3085 0040 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 3086 0044 03F00203 		and	r3, r3, #2
 3087 0048 DBB2     		uxtb	r3, r3
 3088 004a 002B     		cmp	r3, #0
 3089 004c 06D0     		beq	.L113
1288:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			retval |= dwc_otg_handle_mode_mismatch_intr(core_if);
 3090              		.loc 2 1288 0
 3091 004e 7868     		ldr	r0, [r7, #4]
 3092 0050 FFF7FEFF 		bl	dwc_otg_handle_mode_mismatch_intr
 3093 0054 0346     		mov	r3, r0
 3094 0056 FA6A     		ldr	r2, [r7, #44]
 3095 0058 1343     		orrs	r3, r3, r2
 3096 005a FB62     		str	r3, [r7, #44]
 3097              	.L113:
1289:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		}
1290:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		if (gintsts.b.otgintr) {
 3098              		.loc 2 1290 0
 3099 005c 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 3100 0060 03F00403 		and	r3, r3, #4
 3101 0064 DBB2     		uxtb	r3, r3
 3102 0066 002B     		cmp	r3, #0
 3103 0068 06D0     		beq	.L114
1291:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			retval |= dwc_otg_handle_otg_intr(core_if);
 3104              		.loc 2 1291 0
 3105 006a 7868     		ldr	r0, [r7, #4]
 3106 006c FFF7FEFF 		bl	dwc_otg_handle_otg_intr
 3107 0070 0346     		mov	r3, r0
 3108 0072 FA6A     		ldr	r2, [r7, #44]
 3109 0074 1343     		orrs	r3, r3, r2
 3110 0076 FB62     		str	r3, [r7, #44]
 3111              	.L114:
1292:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		}
1293:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		if (gintsts.b.conidstschng) {
 3112              		.loc 2 1293 0
 3113 0078 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 3114 007c 03F01003 		and	r3, r3, #16
 3115 0080 DBB2     		uxtb	r3, r3
 3116 0082 002B     		cmp	r3, #0
 3117 0084 06D0     		beq	.L115
1294:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			retval |= dwc_otg_handle_conn_id_status_change_intr(core_if);
 3118              		.loc 2 1294 0
 3119 0086 7868     		ldr	r0, [r7, #4]
 3120 0088 FFF7FEFF 		bl	dwc_otg_handle_conn_id_status_change_intr
 3121 008c 0346     		mov	r3, r0
 3122 008e FA6A     		ldr	r2, [r7, #44]
 3123 0090 1343     		orrs	r3, r3, r2
 3124 0092 FB62     		str	r3, [r7, #44]
 3125              	.L115:
1295:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		}
1296:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		if (gintsts.b.disconnect) {
 3126              		.loc 2 1296 0
 3127 0094 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 3128 0098 03F02003 		and	r3, r3, #32
 3129 009c DBB2     		uxtb	r3, r3
 3130 009e 002B     		cmp	r3, #0
 3131 00a0 06D0     		beq	.L116
1297:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			retval |= dwc_otg_handle_disconnect_intr(core_if);
 3132              		.loc 2 1297 0
 3133 00a2 7868     		ldr	r0, [r7, #4]
 3134 00a4 FFF7FEFF 		bl	dwc_otg_handle_disconnect_intr
 3135 00a8 0346     		mov	r3, r0
 3136 00aa FA6A     		ldr	r2, [r7, #44]
 3137 00ac 1343     		orrs	r3, r3, r2
 3138 00ae FB62     		str	r3, [r7, #44]
 3139              	.L116:
1298:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		}
1299:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		if (gintsts.b.sessreqintr) {
 3140              		.loc 2 1299 0
 3141 00b0 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 3142 00b4 03F04003 		and	r3, r3, #64
 3143 00b8 DBB2     		uxtb	r3, r3
 3144 00ba 002B     		cmp	r3, #0
 3145 00bc 06D0     		beq	.L117
1300:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			retval |= dwc_otg_handle_session_req_intr(core_if);
 3146              		.loc 2 1300 0
 3147 00be 7868     		ldr	r0, [r7, #4]
 3148 00c0 FFF7FEFF 		bl	dwc_otg_handle_session_req_intr
 3149 00c4 0346     		mov	r3, r0
 3150 00c6 FA6A     		ldr	r2, [r7, #44]
 3151 00c8 1343     		orrs	r3, r3, r2
 3152 00ca FB62     		str	r3, [r7, #44]
 3153              	.L117:
1301:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		}
1302:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		if (gintsts.b.wkupintr) {
 3154              		.loc 2 1302 0
 3155 00cc 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 3156 00d0 23F07F03 		bic	r3, r3, #127
 3157 00d4 DBB2     		uxtb	r3, r3
 3158 00d6 002B     		cmp	r3, #0
 3159 00d8 06D0     		beq	.L118
1303:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			retval |= dwc_otg_handle_wakeup_detected_intr(core_if);
 3160              		.loc 2 1303 0
 3161 00da 7868     		ldr	r0, [r7, #4]
 3162 00dc FFF7FEFF 		bl	dwc_otg_handle_wakeup_detected_intr
 3163 00e0 0346     		mov	r3, r0
 3164 00e2 FA6A     		ldr	r2, [r7, #44]
 3165 00e4 1343     		orrs	r3, r3, r2
 3166 00e6 FB62     		str	r3, [r7, #44]
 3167              	.L118:
1304:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		}
1305:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		if (gintsts.b.usbsuspend) {
 3168              		.loc 2 1305 0
 3169 00e8 97F82930 		ldrb	r3, [r7, #41]	@ zero_extendqisi2
 3170 00ec 03F00803 		and	r3, r3, #8
 3171 00f0 DBB2     		uxtb	r3, r3
 3172 00f2 002B     		cmp	r3, #0
 3173 00f4 06D0     		beq	.L119
1306:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			retval |= dwc_otg_handle_usb_suspend_intr(core_if);
 3174              		.loc 2 1306 0
 3175 00f6 7868     		ldr	r0, [r7, #4]
 3176 00f8 FFF7FEFF 		bl	dwc_otg_handle_usb_suspend_intr
 3177 00fc 0346     		mov	r3, r0
 3178 00fe FA6A     		ldr	r2, [r7, #44]
 3179 0100 1343     		orrs	r3, r3, r2
 3180 0102 FB62     		str	r3, [r7, #44]
 3181              	.L119:
1307:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		}
1308:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** #ifdef CONFIG_USB_DWC_OTG_LPM
1309:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		if (gintsts.b.lpmtranrcvd) {
1310:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			retval |= dwc_otg_handle_lpm_intr(core_if);
1311:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		}
1312:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** #endif
1313:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		if (gintsts.b.restoredone) {
 3182              		.loc 2 1313 0
 3183 0104 97F82A30 		ldrb	r3, [r7, #42]	@ zero_extendqisi2
 3184 0108 03F00103 		and	r3, r3, #1
 3185 010c DBB2     		uxtb	r3, r3
 3186 010e 002B     		cmp	r3, #0
 3187 0110 1DD0     		beq	.L120
1314:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			gintsts.d32 = 0;
 3188              		.loc 2 1314 0
 3189 0112 4FF00003 		mov	r3, #0
 3190 0116 BB62     		str	r3, [r7, #40]
1315:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	                if (core_if->power_down == 2)
 3191              		.loc 2 1315 0
 3192 0118 7B68     		ldr	r3, [r7, #4]
 3193 011a D3F89030 		ldr	r3, [r3, #144]
 3194 011e 022B     		cmp	r3, #2
 3195 0120 04D1     		bne	.L121
1316:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				core_if->hibernation_suspend = -1;
 3196              		.loc 2 1316 0
 3197 0122 7B68     		ldr	r3, [r7, #4]
 3198 0124 4FF0FF32 		mov	r2, #-1
 3199 0128 C3F8C020 		str	r2, [r3, #192]
 3200              	.L121:
1317:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			gintsts.b.restoredone = 1;
 3201              		.loc 2 1317 0
 3202 012c BB6A     		ldr	r3, [r7, #40]
 3203 012e 43F48033 		orr	r3, r3, #65536
 3204 0132 BB62     		str	r3, [r7, #40]
1318:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_WRITE_REG32(&core_if->core_global_regs->gintsts,gintsts.d32);
 3205              		.loc 2 1318 0
 3206 0134 7B68     		ldr	r3, [r7, #4]
 3207 0136 5B68     		ldr	r3, [r3, #4]
 3208 0138 03F11402 		add	r2, r3, #20
 3209 013c BB6A     		ldr	r3, [r7, #40]
 3210 013e 1046     		mov	r0, r2
 3211 0140 1946     		mov	r1, r3
 3212 0142 FFF7FEFF 		bl	DWC_WRITE_REG32
1319:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_PRINTF(" --Restore done interrupt received-- \n");
1320:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			retval |= 1;
 3213              		.loc 2 1320 0
 3214 0146 FB6A     		ldr	r3, [r7, #44]
 3215 0148 43F00103 		orr	r3, r3, #1
 3216 014c FB62     		str	r3, [r7, #44]
 3217              	.L120:
1321:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		}
1322:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		if (gintsts.b.portintr && dwc_otg_is_device_mode(core_if)) {
 3218              		.loc 2 1322 0
 3219 014e 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 3220 0152 03F00103 		and	r3, r3, #1
 3221 0156 DBB2     		uxtb	r3, r3
 3222 0158 002B     		cmp	r3, #0
 3223 015a 00F02881 		beq	.L122
 3224              		.loc 2 1322 0 is_stmt 0 discriminator 1
 3225 015e 7868     		ldr	r0, [r7, #4]
 3226 0160 FFF7FEFF 		bl	dwc_otg_is_device_mode
 3227 0164 0346     		mov	r3, r0
 3228 0166 002B     		cmp	r3, #0
 3229 0168 00F02181 		beq	.L122
1323:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			/* The port interrupt occurs while in device mode with HPRT0
1324:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			 * Port Enable/Disable.
1325:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			 */
1326:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			gintsts.d32 = 0;
 3230              		.loc 2 1326 0 is_stmt 1
 3231 016c 4FF00003 		mov	r3, #0
 3232 0170 BB62     		str	r3, [r7, #40]
1327:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			gintsts.b.portintr = 1;
 3233              		.loc 2 1327 0
 3234 0172 BB6A     		ldr	r3, [r7, #40]
 3235 0174 43F08073 		orr	r3, r3, #16777216
 3236 0178 BB62     		str	r3, [r7, #40]
1328:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			DWC_WRITE_REG32(&core_if->core_global_regs->gintsts,gintsts.d32);
 3237              		.loc 2 1328 0
 3238 017a 7B68     		ldr	r3, [r7, #4]
 3239 017c 5B68     		ldr	r3, [r3, #4]
 3240 017e 03F11402 		add	r2, r3, #20
 3241 0182 BB6A     		ldr	r3, [r7, #40]
 3242 0184 1046     		mov	r0, r2
 3243 0186 1946     		mov	r1, r3
 3244 0188 FFF7FEFF 		bl	DWC_WRITE_REG32
1329:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			retval |= 1;
 3245              		.loc 2 1329 0
 3246 018c FB6A     		ldr	r3, [r7, #44]
 3247 018e 43F00103 		orr	r3, r3, #1
 3248 0192 FB62     		str	r3, [r7, #44]
 3249 0194 0BE1     		b	.L122
 3250              	.L112:
1330:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1331:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		}
1332:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	} else {
1333:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		gpwrdn.d32 = DWC_READ_REG32(&core_if->core_global_regs->gpwrdn);
 3251              		.loc 2 1333 0
 3252 0196 7B68     		ldr	r3, [r7, #4]
 3253 0198 5B68     		ldr	r3, [r3, #4]
 3254 019a 03F15803 		add	r3, r3, #88
 3255 019e 1846     		mov	r0, r3
 3256 01a0 FFF7FEFF 		bl	DWC_READ_REG32
 3257 01a4 0346     		mov	r3, r0
 3258 01a6 7B62     		str	r3, [r7, #36]
1334:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_DEBUGPL(DBG_ANY, "gpwrdn=%08x\n", gpwrdn.d32);
1335:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1336:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		if (gpwrdn.b.disconn_det && gpwrdn.b.disconn_det_msk) {
 3259              		.loc 2 1336 0
 3260 01a8 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 3261 01ac 03F00803 		and	r3, r3, #8
 3262 01b0 DBB2     		uxtb	r3, r3
 3263 01b2 002B     		cmp	r3, #0
 3264 01b4 26D0     		beq	.L123
 3265              		.loc 2 1336 0 is_stmt 0 discriminator 1
 3266 01b6 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 3267 01ba 03F01003 		and	r3, r3, #16
 3268 01be DBB2     		uxtb	r3, r3
 3269 01c0 002B     		cmp	r3, #0
 3270 01c2 1FD0     		beq	.L123
 3271              	.LBB7:
1337:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			CLEAR_GPWRDN_INTR(core_if, disconn_det);
 3272              		.loc 2 1337 0 is_stmt 1
 3273 01c4 4FF00003 		mov	r3, #0
 3274 01c8 3B62     		str	r3, [r7, #32]
 3275 01ca 3B6A     		ldr	r3, [r7, #32]
 3276 01cc 43F40063 		orr	r3, r3, #2048
 3277 01d0 3B62     		str	r3, [r7, #32]
 3278 01d2 7B68     		ldr	r3, [r7, #4]
 3279 01d4 5B68     		ldr	r3, [r3, #4]
 3280 01d6 03F15802 		add	r2, r3, #88
 3281 01da 3B6A     		ldr	r3, [r7, #32]
 3282 01dc 1046     		mov	r0, r2
 3283 01de 4FF00001 		mov	r1, #0
 3284 01e2 1A46     		mov	r2, r3
 3285 01e4 FFF7FEFF 		bl	DWC_MODIFY_REG32
 3286              	.LBE7:
1338:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			if (gpwrdn.b.linestate == 0) {
 3287              		.loc 2 1338 0
 3288 01e8 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 3289 01ec 03F01803 		and	r3, r3, #24
 3290 01f0 DBB2     		uxtb	r3, r3
 3291 01f2 002B     		cmp	r3, #0
 3292 01f4 02D1     		bne	.L124
1339:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				dwc_otg_handle_pwrdn_disconnect_intr(core_if);
 3293              		.loc 2 1339 0
 3294 01f6 7868     		ldr	r0, [r7, #4]
 3295 01f8 FFF7FEFF 		bl	dwc_otg_handle_pwrdn_disconnect_intr
 3296              	.L124:
1340:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			} else {
1341:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				DWC_PRINTF("Disconnect detected while linestate is not 0\n");
1342:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			}
1343:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1344:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			retval |= 1;
 3297              		.loc 2 1344 0
 3298 01fc FB6A     		ldr	r3, [r7, #44]
 3299 01fe 43F00103 		orr	r3, r3, #1
 3300 0202 FB62     		str	r3, [r7, #44]
 3301              	.L123:
1345:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		}
1346:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1347:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		if (gpwrdn.b.lnstschng && gpwrdn.b.lnstchng_msk) {
 3302              		.loc 2 1347 0
 3303 0204 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 3304 0208 23F07F03 		bic	r3, r3, #127
 3305 020c DBB2     		uxtb	r3, r3
 3306 020e 002B     		cmp	r3, #0
 3307 0210 2DD0     		beq	.L125
 3308              		.loc 2 1347 0 is_stmt 0 discriminator 1
 3309 0212 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 3310 0216 03F00103 		and	r3, r3, #1
 3311 021a DBB2     		uxtb	r3, r3
 3312 021c 002B     		cmp	r3, #0
 3313 021e 26D0     		beq	.L125
 3314              	.LBB8:
1348:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			CLEAR_GPWRDN_INTR(core_if, lnstschng);
 3315              		.loc 2 1348 0 is_stmt 1
 3316 0220 4FF00003 		mov	r3, #0
 3317 0224 FB61     		str	r3, [r7, #28]
 3318 0226 FB69     		ldr	r3, [r7, #28]
 3319 0228 43F08003 		orr	r3, r3, #128
 3320 022c FB61     		str	r3, [r7, #28]
 3321 022e 7B68     		ldr	r3, [r7, #4]
 3322 0230 5B68     		ldr	r3, [r3, #4]
 3323 0232 03F15802 		add	r2, r3, #88
 3324 0236 FB69     		ldr	r3, [r7, #28]
 3325 0238 1046     		mov	r0, r2
 3326 023a 4FF00001 		mov	r1, #0
 3327 023e 1A46     		mov	r2, r3
 3328 0240 FFF7FEFF 		bl	DWC_MODIFY_REG32
 3329              	.LBE8:
1349:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			/* remote wakeup from hibernation */
1350:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			if (gpwrdn.b.linestate == 2 || gpwrdn.b.linestate == 1) {
 3330              		.loc 2 1350 0
 3331 0244 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 3332 0248 03F01803 		and	r3, r3, #24
 3333 024c DBB2     		uxtb	r3, r3
 3334 024e 102B     		cmp	r3, #16
 3335 0250 06D0     		beq	.L126
 3336              		.loc 2 1350 0 is_stmt 0 discriminator 1
 3337 0252 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 3338 0256 03F01803 		and	r3, r3, #24
 3339 025a DBB2     		uxtb	r3, r3
 3340 025c 082B     		cmp	r3, #8
 3341 025e 02D1     		bne	.L127
 3342              	.L126:
1351:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				dwc_otg_handle_pwrdn_wakeup_detected_intr(core_if);
 3343              		.loc 2 1351 0 is_stmt 1
 3344 0260 7868     		ldr	r0, [r7, #4]
 3345 0262 FFF7FEFF 		bl	dwc_otg_handle_pwrdn_wakeup_detected_intr
 3346              	.L127:
1352:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			} else {
1353:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				DWC_PRINTF("gpwrdn.linestate = %d\n", gpwrdn.b.linestate);
1354:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			}
1355:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			retval |= 1;
 3347              		.loc 2 1355 0
 3348 0266 FB6A     		ldr	r3, [r7, #44]
 3349 0268 43F00103 		orr	r3, r3, #1
 3350 026c FB62     		str	r3, [r7, #44]
 3351              	.L125:
1356:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1357:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		}
1358:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		if (gpwrdn.b.rst_det && gpwrdn.b.rst_det_msk) {
 3352              		.loc 2 1358 0
 3353 026e 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 3354 0272 03F00203 		and	r3, r3, #2
 3355 0276 DBB2     		uxtb	r3, r3
 3356 0278 002B     		cmp	r3, #0
 3357 027a 2AD0     		beq	.L128
 3358              		.loc 2 1358 0 is_stmt 0 discriminator 1
 3359 027c 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 3360 0280 03F00403 		and	r3, r3, #4
 3361 0284 DBB2     		uxtb	r3, r3
 3362 0286 002B     		cmp	r3, #0
 3363 0288 23D0     		beq	.L128
 3364              	.LBB9:
1359:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			CLEAR_GPWRDN_INTR(core_if, rst_det);
 3365              		.loc 2 1359 0 is_stmt 1
 3366 028a 4FF00003 		mov	r3, #0
 3367 028e BB61     		str	r3, [r7, #24]
 3368 0290 BB69     		ldr	r3, [r7, #24]
 3369 0292 43F40073 		orr	r3, r3, #512
 3370 0296 BB61     		str	r3, [r7, #24]
 3371 0298 7B68     		ldr	r3, [r7, #4]
 3372 029a 5B68     		ldr	r3, [r3, #4]
 3373 029c 03F15802 		add	r2, r3, #88
 3374 02a0 BB69     		ldr	r3, [r7, #24]
 3375 02a2 1046     		mov	r0, r2
 3376 02a4 4FF00001 		mov	r1, #0
 3377 02a8 1A46     		mov	r2, r3
 3378 02aa FFF7FEFF 		bl	DWC_MODIFY_REG32
 3379              	.LBE9:
1360:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			if (gpwrdn.b.linestate == 0) {
 3380              		.loc 2 1360 0
 3381 02ae 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 3382 02b2 03F01803 		and	r3, r3, #24
 3383 02b6 DBB2     		uxtb	r3, r3
 3384 02b8 002B     		cmp	r3, #0
 3385 02ba 0AD1     		bne	.L128
1361:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				DWC_PRINTF("Reset detected\n");
1362:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 				retval |= dwc_otg_device_hibernation_restore(core_if, 0, 1);
 3386              		.loc 2 1362 0
 3387 02bc 7868     		ldr	r0, [r7, #4]
 3388 02be 4FF00001 		mov	r1, #0
 3389 02c2 4FF00102 		mov	r2, #1
 3390 02c6 FFF7FEFF 		bl	dwc_otg_device_hibernation_restore
 3391 02ca 0346     		mov	r3, r0
 3392 02cc FA6A     		ldr	r2, [r7, #44]
 3393 02ce 1343     		orrs	r3, r3, r2
 3394 02d0 FB62     		str	r3, [r7, #44]
 3395              	.L128:
1363:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			}
1364:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		}
1365:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		if (gpwrdn.b.adp_int) {
 3396              		.loc 2 1365 0
 3397 02d2 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 3398 02d6 23F07F03 		bic	r3, r3, #127
 3399 02da DBB2     		uxtb	r3, r3
 3400 02dc 002B     		cmp	r3, #0
 3401 02de 18D0     		beq	.L129
 3402              	.LBB10:
1366:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			CLEAR_GPWRDN_INTR(core_if, adp_int);
 3403              		.loc 2 1366 0
 3404 02e0 4FF00003 		mov	r3, #0
 3405 02e4 7B61     		str	r3, [r7, #20]
 3406 02e6 7B69     		ldr	r3, [r7, #20]
 3407 02e8 43F40003 		orr	r3, r3, #8388608
 3408 02ec 7B61     		str	r3, [r7, #20]
 3409 02ee 7B68     		ldr	r3, [r7, #4]
 3410 02f0 5B68     		ldr	r3, [r3, #4]
 3411 02f2 03F15802 		add	r2, r3, #88
 3412 02f6 7B69     		ldr	r3, [r7, #20]
 3413 02f8 1046     		mov	r0, r2
 3414 02fa 4FF00001 		mov	r1, #0
 3415 02fe 1A46     		mov	r2, r3
 3416 0300 FFF7FEFF 		bl	DWC_MODIFY_REG32
 3417              	.LBE10:
1367:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			dwc_otg_adp_handle_intr(core_if);
 3418              		.loc 2 1367 0
 3419 0304 7868     		ldr	r0, [r7, #4]
 3420 0306 FFF7FEFF 		bl	dwc_otg_adp_handle_intr
1368:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			retval |= 1;
 3421              		.loc 2 1368 0
 3422 030a FB6A     		ldr	r3, [r7, #44]
 3423 030c 43F00103 		orr	r3, r3, #1
 3424 0310 FB62     		str	r3, [r7, #44]
 3425              	.L129:
1369:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		}
1370:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		if (gpwrdn.b.srp_det && gpwrdn.b.srp_det_msk) {
 3426              		.loc 2 1370 0
 3427 0312 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 3428 0316 23F07F03 		bic	r3, r3, #127
 3429 031a DBB2     		uxtb	r3, r3
 3430 031c 002B     		cmp	r3, #0
 3431 031e 1FD0     		beq	.L130
 3432              		.loc 2 1370 0 is_stmt 0 discriminator 1
 3433 0320 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 3434 0324 03F00103 		and	r3, r3, #1
 3435 0328 DBB2     		uxtb	r3, r3
 3436 032a 002B     		cmp	r3, #0
 3437 032c 18D0     		beq	.L130
 3438              	.LBB11:
1371:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			CLEAR_GPWRDN_INTR(core_if, srp_det);
 3439              		.loc 2 1371 0 is_stmt 1
 3440 032e 4FF00003 		mov	r3, #0
 3441 0332 3B61     		str	r3, [r7, #16]
 3442 0334 3B69     		ldr	r3, [r7, #16]
 3443 0336 43F40043 		orr	r3, r3, #32768
 3444 033a 3B61     		str	r3, [r7, #16]
 3445 033c 7B68     		ldr	r3, [r7, #4]
 3446 033e 5B68     		ldr	r3, [r3, #4]
 3447 0340 03F15802 		add	r2, r3, #88
 3448 0344 3B69     		ldr	r3, [r7, #16]
 3449 0346 1046     		mov	r0, r2
 3450 0348 4FF00001 		mov	r1, #0
 3451 034c 1A46     		mov	r2, r3
 3452 034e FFF7FEFF 		bl	DWC_MODIFY_REG32
 3453              	.LBE11:
1372:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			dwc_otg_handle_pwrdn_srp_intr(core_if);
 3454              		.loc 2 1372 0
 3455 0352 7868     		ldr	r0, [r7, #4]
 3456 0354 FFF7FEFF 		bl	dwc_otg_handle_pwrdn_srp_intr
1373:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			retval |= 1;
 3457              		.loc 2 1373 0
 3458 0358 FB6A     		ldr	r3, [r7, #44]
 3459 035a 43F00103 		orr	r3, r3, #1
 3460 035e FB62     		str	r3, [r7, #44]
 3461              	.L130:
1374:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		}
1375:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		if (gpwrdn.b.sts_chngint && gpwrdn.b.sts_chngint_msk) {
 3462              		.loc 2 1375 0
 3463 0360 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 3464 0364 03F00203 		and	r3, r3, #2
 3465 0368 DBB2     		uxtb	r3, r3
 3466 036a 002B     		cmp	r3, #0
 3467 036c 1FD0     		beq	.L122
 3468              		.loc 2 1375 0 is_stmt 0 discriminator 1
 3469 036e 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 3470 0372 03F00403 		and	r3, r3, #4
 3471 0376 DBB2     		uxtb	r3, r3
 3472 0378 002B     		cmp	r3, #0
 3473 037a 18D0     		beq	.L122
 3474              	.LBB12:
1376:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			CLEAR_GPWRDN_INTR(core_if, sts_chngint);
 3475              		.loc 2 1376 0 is_stmt 1
 3476 037c 4FF00003 		mov	r3, #0
 3477 0380 FB60     		str	r3, [r7, #12]
 3478 0382 FB68     		ldr	r3, [r7, #12]
 3479 0384 43F40033 		orr	r3, r3, #131072
 3480 0388 FB60     		str	r3, [r7, #12]
 3481 038a 7B68     		ldr	r3, [r7, #4]
 3482 038c 5B68     		ldr	r3, [r3, #4]
 3483 038e 03F15802 		add	r2, r3, #88
 3484 0392 FB68     		ldr	r3, [r7, #12]
 3485 0394 1046     		mov	r0, r2
 3486 0396 4FF00001 		mov	r1, #0
 3487 039a 1A46     		mov	r2, r3
 3488 039c FFF7FEFF 		bl	DWC_MODIFY_REG32
 3489              	.LBE12:
1377:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			dwc_otg_handle_pwrdn_stschng_intr(core_if);
 3490              		.loc 2 1377 0
 3491 03a0 7868     		ldr	r0, [r7, #4]
 3492 03a2 FFF7FEFF 		bl	dwc_otg_handle_pwrdn_stschng_intr
1378:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1379:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 			retval |= 1;
 3493              		.loc 2 1379 0
 3494 03a6 FB6A     		ldr	r3, [r7, #44]
 3495 03a8 43F00103 		orr	r3, r3, #1
 3496 03ac FB62     		str	r3, [r7, #44]
 3497              	.L122:
1380:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		}
1381:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	}
1382:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	if (core_if->lock)
 3498              		.loc 2 1382 0
 3499 03ae 7B68     		ldr	r3, [r7, #4]
 3500 03b0 D3F8CC30 		ldr	r3, [r3, #204]
 3501 03b4 002B     		cmp	r3, #0
 3502 03b6 05D0     		beq	.L131
1383:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 		DWC_SPINUNLOCK(core_if->lock);
 3503              		.loc 2 1383 0
 3504 03b8 7B68     		ldr	r3, [r7, #4]
 3505 03ba D3F8CC30 		ldr	r3, [r3, #204]
 3506 03be 1846     		mov	r0, r3
 3507 03c0 FFF7FEFF 		bl	DWC_SPINUNLOCK
 3508              	.L131:
1384:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 
1385:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** 	return retval;
 3509              		.loc 2 1385 0
 3510 03c4 FB6A     		ldr	r3, [r7, #44]
1386:../Dave/Generated/src/USBLD001/driver/dwc_otg_cil_intr.c **** }
 3511              		.loc 2 1386 0
 3512 03c6 1846     		mov	r0, r3
 3513 03c8 07F13007 		add	r7, r7, #48
 3514 03cc BD46     		mov	sp, r7
 3515 03ce 80BD     		pop	{r7, pc}
 3516              		.cfi_endproc
 3517              	.LFE37:
 3519              		.text
 3520              	.Letext0:
 3521              		.file 3 "c:\\dave-3.1.10\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/i
 3522              		.file 4 "../Dave/Generated/src/USBLD001/driver/../dwc_common_port/dwc_os.h"
 3523              		.file 5 "../Dave/Generated/src/USBLD001/driver/dwc_otg_core_if.h"
 3524              		.file 6 "../Dave/Generated/src/USBLD001/driver/dwc_otg_regs.h"
 3525              		.file 7 "../Dave/Generated/src/USBLD001/driver/dwc_otg_adp.h"
 3526              		.file 8 "../Dave/Generated/src/USBLD001/driver/dwc_otg_dbg.h"
DEFINED SYMBOLS
                            *ABS*:00000000 dwc_otg_cil_intr.c
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:20     .text.dwc_otg_read_hprt0:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:24     .text.dwc_otg_read_hprt0:00000000 dwc_otg_read_hprt0
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:78     .text.cil_hcd_start:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:82     .text.cil_hcd_start:00000000 cil_hcd_start
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:129    .text.cil_hcd_disconnect:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:133    .text.cil_hcd_disconnect:00000000 cil_hcd_disconnect
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:180    .text.cil_hcd_session_start:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:184    .text.cil_hcd_session_start:00000000 cil_hcd_session_start
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:231    .text.cil_hcd_resume:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:235    .text.cil_hcd_resume:00000000 cil_hcd_resume
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:282    .text.cil_pcd_start:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:286    .text.cil_pcd_start:00000000 cil_pcd_start
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:333    .text.cil_pcd_stop:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:337    .text.cil_pcd_stop:00000000 cil_pcd_stop
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:384    .text.cil_pcd_suspend:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:388    .text.cil_pcd_suspend:00000000 cil_pcd_suspend
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:435    .text.cil_pcd_resume:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:439    .text.cil_pcd_resume:00000000 cil_pcd_resume
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:486    .text.dwc_otg_handle_mode_mismatch_intr:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:491    .text.dwc_otg_handle_mode_mismatch_intr:00000000 dwc_otg_handle_mode_mismatch_intr
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:536    .text.dwc_otg_handle_otg_intr:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:541    .text.dwc_otg_handle_otg_intr:00000000 dwc_otg_handle_otg_intr
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:918    .text.w_conn_id_status_change:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:923    .text.w_conn_id_status_change:00000000 w_conn_id_status_change
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:1053   .rodata:00000000 $d
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:1054   .rodata:00000000 .LC0
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:1057   .text.dwc_otg_handle_conn_id_status_change_intr:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:1062   .text.dwc_otg_handle_conn_id_status_change_intr:00000000 dwc_otg_handle_conn_id_status_change_intr
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:1142   .text.dwc_otg_handle_session_req_intr:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:1147   .text.dwc_otg_handle_session_req_intr:00000000 dwc_otg_handle_session_req_intr
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:1218   .text.w_wakeup_detected:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:1223   .text.w_wakeup_detected:00000000 w_wakeup_detected
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:1279   .text.dwc_otg_handle_wakeup_detected_intr:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:1284   .text.dwc_otg_handle_wakeup_detected_intr:00000000 dwc_otg_handle_wakeup_detected_intr
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:1461   .text.dwc_otg_handle_pwrdn_disconnect_intr:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:1465   .text.dwc_otg_handle_pwrdn_disconnect_intr:00000000 dwc_otg_handle_pwrdn_disconnect_intr
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:1662   .text.dwc_otg_handle_pwrdn_wakeup_detected_intr:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:1666   .text.dwc_otg_handle_pwrdn_wakeup_detected_intr:00000000 dwc_otg_handle_pwrdn_wakeup_detected_intr
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:1755   .text.dwc_otg_handle_pwrdn_idsts_change:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:1759   .text.dwc_otg_handle_pwrdn_idsts_change:00000000 dwc_otg_handle_pwrdn_idsts_change
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:1984   .text.dwc_otg_handle_pwrdn_session_change:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:1988   .text.dwc_otg_handle_pwrdn_session_change:00000000 dwc_otg_handle_pwrdn_session_change
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:2217   .text.dwc_otg_handle_pwrdn_stschng_intr:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:2221   .text.dwc_otg_handle_pwrdn_stschng_intr:00000000 dwc_otg_handle_pwrdn_stschng_intr
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:2308   .text.dwc_otg_handle_pwrdn_srp_intr:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:2312   .text.dwc_otg_handle_pwrdn_srp_intr:00000000 dwc_otg_handle_pwrdn_srp_intr
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:2492   .text.dwc_otg_handle_restore_done_intr:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:2497   .text.dwc_otg_handle_restore_done_intr:00000000 dwc_otg_handle_restore_done_intr
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:2558   .text.dwc_otg_handle_disconnect_intr:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:2563   .text.dwc_otg_handle_disconnect_intr:00000000 dwc_otg_handle_disconnect_intr
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:2611   .text.dwc_otg_handle_usb_suspend_intr:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:2616   .text.dwc_otg_handle_usb_suspend_intr:00000000 dwc_otg_handle_usb_suspend_intr
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:2942   .text.dwc_otg_read_common_intr:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:2946   .text.dwc_otg_read_common_intr:00000000 dwc_otg_read_common_intr
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:3034   .text.dwc_otg_handle_common_intr:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccZ2xLcY.s:3039   .text.dwc_otg_handle_common_intr:00000000 dwc_otg_handle_common_intr
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.84cfd71c6d2dc0bd4021712beaa9efd8
                           .group:00000000 wm4.stdarg.h.31.b70f21342353634f7b44d85f85f13832
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.stddef.h.187.9e651b6b8b16e149c1353259404973ea
                           .group:00000000 wm4.string.h.17.f8d12df81104836a3f2a5d589ae830d8
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.stddef.h.40.cf962ebbec441b3ac67502735f0765db
                           .group:00000000 wm4.types.h.60.e75c47576398c648cdcf9000ace5e3d8
                           .group:00000000 wm4.type_CM.h.61.3660c940695d7d5fef91de9c4081d0f0
                           .group:00000000 wm4.dwc_os.h.82.db2ca40c41e2f648d146b8942e5157d9
                           .group:00000000 wm4.dwc_otg_core_if.h.79.69b423f1b80cf6599fa5d22acae5fed6
                           .group:00000000 wm4.dwc_otg_regs.h.126.2e3ceb012c63b4493a7f3895cc69d724
                           .group:00000000 wm4.dwc_list.h.80.8da47a4d46ff6c633100fe5858ae15ea
                           .group:00000000 wm4.dwc_otg_dbg.h.74.dce17e0e4baa7dab653ff5db193ad2a8
                           .group:00000000 wm4.dwc_otg_adp.h.77.1b967e1ac3ef3726f9d560a2ab3c7ddc
                           .group:00000000 wm4.dwc_otg_cil.h.115.51e9f472a778bee570c9e431e948c25d

UNDEFINED SYMBOLS
DWC_READ_REG32
DWC_WRITE_REG32
DWC_SPINUNLOCK
DWC_SPINLOCK
DWC_MODIFY_REG32
dwc_otg_adp_sense_start
dwc_otg_is_host_mode
dwc_otg_is_device_mode
DWC_MDELAY
dwc_otg_core_init
dwc_otg_enable_global_interrupts
DWC_WORKQ_SCHEDULE
DWC_TIMER_SCHEDULE
DWC_UDELAY
dwc_otg_device_hibernation_restore
dwc_otg_host_hibernation_restore
dwc_otg_initiate_srp
dwc_otg_save_global_regs
dwc_otg_save_dev_regs
dwc_otg_adp_handle_intr
