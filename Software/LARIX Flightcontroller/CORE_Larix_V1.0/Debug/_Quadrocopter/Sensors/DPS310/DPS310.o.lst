   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"DPS310.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	Praw
  20              		.bss
  21              		.align	2
  24              	Praw:
  25 0000 00000000 		.space	4
  26              		.global	Traw
  27              		.align	2
  30              	Traw:
  31 0004 00000000 		.space	4
  32              		.global	Praw_sc
  33              		.align	2
  36              	Praw_sc:
  37 0008 00000000 		.space	4
  38              		.global	Traw_sc
  39              		.align	2
  42              	Traw_sc:
  43 000c 00000000 		.space	4
  44              		.global	Pcomp
  45              		.align	2
  48              	Pcomp:
  49 0010 00000000 		.space	4
  50              		.global	Tcomp
  51              		.align	2
  54              	Tcomp:
  55 0014 00000000 		.space	4
  56              		.global	c00
  57              		.align	2
  60              	c00:
  61 0018 00000000 		.space	4
  62              		.global	c10
  63              		.align	2
  66              	c10:
  67 001c 00000000 		.space	4
  68              		.global	c20
  69              		.align	2
  72              	c20:
  73 0020 00000000 		.space	4
  74              		.global	c30
  75              		.align	2
  78              	c30:
  79 0024 00000000 		.space	4
  80              		.global	c01
  81              		.align	2
  84              	c01:
  85 0028 00000000 		.space	4
  86              		.global	c11
  87              		.align	2
  90              	c11:
  91 002c 00000000 		.space	4
  92              		.global	c21
  93              		.align	2
  96              	c21:
  97 0030 00000000 		.space	4
  98              		.global	c0
  99              		.align	2
 102              	c0:
 103 0034 00000000 		.space	4
 104              		.global	c1
 105              		.align	2
 108              	c1:
 109 0038 00000000 		.space	4
 110              		.global	kP
 111              		.align	2
 114              	kP:
 115 003c 00000000 		.space	4
 116              		.global	kT
 117              		.align	2
 120              	kT:
 121 0040 00000000 		.space	4
 122              		.section	.text.ERU1_3_IRQHandler,"ax",%progbits
 123              		.align	2
 124              		.global	ERU1_3_IRQHandler
 125              		.thumb
 126              		.thumb_func
 128              	ERU1_3_IRQHandler:
 129              	.LFB153:
 130              		.file 1 "../_Quadrocopter/Sensors/DPS310/DPS310.c"
   1:../_Quadrocopter/Sensors/DPS310/DPS310.c **** /*
   2:../_Quadrocopter/Sensors/DPS310/DPS310.c ****  * DPS310.c
   3:../_Quadrocopter/Sensors/DPS310/DPS310.c ****  *
   4:../_Quadrocopter/Sensors/DPS310/DPS310.c ****  *  Created on: 01.09.2015
   5:../_Quadrocopter/Sensors/DPS310/DPS310.c ****  *      Author: SteurerE
   6:../_Quadrocopter/Sensors/DPS310/DPS310.c ****  */
   7:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 
   8:../_Quadrocopter/Sensors/DPS310/DPS310.c **** #include "DPS310.h"
   9:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 
  10:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 
  11:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 
  12:../_Quadrocopter/Sensors/DPS310/DPS310.c **** int32_t Praw = 0;
  13:../_Quadrocopter/Sensors/DPS310/DPS310.c **** int32_t Traw = 0;
  14:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 
  15:../_Quadrocopter/Sensors/DPS310/DPS310.c **** // variables for calculation
  16:../_Quadrocopter/Sensors/DPS310/DPS310.c **** float Praw_sc = 0;
  17:../_Quadrocopter/Sensors/DPS310/DPS310.c **** float Traw_sc = 0;
  18:../_Quadrocopter/Sensors/DPS310/DPS310.c **** float Pcomp = 0;
  19:../_Quadrocopter/Sensors/DPS310/DPS310.c **** float Tcomp = 0;
  20:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 
  21:../_Quadrocopter/Sensors/DPS310/DPS310.c **** // coefficients to calculate physical values
  22:../_Quadrocopter/Sensors/DPS310/DPS310.c **** int32_t c00 = 0;
  23:../_Quadrocopter/Sensors/DPS310/DPS310.c **** int32_t c10 = 0;
  24:../_Quadrocopter/Sensors/DPS310/DPS310.c **** int32_t c20 = 0;
  25:../_Quadrocopter/Sensors/DPS310/DPS310.c **** int32_t c30 = 0;
  26:../_Quadrocopter/Sensors/DPS310/DPS310.c **** int32_t c01 = 0;
  27:../_Quadrocopter/Sensors/DPS310/DPS310.c **** int32_t c11 = 0;
  28:../_Quadrocopter/Sensors/DPS310/DPS310.c **** int32_t c21 = 0;
  29:../_Quadrocopter/Sensors/DPS310/DPS310.c **** int32_t c0 = 0;
  30:../_Quadrocopter/Sensors/DPS310/DPS310.c **** int32_t c1 = 0;
  31:../_Quadrocopter/Sensors/DPS310/DPS310.c **** // compensation scale factors (data sheet page 15, table 9)
  32:../_Quadrocopter/Sensors/DPS310/DPS310.c **** uint32_t kP = 0;
  33:../_Quadrocopter/Sensors/DPS310/DPS310.c **** uint32_t kT = 0;
  34:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 
  35:../_Quadrocopter/Sensors/DPS310/DPS310.c **** void DPS_EXT_INT_ISR(void)
  36:../_Quadrocopter/Sensors/DPS310/DPS310.c **** {
 131              		.loc 1 36 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 56
 134              		@ frame_needed = 1, uses_anonymous_args = 0
 135 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 136              	.LCFI0:
 137              		.cfi_def_cfa_offset 24
 138              		.cfi_offset 4, -24
 139              		.cfi_offset 5, -20
 140              		.cfi_offset 6, -16
 141              		.cfi_offset 7, -12
 142              		.cfi_offset 8, -8
 143              		.cfi_offset 14, -4
 144 0004 9AB0     		sub	sp, sp, #104
 145              	.LCFI1:
 146              		.cfi_def_cfa_offset 128
 147 0006 0CAF     		add	r7, sp, #48
 148              	.LCFI2:
 149              		.cfi_def_cfa 7, 80
  37:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	updateValues(&pressure, &temperature);
 150              		.loc 1 37 0
 151 0008 40F20000 		movw	r0, #:lower16:pressure
 152 000c C0F20000 		movt	r0, #:upper16:pressure
 153 0010 40F20001 		movw	r1, #:lower16:temperature
 154 0014 C0F20001 		movt	r1, #:upper16:temperature
 155 0018 FFF7FEFF 		bl	updateValues
  38:../_Quadrocopter/Sensors/DPS310/DPS310.c ****     I2Cdev_readByte((const I2C001Handle_type*)&DPS310_I2C_Handle,DPS310_Address,0x0A);
 156              		.loc 1 38 0
 157 001c 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 158 0020 C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 159 0024 4FF0EE01 		mov	r1, #238
 160 0028 4FF00A02 		mov	r2, #10
 161 002c FFF7FEFF 		bl	I2Cdev_readByte
  39:../_Quadrocopter/Sensors/DPS310/DPS310.c ****     PressureFIR = FIR_FILTER(PressureFIR, pressure);
 162              		.loc 1 39 0
 163 0030 40F20003 		movw	r3, #:lower16:pressure
 164 0034 C0F20003 		movt	r3, #:upper16:pressure
 165 0038 1B68     		ldr	r3, [r3, #0]	@ float
 166 003a 40F20008 		movw	r8, #:lower16:PressureFIR
 167 003e C0F20008 		movt	r8, #:upper16:PressureFIR
 168 0042 BE46     		mov	lr, r7
 169 0044 40F20006 		movw	r6, #:lower16:PressureFIR
 170 0048 C0F20006 		movt	r6, #:upper16:PressureFIR
 171 004c 0B93     		str	r3, [sp, #44]	@ float
 172 004e 6C46     		mov	r4, sp
 173 0050 06F10C05 		add	r5, r6, #12
 174 0054 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 175 0056 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 176 0058 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 177 005a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 178 005c 95E80700 		ldmia	r5, {r0, r1, r2}
 179 0060 84E80700 		stmia	r4, {r0, r1, r2}
 180 0064 96E80E00 		ldmia	r6, {r1, r2, r3}
 181 0068 7046     		mov	r0, lr
 182 006a FFF7FEFF 		bl	FIR_FILTER
 183 006e 4446     		mov	r4, r8
 184 0070 3D46     		mov	r5, r7
 185 0072 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 186 0074 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 187 0076 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 188 0078 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 189 007a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 190 007c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 191 007e 95E80300 		ldmia	r5, {r0, r1}
 192 0082 84E80300 		stmia	r4, {r0, r1}
  40:../_Quadrocopter/Sensors/DPS310/DPS310.c ****     //#>>>>>>>>>>
  41:../_Quadrocopter/Sensors/DPS310/DPS310.c ****     //# due to the unstable performance of DPS310, I assign ground pressure and temperature here
  42:../_Quadrocopter/Sensors/DPS310/DPS310.c ****     //# rather than in Initialize() to make sure they have legal values.
  43:../_Quadrocopter/Sensors/DPS310/DPS310.c ****     //# These sentences will be executed only once.
  44:../_Quadrocopter/Sensors/DPS310/DPS310.c ****     if(!(ground_pressure > 90000 && ground_pressure < 100000)) ground_pressure = pressure;
 193              		.loc 1 44 0
 194 0086 40F20003 		movw	r3, #:lower16:ground_pressure
 195 008a C0F20003 		movt	r3, #:upper16:ground_pressure
 196 008e 93ED007A 		flds	s14, [r3, #0]
 197 0092 DFED327A 		flds	s15, .L6
 198 0096 B4EEE77A 		fcmpes	s14, s15
 199 009a F1EE10FA 		fmstat
 200 009e D4BF     		ite	le
 201 00a0 0023     		movle	r3, #0
 202 00a2 0123     		movgt	r3, #1
 203 00a4 DBB2     		uxtb	r3, r3
 204 00a6 83F00103 		eor	r3, r3, #1
 205 00aa DBB2     		uxtb	r3, r3
 206 00ac 002B     		cmp	r3, #0
 207 00ae 14D1     		bne	.L2
 208              		.loc 1 44 0 is_stmt 0 discriminator 2
 209 00b0 40F20003 		movw	r3, #:lower16:ground_pressure
 210 00b4 C0F20003 		movt	r3, #:upper16:ground_pressure
 211 00b8 93ED007A 		flds	s14, [r3, #0]
 212 00bc DFED287A 		flds	s15, .L6+4
 213 00c0 B4EEE77A 		fcmpes	s14, s15
 214 00c4 F1EE10FA 		fmstat
 215 00c8 54BF     		ite	pl
 216 00ca 0023     		movpl	r3, #0
 217 00cc 0123     		movmi	r3, #1
 218 00ce DBB2     		uxtb	r3, r3
 219 00d0 83F00103 		eor	r3, r3, #1
 220 00d4 DBB2     		uxtb	r3, r3
 221 00d6 002B     		cmp	r3, #0
 222 00d8 09D0     		beq	.L3
 223              	.L2:
 224              		.loc 1 44 0 discriminator 1
 225 00da 40F20003 		movw	r3, #:lower16:pressure
 226 00de C0F20003 		movt	r3, #:upper16:pressure
 227 00e2 1A68     		ldr	r2, [r3, #0]	@ float
 228 00e4 40F20003 		movw	r3, #:lower16:ground_pressure
 229 00e8 C0F20003 		movt	r3, #:upper16:ground_pressure
 230 00ec 1A60     		str	r2, [r3, #0]	@ float
 231              	.L3:
  45:../_Quadrocopter/Sensors/DPS310/DPS310.c ****     if(!(ground_temperature > 0 && ground_temperature < 50)) ground_temperature = temperature;
 232              		.loc 1 45 0 is_stmt 1
 233 00ee 40F20003 		movw	r3, #:lower16:ground_temperature
 234 00f2 C0F20003 		movt	r3, #:upper16:ground_temperature
 235 00f6 D3ED007A 		flds	s15, [r3, #0]
 236 00fa F5EEC07A 		fcmpezs	s15
 237 00fe F1EE10FA 		fmstat
 238 0102 D4BF     		ite	le
 239 0104 0023     		movle	r3, #0
 240 0106 0123     		movgt	r3, #1
 241 0108 DBB2     		uxtb	r3, r3
 242 010a 83F00103 		eor	r3, r3, #1
 243 010e DBB2     		uxtb	r3, r3
 244 0110 002B     		cmp	r3, #0
 245 0112 14D1     		bne	.L4
 246              		.loc 1 45 0 is_stmt 0 discriminator 2
 247 0114 40F20003 		movw	r3, #:lower16:ground_temperature
 248 0118 C0F20003 		movt	r3, #:upper16:ground_temperature
 249 011c 93ED007A 		flds	s14, [r3, #0]
 250 0120 DFED107A 		flds	s15, .L6+8
 251 0124 B4EEE77A 		fcmpes	s14, s15
 252 0128 F1EE10FA 		fmstat
 253 012c 54BF     		ite	pl
 254 012e 0023     		movpl	r3, #0
 255 0130 0123     		movmi	r3, #1
 256 0132 DBB2     		uxtb	r3, r3
 257 0134 83F00103 		eor	r3, r3, #1
 258 0138 DBB2     		uxtb	r3, r3
 259 013a 002B     		cmp	r3, #0
 260 013c 09D0     		beq	.L1
 261              	.L4:
 262              		.loc 1 45 0 discriminator 1
 263 013e 40F20003 		movw	r3, #:lower16:temperature
 264 0142 C0F20003 		movt	r3, #:upper16:temperature
 265 0146 1A68     		ldr	r2, [r3, #0]	@ float
 266 0148 40F20003 		movw	r3, #:lower16:ground_temperature
 267 014c C0F20003 		movt	r3, #:upper16:ground_temperature
 268 0150 1A60     		str	r2, [r3, #0]	@ float
 269              	.L1:
  46:../_Quadrocopter/Sensors/DPS310/DPS310.c ****     //#<<<<<<<<<<
  47:../_Quadrocopter/Sensors/DPS310/DPS310.c **** }
 270              		.loc 1 47 0 is_stmt 1
 271 0152 07F13807 		add	r7, r7, #56
 272 0156 BD46     		mov	sp, r7
 273 0158 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 274              	.L7:
 275              		.align	2
 276              	.L6:
 277 015c 00C8AF47 		.word	1202702336
 278 0160 0050C347 		.word	1203982336
 279 0164 00004842 		.word	1112014848
 280              		.cfi_endproc
 281              	.LFE153:
 283              		.section	.text.setupDPS310,"ax",%progbits
 284              		.align	2
 285              		.global	setupDPS310
 286              		.thumb
 287              		.thumb_func
 289              	setupDPS310:
 290              	.LFB154:
  48:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 
  49:../_Quadrocopter/Sensors/DPS310/DPS310.c **** SensorError setupDPS310()
  50:../_Quadrocopter/Sensors/DPS310/DPS310.c **** {
 291              		.loc 1 50 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 16
 294              		@ frame_needed = 1, uses_anonymous_args = 0
 295 0000 80B5     		push	{r7, lr}
 296              	.LCFI3:
 297              		.cfi_def_cfa_offset 8
 298              		.cfi_offset 7, -8
 299              		.cfi_offset 14, -4
 300 0002 84B0     		sub	sp, sp, #16
 301              	.LCFI4:
 302              		.cfi_def_cfa_offset 24
 303 0004 00AF     		add	r7, sp, #0
 304              	.LCFI5:
 305              		.cfi_def_cfa_register 7
  51:../_Quadrocopter/Sensors/DPS310/DPS310.c **** //*****************************************************************
  52:../_Quadrocopter/Sensors/DPS310/DPS310.c **** //		Attention: Measurement Time of the DPS310 must be <1s!
  53:../_Quadrocopter/Sensors/DPS310/DPS310.c **** //	  Measurement Time = PM_Rate*Time_Meas + TMP_RATE*Time_Meas
  54:../_Quadrocopter/Sensors/DPS310/DPS310.c **** //*****************************************************************
  55:../_Quadrocopter/Sensors/DPS310/DPS310.c **** //	Table: Time for 1 Measurement with Oversampling (PRC)
  56:../_Quadrocopter/Sensors/DPS310/DPS310.c **** //	_____________________________________________________________________________
  57:../_Quadrocopter/Sensors/DPS310/DPS310.c **** // |             |       |       |       |       |       |       |       |       |
  58:../_Quadrocopter/Sensors/DPS310/DPS310.c **** // |     PRC     |   1   |   2   |   4   |   8   |   16  |   32  |   64  |  128  |
  59:../_Quadrocopter/Sensors/DPS310/DPS310.c **** // |_____________|_______|_______|_______|_______|_______|_______|_______|_______|
  60:../_Quadrocopter/Sensors/DPS310/DPS310.c **** // |             |       |       |       |       |       |       |       |       |
  61:../_Quadrocopter/Sensors/DPS310/DPS310.c **** // |  Time_Meas  |  3.6  |  5.2  |  8.4  | 14.8  | 27.6  | 53.2  | 104.4 | 206.8 |
  62:../_Quadrocopter/Sensors/DPS310/DPS310.c **** // |     [ms]    |       |       |       |       |       |       |       |       |
  63:../_Quadrocopter/Sensors/DPS310/DPS310.c **** // |_____________|_______|_______|_______|_______|_______|_______|_______|_______|
  64:../_Quadrocopter/Sensors/DPS310/DPS310.c **** //
  65:../_Quadrocopter/Sensors/DPS310/DPS310.c **** // --------------------------Measurement Modes (MEAS_config)--------------------------
  66:../_Quadrocopter/Sensors/DPS310/DPS310.c **** //		Standby Mode:		0x00	Idle/Stop background measurement
  67:../_Quadrocopter/Sensors/DPS310/DPS310.c **** //		Command Mode:		0x01	Single Pressure Measurement
  68:../_Quadrocopter/Sensors/DPS310/DPS310.c **** //							0x02	Single Temperature Measurement
  69:../_Quadrocopter/Sensors/DPS310/DPS310.c **** //		Background Mode:	0x05	Continuous Pressure Measurement (change in updateValues, if (x08>>4 == 13
  70:../_Quadrocopter/Sensors/DPS310/DPS310.c **** //							0x06	Continuous Temperature Measurement
  71:../_Quadrocopter/Sensors/DPS310/DPS310.c **** //							0x07 	Continuous Pressure and Temperature Measurement (change in updateValues, if (x08>>4 
  72:../_Quadrocopter/Sensors/DPS310/DPS310.c **** //
  73:../_Quadrocopter/Sensors/DPS310/DPS310.c **** //--------------------Interrupt an FIFO Configuration(CFG_config)--------------------
  74:../_Quadrocopter/Sensors/DPS310/DPS310.c **** //						(check DPS310 Datasheet for Details)
  75:../_Quadrocopter/Sensors/DPS310/DPS310.c **** //					0x01	No Interrupts, FIFO disabled, 3-Wire Interface
  76:../_Quadrocopter/Sensors/DPS310/DPS310.c **** //					0x11	Temperature Interrupt, FIFO disabled, 3-Wire Interface
  77:../_Quadrocopter/Sensors/DPS310/DPS310.c **** //					0x21	Pressure Interrupt, FIFO disabled, 3-Wire Interface
  78:../_Quadrocopter/Sensors/DPS310/DPS310.c **** //
  79:../_Quadrocopter/Sensors/DPS310/DPS310.c **** //------------------------------configure sensor start------------------------------
  80:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	uint8_t P_config = PM_RATE_16 | PM_PRC_32;	// values/sec | oversampling rate
 306              		.loc 1 80 0
 307 0006 4FF04503 		mov	r3, #69
 308 000a BB73     		strb	r3, [r7, #14]
  81:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	uint8_t T_config = TMP_RATE_16 | TMP_PRC_4;	// values/sec | oversampling rate
 309              		.loc 1 81 0
 310 000c 4FF04203 		mov	r3, #66
 311 0010 7B73     		strb	r3, [r7, #13]
  82:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	int8_t	MEAS_config = 0x07;					// continuous pressure measurement
 312              		.loc 1 82 0
 313 0012 4FF00703 		mov	r3, #7
 314 0016 3B73     		strb	r3, [r7, #12]
  83:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	uint8_t CFG_config = 0x21;					// Pressure Interrupt, FIFO disabled, 3-Wire-SPI/I2C
 315              		.loc 1 83 0
 316 0018 4FF02103 		mov	r3, #33
 317 001c FB72     		strb	r3, [r7, #11]
  84:../_Quadrocopter/Sensors/DPS310/DPS310.c **** //-------------------------------configure sensor end-------------------------------
  85:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 
  86:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	int t = SYSTM001_GetTime();				// wait 12ms for sensor to be ready
 318              		.loc 1 86 0
 319 001e FFF7FEFF 		bl	SYSTM001_GetTime
 320 0022 0346     		mov	r3, r0
 321 0024 7B60     		str	r3, [r7, #4]
  87:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	while (SYSTM001_GetTime() - t < 12);
 322              		.loc 1 87 0
 323 0026 00BF     		nop
 324              	.L9:
 325              		.loc 1 87 0 is_stmt 0 discriminator 1
 326 0028 FFF7FEFF 		bl	SYSTM001_GetTime
 327 002c 0246     		mov	r2, r0
 328 002e 7B68     		ldr	r3, [r7, #4]
 329 0030 D31A     		subs	r3, r2, r3
 330 0032 0B2B     		cmp	r3, #11
 331 0034 F8D9     		bls	.L9
  88:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	SensorError result = I2Cdev_writeByte((const I2C001Handle_type*)&DPS310_I2C_Handle,DPS310_Address,
 332              		.loc 1 88 0 is_stmt 1
 333 0036 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 334 003a C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 335 003e 4FF0EE01 		mov	r1, #238
 336 0042 4FF00C02 		mov	r2, #12
 337 0046 4FF00903 		mov	r3, #9
 338 004a FFF7FEFF 		bl	I2Cdev_writeByte
 339 004e 0346     		mov	r3, r0
 340 0050 FB73     		strb	r3, [r7, #15]
  89:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	t = SYSTM001_GetTime();					// wait 40ms for coefficients to be ready
 341              		.loc 1 89 0
 342 0052 FFF7FEFF 		bl	SYSTM001_GetTime
 343 0056 0346     		mov	r3, r0
 344 0058 7B60     		str	r3, [r7, #4]
  90:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	while (SYSTM001_GetTime() - t < 40);
 345              		.loc 1 90 0
 346 005a 00BF     		nop
 347              	.L10:
 348              		.loc 1 90 0 is_stmt 0 discriminator 1
 349 005c FFF7FEFF 		bl	SYSTM001_GetTime
 350 0060 0246     		mov	r2, r0
 351 0062 7B68     		ldr	r3, [r7, #4]
 352 0064 D31A     		subs	r3, r2, r3
 353 0066 272B     		cmp	r3, #39
 354 0068 F8D9     		bls	.L10
  91:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 
  92:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	result = setRegister(DPS310_Address,PRS_CFG,P_config);
 355              		.loc 1 92 0 is_stmt 1
 356 006a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 357 006c 4FF0EE00 		mov	r0, #238
 358 0070 4FF00601 		mov	r1, #6
 359 0074 1A46     		mov	r2, r3
 360 0076 FFF7FEFF 		bl	setRegister
 361 007a 0346     		mov	r3, r0
 362 007c FB73     		strb	r3, [r7, #15]
  93:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	if(result)return result;
 363              		.loc 1 93 0
 364 007e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 365 0080 002B     		cmp	r3, #0
 366 0082 01D0     		beq	.L11
 367              		.loc 1 93 0 is_stmt 0 discriminator 1
 368 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 369 0086 B1E0     		b	.L12
 370              	.L11:
  94:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 
  95:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	// check which temperature sensor is used (bit7 == 0 => ASIC, bit7 == 1 => MEMS)
  96:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	uint8_t x28 = I2Cdev_readByte((const I2C001Handle_type*)&DPS310_I2C_Handle, DPS310_Address,COEF_SR
 371              		.loc 1 96 0 is_stmt 1
 372 0088 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 373 008c C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 374 0090 4FF0EE01 		mov	r1, #238
 375 0094 4FF02802 		mov	r2, #40
 376 0098 FFF7FEFF 		bl	I2Cdev_readByte
 377 009c 0346     		mov	r3, r0
 378 009e 4FEAE313 		asr	r3, r3, #7
 379 00a2 9BB2     		uxth	r3, r3
 380 00a4 FB70     		strb	r3, [r7, #3]
  97:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	if (x28 == 1)	result = setRegister(DPS310_Address,TMP_CFG,1<<7 | T_config);								// use external
 381              		.loc 1 97 0
 382 00a6 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 383 00a8 012B     		cmp	r3, #1
 384 00aa 0DD1     		bne	.L13
 385              		.loc 1 97 0 is_stmt 0 discriminator 1
 386 00ac 7B7B     		ldrb	r3, [r7, #13]
 387 00ae 63F07F03 		orn	r3, r3, #127
 388 00b2 DBB2     		uxtb	r3, r3
 389 00b4 4FF0EE00 		mov	r0, #238
 390 00b8 4FF00701 		mov	r1, #7
 391 00bc 1A46     		mov	r2, r3
 392 00be FFF7FEFF 		bl	setRegister
 393 00c2 0346     		mov	r3, r0
 394 00c4 FB73     		strb	r3, [r7, #15]
 395 00c6 09E0     		b	.L14
 396              	.L13:
  98:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	else			result = setRegister(DPS310_Address,TMP_CFG,T_config);										// use internal sensor (ASI
 397              		.loc 1 98 0 is_stmt 1
 398 00c8 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 399 00ca 4FF0EE00 		mov	r0, #238
 400 00ce 4FF00701 		mov	r1, #7
 401 00d2 1A46     		mov	r2, r3
 402 00d4 FFF7FEFF 		bl	setRegister
 403 00d8 0346     		mov	r3, r0
 404 00da FB73     		strb	r3, [r7, #15]
 405              	.L14:
  99:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	if(result)return result;
 406              		.loc 1 99 0
 407 00dc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 408 00de 002B     		cmp	r3, #0
 409 00e0 01D0     		beq	.L15
 410              		.loc 1 99 0 is_stmt 0 discriminator 1
 411 00e2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 412 00e4 82E0     		b	.L12
 413              	.L15:
 100:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 
 101:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	result = setRegister(DPS310_Address,MEAS_CFG,0xc0 | MEAS_config);
 414              		.loc 1 101 0 is_stmt 1
 415 00e6 3B7B     		ldrb	r3, [r7, #12]
 416 00e8 63F03F03 		orn	r3, r3, #63
 417 00ec DBB2     		uxtb	r3, r3
 418 00ee DBB2     		uxtb	r3, r3
 419 00f0 4FF0EE00 		mov	r0, #238
 420 00f4 4FF00801 		mov	r1, #8
 421 00f8 1A46     		mov	r2, r3
 422 00fa FFF7FEFF 		bl	setRegister
 423 00fe 0346     		mov	r3, r0
 424 0100 FB73     		strb	r3, [r7, #15]
 102:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	if(result)return result;
 425              		.loc 1 102 0
 426 0102 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 427 0104 002B     		cmp	r3, #0
 428 0106 01D0     		beq	.L16
 429              		.loc 1 102 0 is_stmt 0 discriminator 1
 430 0108 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 431 010a 6FE0     		b	.L12
 432              	.L16:
 103:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 
 104:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	// check if P-Shift and/or T-Shift is necessary (PM_PRC > 8 P-shift necessary; TMP_PRC > 8 -> T-sh
 105:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	uint8_t x06 = P_config<<4;
 433              		.loc 1 105 0 is_stmt 1
 434 010c BB7B     		ldrb	r3, [r7, #14]
 435 010e 4FEA0313 		lsl	r3, r3, #4
 436 0112 BB70     		strb	r3, [r7, #2]
 106:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	uint8_t x07 = T_config<<4;
 437              		.loc 1 106 0
 438 0114 7B7B     		ldrb	r3, [r7, #13]
 439 0116 4FEA0313 		lsl	r3, r3, #4
 440 011a 7B70     		strb	r3, [r7, #1]
 107:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	if (x06>>4 > 3 && x07>>4 > 3)			result = setRegister(DPS310_Address,CFG_REG,3<<2 | CFG_config);		/
 441              		.loc 1 107 0
 442 011c BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 443 011e 4FEA1313 		lsr	r3, r3, #4
 444 0122 DBB2     		uxtb	r3, r3
 445 0124 032B     		cmp	r3, #3
 446 0126 13D9     		bls	.L17
 447              		.loc 1 107 0 is_stmt 0 discriminator 1
 448 0128 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 449 012a 4FEA1313 		lsr	r3, r3, #4
 450 012e DBB2     		uxtb	r3, r3
 451 0130 032B     		cmp	r3, #3
 452 0132 0DD9     		bls	.L17
 453 0134 FB7A     		ldrb	r3, [r7, #11]
 454 0136 43F00C03 		orr	r3, r3, #12
 455 013a DBB2     		uxtb	r3, r3
 456 013c 4FF0EE00 		mov	r0, #238
 457 0140 4FF00901 		mov	r1, #9
 458 0144 1A46     		mov	r2, r3
 459 0146 FFF7FEFF 		bl	setRegister
 460 014a 0346     		mov	r3, r0
 461 014c FB73     		strb	r3, [r7, #15]
 462 014e 3DE0     		b	.L18
 463              	.L17:
 108:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	else if (x06>>4 <= 3 && x07>>4 > 3)		result = setRegister(DPS310_Address,CFG_REG,2<<2 | CFG_config
 464              		.loc 1 108 0 is_stmt 1
 465 0150 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 466 0152 4FEA1313 		lsr	r3, r3, #4
 467 0156 DBB2     		uxtb	r3, r3
 468 0158 032B     		cmp	r3, #3
 469 015a 13D8     		bhi	.L19
 470              		.loc 1 108 0 is_stmt 0 discriminator 1
 471 015c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 472 015e 4FEA1313 		lsr	r3, r3, #4
 473 0162 DBB2     		uxtb	r3, r3
 474 0164 032B     		cmp	r3, #3
 475 0166 0DD9     		bls	.L19
 476 0168 FB7A     		ldrb	r3, [r7, #11]
 477 016a 43F00803 		orr	r3, r3, #8
 478 016e DBB2     		uxtb	r3, r3
 479 0170 4FF0EE00 		mov	r0, #238
 480 0174 4FF00901 		mov	r1, #9
 481 0178 1A46     		mov	r2, r3
 482 017a FFF7FEFF 		bl	setRegister
 483 017e 0346     		mov	r3, r0
 484 0180 FB73     		strb	r3, [r7, #15]
 485 0182 23E0     		b	.L18
 486              	.L19:
 109:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	else if (x06>>4 > 3 && x07>>4 <= 3)		result = setRegister(DPS310_Address,CFG_REG,1<<2 | CFG_config
 487              		.loc 1 109 0 is_stmt 1
 488 0184 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 489 0186 4FEA1313 		lsr	r3, r3, #4
 490 018a DBB2     		uxtb	r3, r3
 491 018c 032B     		cmp	r3, #3
 492 018e 13D9     		bls	.L20
 493              		.loc 1 109 0 is_stmt 0 discriminator 1
 494 0190 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 495 0192 4FEA1313 		lsr	r3, r3, #4
 496 0196 DBB2     		uxtb	r3, r3
 497 0198 032B     		cmp	r3, #3
 498 019a 0DD8     		bhi	.L20
 499 019c FB7A     		ldrb	r3, [r7, #11]
 500 019e 43F00403 		orr	r3, r3, #4
 501 01a2 DBB2     		uxtb	r3, r3
 502 01a4 4FF0EE00 		mov	r0, #238
 503 01a8 4FF00901 		mov	r1, #9
 504 01ac 1A46     		mov	r2, r3
 505 01ae FFF7FEFF 		bl	setRegister
 506 01b2 0346     		mov	r3, r0
 507 01b4 FB73     		strb	r3, [r7, #15]
 508 01b6 09E0     		b	.L18
 509              	.L20:
 110:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	else									result = setRegister(DPS310_Address,CFG_REG,CFG_config);			// no P-Shift or T-Shift
 510              		.loc 1 110 0 is_stmt 1
 511 01b8 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 512 01ba 4FF0EE00 		mov	r0, #238
 513 01be 4FF00901 		mov	r1, #9
 514 01c2 1A46     		mov	r2, r3
 515 01c4 FFF7FEFF 		bl	setRegister
 516 01c8 0346     		mov	r3, r0
 517 01ca FB73     		strb	r3, [r7, #15]
 518              	.L18:
 111:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	if(result)return result;
 519              		.loc 1 111 0
 520 01cc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 521 01ce 002B     		cmp	r3, #0
 522 01d0 01D0     		beq	.L21
 523              		.loc 1 111 0 is_stmt 0 discriminator 1
 524 01d2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 525 01d4 0AE0     		b	.L12
 526              	.L21:
 112:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 
 113:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	I2Cdev_readByte((const I2C001Handle_type*)&DPS310_I2C_Handle,DPS310_Address,INT_STS);
 527              		.loc 1 113 0 is_stmt 1
 528 01d6 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 529 01da C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 530 01de 4FF0EE01 		mov	r1, #238
 531 01e2 4FF00A02 		mov	r2, #10
 532 01e6 FFF7FEFF 		bl	I2Cdev_readByte
 114:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	return result;
 533              		.loc 1 114 0
 534 01ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 535              	.L12:
 115:../_Quadrocopter/Sensors/DPS310/DPS310.c **** }
 536              		.loc 1 115 0
 537 01ec 1846     		mov	r0, r3
 538 01ee 07F11007 		add	r7, r7, #16
 539 01f2 BD46     		mov	sp, r7
 540 01f4 80BD     		pop	{r7, pc}
 541              		.cfi_endproc
 542              	.LFE154:
 544              		.global	__aeabi_i2d
 545              		.global	__aeabi_dcmpgt
 546              		.global	__aeabi_dsub
 547              		.global	__aeabi_d2iz
 548              		.global	__aeabi_dmul
 549              		.global	__aeabi_f2d
 550              		.global	__aeabi_dadd
 551              		.global	__aeabi_d2f
 552              		.section	.text.updateValues,"ax",%progbits
 553              		.align	2
 554              		.global	updateValues
 555              		.thumb
 556              		.thumb_func
 558              	updateValues:
 559              	.LFB155:
 116:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 
 117:../_Quadrocopter/Sensors/DPS310/DPS310.c **** void updateValues(float *Pcomp,float *Tcomp)
 118:../_Quadrocopter/Sensors/DPS310/DPS310.c **** {
 560              		.loc 1 118 0
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 16
 563              		@ frame_needed = 1, uses_anonymous_args = 0
 564 0000 B0B5     		push	{r4, r5, r7, lr}
 565              	.LCFI6:
 566              		.cfi_def_cfa_offset 16
 567              		.cfi_offset 4, -16
 568              		.cfi_offset 5, -12
 569              		.cfi_offset 7, -8
 570              		.cfi_offset 14, -4
 571 0002 84B0     		sub	sp, sp, #16
 572              	.LCFI7:
 573              		.cfi_def_cfa_offset 32
 574 0004 00AF     		add	r7, sp, #0
 575              	.LCFI8:
 576              		.cfi_def_cfa_register 7
 577 0006 7860     		str	r0, [r7, #4]
 578 0008 3960     		str	r1, [r7, #0]
 119:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	uint8_t x08 = I2Cdev_readByte((const I2C001Handle_type*)&DPS310_I2C_Handle,DPS310_Address,0x08);
 579              		.loc 1 119 0
 580 000a 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 581 000e C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 582 0012 4FF0EE01 		mov	r1, #238
 583 0016 4FF00802 		mov	r2, #8
 584 001a FFF7FEFF 		bl	I2Cdev_readByte
 585 001e 0346     		mov	r3, r0
 586 0020 FB73     		strb	r3, [r7, #15]
 120:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	if (x08>>4 == 15)						// read pressure register only if values are ready (==13 if pressure measur
 587              		.loc 1 120 0
 588 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 589 0024 4FEA1313 		lsr	r3, r3, #4
 590 0028 DBB2     		uxtb	r3, r3
 591 002a 0F2B     		cmp	r3, #15
 592 002c 40F06881 		bne	.L22
 121:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	{
 122:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		// generate Praw
 123:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		Praw = getPressure();				// 24bit two�s complement value out of reg 0-2
 593              		.loc 1 123 0
 594 0030 FFF7FEFF 		bl	getPressure
 595 0034 0246     		mov	r2, r0
 596 0036 40F20003 		movw	r3, #:lower16:Praw
 597 003a C0F20003 		movt	r3, #:upper16:Praw
 598 003e 1A60     		str	r2, [r3, #0]
 124:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		if (Praw > (pow(2, 23) - 1))		// convert to signed int
 599              		.loc 1 124 0
 600 0040 40F20003 		movw	r3, #:lower16:Praw
 601 0044 C0F20003 		movt	r3, #:upper16:Praw
 602 0048 1B68     		ldr	r3, [r3, #0]
 603 004a 1846     		mov	r0, r3
 604 004c FFF7FEFF 		bl	__aeabi_i2d
 605 0050 0246     		mov	r2, r0
 606 0052 0B46     		mov	r3, r1
 607 0054 1046     		mov	r0, r2
 608 0056 1946     		mov	r1, r3
 609 0058 4FF04042 		mov	r2, #-1073741824
 610 005c 4FF6FF73 		movw	r3, #65535
 611 0060 C4F25F13 		movt	r3, 16735
 612 0064 FFF7FEFF 		bl	__aeabi_dcmpgt
 613 0068 0346     		mov	r3, r0
 614 006a 002B     		cmp	r3, #0
 615 006c 1FD0     		beq	.L24
 616              	.L28:
 125:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		{
 126:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 			Praw = Praw - pow(2, 24);
 617              		.loc 1 126 0
 618 006e 40F20003 		movw	r3, #:lower16:Praw
 619 0072 C0F20003 		movt	r3, #:upper16:Praw
 620 0076 1B68     		ldr	r3, [r3, #0]
 621 0078 1846     		mov	r0, r3
 622 007a FFF7FEFF 		bl	__aeabi_i2d
 623 007e 0246     		mov	r2, r0
 624 0080 0B46     		mov	r3, r1
 625 0082 1046     		mov	r0, r2
 626 0084 1946     		mov	r1, r3
 627 0086 4FF00002 		mov	r2, #0
 628 008a 4FF00003 		mov	r3, #0
 629 008e C4F27013 		movt	r3, 16752
 630 0092 FFF7FEFF 		bl	__aeabi_dsub
 631 0096 0246     		mov	r2, r0
 632 0098 0B46     		mov	r3, r1
 633 009a 1046     		mov	r0, r2
 634 009c 1946     		mov	r1, r3
 635 009e FFF7FEFF 		bl	__aeabi_d2iz
 636 00a2 0246     		mov	r2, r0
 637 00a4 40F20003 		movw	r3, #:lower16:Praw
 638 00a8 C0F20003 		movt	r3, #:upper16:Praw
 639 00ac 1A60     		str	r2, [r3, #0]
 640              	.L24:
 127:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		}
 128:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 
 129:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		// generate Traw
 130:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		Traw = getTemperature();			// 24bit two�s complement value out of reg 3-5
 641              		.loc 1 130 0
 642 00ae FFF7FEFF 		bl	getTemperature
 643 00b2 0246     		mov	r2, r0
 644 00b4 40F20003 		movw	r3, #:lower16:Traw
 645 00b8 C0F20003 		movt	r3, #:upper16:Traw
 646 00bc 1A60     		str	r2, [r3, #0]
 131:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		if (Traw > (pow(2, 23) - 1))		// convert to signed int
 647              		.loc 1 131 0
 648 00be 40F20003 		movw	r3, #:lower16:Traw
 649 00c2 C0F20003 		movt	r3, #:upper16:Traw
 650 00c6 1B68     		ldr	r3, [r3, #0]
 651 00c8 1846     		mov	r0, r3
 652 00ca FFF7FEFF 		bl	__aeabi_i2d
 653 00ce 0246     		mov	r2, r0
 654 00d0 0B46     		mov	r3, r1
 655 00d2 1046     		mov	r0, r2
 656 00d4 1946     		mov	r1, r3
 657 00d6 4FF04042 		mov	r2, #-1073741824
 658 00da 4FF6FF73 		movw	r3, #65535
 659 00de C4F25F13 		movt	r3, 16735
 660 00e2 FFF7FEFF 		bl	__aeabi_dcmpgt
 661 00e6 0346     		mov	r3, r0
 662 00e8 002B     		cmp	r3, #0
 663 00ea 1FD0     		beq	.L26
 664              	.L29:
 132:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		{
 133:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 			Traw = Traw - pow(2, 24);
 665              		.loc 1 133 0
 666 00ec 40F20003 		movw	r3, #:lower16:Traw
 667 00f0 C0F20003 		movt	r3, #:upper16:Traw
 668 00f4 1B68     		ldr	r3, [r3, #0]
 669 00f6 1846     		mov	r0, r3
 670 00f8 FFF7FEFF 		bl	__aeabi_i2d
 671 00fc 0246     		mov	r2, r0
 672 00fe 0B46     		mov	r3, r1
 673 0100 1046     		mov	r0, r2
 674 0102 1946     		mov	r1, r3
 675 0104 4FF00002 		mov	r2, #0
 676 0108 4FF00003 		mov	r3, #0
 677 010c C4F27013 		movt	r3, 16752
 678 0110 FFF7FEFF 		bl	__aeabi_dsub
 679 0114 0246     		mov	r2, r0
 680 0116 0B46     		mov	r3, r1
 681 0118 1046     		mov	r0, r2
 682 011a 1946     		mov	r1, r3
 683 011c FFF7FEFF 		bl	__aeabi_d2iz
 684 0120 0246     		mov	r2, r0
 685 0122 40F20003 		movw	r3, #:lower16:Traw
 686 0126 C0F20003 		movt	r3, #:upper16:Traw
 687 012a 1A60     		str	r2, [r3, #0]
 688              	.L26:
 134:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		}
 135:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 
 136:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		// calculate physical temperature Tcomp [�C]
 137:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		Traw_sc = (float)Traw/kT;
 689              		.loc 1 137 0
 690 012c 40F20003 		movw	r3, #:lower16:Traw
 691 0130 C0F20003 		movt	r3, #:upper16:Traw
 692 0134 D3ED007A 		flds	s15, [r3, #0]	@ int
 693 0138 B8EEE77A 		fsitos	s14, s15
 694 013c 40F20003 		movw	r3, #:lower16:kT
 695 0140 C0F20003 		movt	r3, #:upper16:kT
 696 0144 D3ED007A 		flds	s15, [r3, #0]	@ int
 697 0148 F8EE677A 		fuitos	s15, s15
 698 014c C7EE277A 		fdivs	s15, s14, s15
 699 0150 40F20003 		movw	r3, #:lower16:Traw_sc
 700 0154 C0F20003 		movt	r3, #:upper16:Traw_sc
 701 0158 C3ED007A 		fsts	s15, [r3, #0]
 138:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		*Tcomp = c0*0.5 + c1*Traw_sc;
 702              		.loc 1 138 0
 703 015c 40F20003 		movw	r3, #:lower16:c0
 704 0160 C0F20003 		movt	r3, #:upper16:c0
 705 0164 1B68     		ldr	r3, [r3, #0]
 706 0166 1846     		mov	r0, r3
 707 0168 FFF7FEFF 		bl	__aeabi_i2d
 708 016c 0246     		mov	r2, r0
 709 016e 0B46     		mov	r3, r1
 710 0170 1046     		mov	r0, r2
 711 0172 1946     		mov	r1, r3
 712 0174 4FF00002 		mov	r2, #0
 713 0178 4FF00003 		mov	r3, #0
 714 017c C3F6E073 		movt	r3, 16352
 715 0180 FFF7FEFF 		bl	__aeabi_dmul
 716 0184 0246     		mov	r2, r0
 717 0186 0B46     		mov	r3, r1
 718 0188 1446     		mov	r4, r2
 719 018a 1D46     		mov	r5, r3
 720 018c 40F20003 		movw	r3, #:lower16:c1
 721 0190 C0F20003 		movt	r3, #:upper16:c1
 722 0194 D3ED007A 		flds	s15, [r3, #0]	@ int
 723 0198 B8EEE77A 		fsitos	s14, s15
 724 019c 40F20003 		movw	r3, #:lower16:Traw_sc
 725 01a0 C0F20003 		movt	r3, #:upper16:Traw_sc
 726 01a4 D3ED007A 		flds	s15, [r3, #0]
 727 01a8 67EE277A 		fmuls	s15, s14, s15
 728 01ac 17EE900A 		fmrs	r0, s15
 729 01b0 FFF7FEFF 		bl	__aeabi_f2d
 730 01b4 0246     		mov	r2, r0
 731 01b6 0B46     		mov	r3, r1
 732 01b8 2046     		mov	r0, r4
 733 01ba 2946     		mov	r1, r5
 734 01bc FFF7FEFF 		bl	__aeabi_dadd
 735 01c0 0246     		mov	r2, r0
 736 01c2 0B46     		mov	r3, r1
 737 01c4 1046     		mov	r0, r2
 738 01c6 1946     		mov	r1, r3
 739 01c8 FFF7FEFF 		bl	__aeabi_d2f
 740 01cc 0246     		mov	r2, r0	@ float
 741 01ce 3B68     		ldr	r3, [r7, #0]
 742 01d0 1A60     		str	r2, [r3, #0]	@ float
 139:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		// calculate physical pressure Pcomp [Pa]
 140:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		Praw_sc = (float)Praw/kP;
 743              		.loc 1 140 0
 744 01d2 40F20003 		movw	r3, #:lower16:Praw
 745 01d6 C0F20003 		movt	r3, #:upper16:Praw
 746 01da D3ED007A 		flds	s15, [r3, #0]	@ int
 747 01de B8EEE77A 		fsitos	s14, s15
 748 01e2 40F20003 		movw	r3, #:lower16:kP
 749 01e6 C0F20003 		movt	r3, #:upper16:kP
 750 01ea D3ED007A 		flds	s15, [r3, #0]	@ int
 751 01ee F8EE677A 		fuitos	s15, s15
 752 01f2 C7EE277A 		fdivs	s15, s14, s15
 753 01f6 40F20003 		movw	r3, #:lower16:Praw_sc
 754 01fa C0F20003 		movt	r3, #:upper16:Praw_sc
 755 01fe C3ED007A 		fsts	s15, [r3, #0]
 141:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		*Pcomp = c00 + Praw_sc*(c10 + Praw_sc *(c20+ Praw_sc *c30)) + Traw_sc*c01 + Traw_sc *Praw_sc *(c1
 756              		.loc 1 141 0
 757 0202 40F20003 		movw	r3, #:lower16:c00
 758 0206 C0F20003 		movt	r3, #:upper16:c00
 759 020a D3ED007A 		flds	s15, [r3, #0]	@ int
 760 020e B8EEE77A 		fsitos	s14, s15
 761 0212 40F20003 		movw	r3, #:lower16:c10
 762 0216 C0F20003 		movt	r3, #:upper16:c10
 763 021a D3ED007A 		flds	s15, [r3, #0]	@ int
 764 021e F8EEE76A 		fsitos	s13, s15
 765 0222 40F20003 		movw	r3, #:lower16:c20
 766 0226 C0F20003 		movt	r3, #:upper16:c20
 767 022a D3ED007A 		flds	s15, [r3, #0]	@ int
 768 022e B8EEE76A 		fsitos	s12, s15
 769 0232 40F20003 		movw	r3, #:lower16:c30
 770 0236 C0F20003 		movt	r3, #:upper16:c30
 771 023a D3ED007A 		flds	s15, [r3, #0]	@ int
 772 023e F8EEE75A 		fsitos	s11, s15
 773 0242 40F20003 		movw	r3, #:lower16:Praw_sc
 774 0246 C0F20003 		movt	r3, #:upper16:Praw_sc
 775 024a D3ED007A 		flds	s15, [r3, #0]
 776 024e 65EEA77A 		fmuls	s15, s11, s15
 777 0252 36EE276A 		fadds	s12, s12, s15
 778 0256 40F20003 		movw	r3, #:lower16:Praw_sc
 779 025a C0F20003 		movt	r3, #:upper16:Praw_sc
 780 025e D3ED007A 		flds	s15, [r3, #0]
 781 0262 66EE277A 		fmuls	s15, s12, s15
 782 0266 76EEA76A 		fadds	s13, s13, s15
 783 026a 40F20003 		movw	r3, #:lower16:Praw_sc
 784 026e C0F20003 		movt	r3, #:upper16:Praw_sc
 785 0272 D3ED007A 		flds	s15, [r3, #0]
 786 0276 66EEA77A 		fmuls	s15, s13, s15
 787 027a 37EE277A 		fadds	s14, s14, s15
 788 027e 40F20003 		movw	r3, #:lower16:c01
 789 0282 C0F20003 		movt	r3, #:upper16:c01
 790 0286 D3ED007A 		flds	s15, [r3, #0]	@ int
 791 028a F8EEE76A 		fsitos	s13, s15
 792 028e 40F20003 		movw	r3, #:lower16:Traw_sc
 793 0292 C0F20003 		movt	r3, #:upper16:Traw_sc
 794 0296 D3ED007A 		flds	s15, [r3, #0]
 795 029a 66EEA77A 		fmuls	s15, s13, s15
 796 029e 37EE277A 		fadds	s14, s14, s15
 797 02a2 40F20003 		movw	r3, #:lower16:Traw_sc
 798 02a6 C0F20003 		movt	r3, #:upper16:Traw_sc
 799 02aa D3ED006A 		flds	s13, [r3, #0]
 800 02ae 40F20003 		movw	r3, #:lower16:Praw_sc
 801 02b2 C0F20003 		movt	r3, #:upper16:Praw_sc
 802 02b6 D3ED007A 		flds	s15, [r3, #0]
 803 02ba 66EEA76A 		fmuls	s13, s13, s15
 804 02be 40F20003 		movw	r3, #:lower16:c11
 805 02c2 C0F20003 		movt	r3, #:upper16:c11
 806 02c6 D3ED007A 		flds	s15, [r3, #0]	@ int
 807 02ca B8EEE76A 		fsitos	s12, s15
 808 02ce 40F20003 		movw	r3, #:lower16:c21
 809 02d2 C0F20003 		movt	r3, #:upper16:c21
 810 02d6 D3ED007A 		flds	s15, [r3, #0]	@ int
 811 02da F8EEE75A 		fsitos	s11, s15
 812 02de 40F20003 		movw	r3, #:lower16:Praw_sc
 813 02e2 C0F20003 		movt	r3, #:upper16:Praw_sc
 814 02e6 D3ED007A 		flds	s15, [r3, #0]
 815 02ea 65EEA77A 		fmuls	s15, s11, s15
 816 02ee 76EE277A 		fadds	s15, s12, s15
 817 02f2 66EEA77A 		fmuls	s15, s13, s15
 818 02f6 77EE277A 		fadds	s15, s14, s15
 819 02fa 7B68     		ldr	r3, [r7, #4]
 820 02fc C3ED007A 		fsts	s15, [r3, #0]
 821              	.L22:
 142:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	}
 143:../_Quadrocopter/Sensors/DPS310/DPS310.c **** }
 822              		.loc 1 143 0
 823 0300 07F11007 		add	r7, r7, #16
 824 0304 BD46     		mov	sp, r7
 825 0306 B0BD     		pop	{r4, r5, r7, pc}
 826              		.cfi_endproc
 827              	.LFE155:
 829              		.section	.text.getCoefficients,"ax",%progbits
 830              		.align	2
 831              		.global	getCoefficients
 832              		.thumb
 833              		.thumb_func
 835              	getCoefficients:
 836              	.LFB156:
 144:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 
 145:../_Quadrocopter/Sensors/DPS310/DPS310.c **** void getCoefficients()
 146:../_Quadrocopter/Sensors/DPS310/DPS310.c **** {
 837              		.loc 1 146 0
 838              		.cfi_startproc
 839              		@ args = 0, pretend = 0, frame = 8
 840              		@ frame_needed = 1, uses_anonymous_args = 0
 841 0000 90B5     		push	{r4, r7, lr}
 842              	.LCFI9:
 843              		.cfi_def_cfa_offset 12
 844              		.cfi_offset 4, -12
 845              		.cfi_offset 7, -8
 846              		.cfi_offset 14, -4
 847 0002 83B0     		sub	sp, sp, #12
 848              	.LCFI10:
 849              		.cfi_def_cfa_offset 24
 850 0004 00AF     		add	r7, sp, #0
 851              	.LCFI11:
 852              		.cfi_def_cfa_register 7
 147:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	// get fused coefficients from a calibrated sensor
 148:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	c0 = I2Cdev_readByte((const I2C001Handle_type*)&DPS310_I2C_Handle,DPS310_Address,0x10)<<4 | I2Cdev
 853              		.loc 1 148 0
 854 0006 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 855 000a C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 856 000e 4FF0EE01 		mov	r1, #238
 857 0012 4FF01002 		mov	r2, #16
 858 0016 FFF7FEFF 		bl	I2Cdev_readByte
 859 001a 0346     		mov	r3, r0
 860 001c 4FEA0314 		lsl	r4, r3, #4
 861 0020 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 862 0024 C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 863 0028 4FF0EE01 		mov	r1, #238
 864 002c 4FF01102 		mov	r2, #17
 865 0030 FFF7FEFF 		bl	I2Cdev_readByte
 866 0034 0346     		mov	r3, r0
 867 0036 4FEA2313 		asr	r3, r3, #4
 868 003a 9BB2     		uxth	r3, r3
 869 003c 1BB2     		sxth	r3, r3
 870 003e 44EA0302 		orr	r2, r4, r3
 871 0042 40F20003 		movw	r3, #:lower16:c0
 872 0046 C0F20003 		movt	r3, #:upper16:c0
 873 004a 1A60     		str	r2, [r3, #0]
 149:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	if (c0 > (pow(2, 11) - 1))	c0 = c0 - pow(2, 12);
 874              		.loc 1 149 0
 875 004c 40F20003 		movw	r3, #:lower16:c0
 876 0050 C0F20003 		movt	r3, #:upper16:c0
 877 0054 1B68     		ldr	r3, [r3, #0]
 878 0056 1846     		mov	r0, r3
 879 0058 FFF7FEFF 		bl	__aeabi_i2d
 880 005c 0246     		mov	r2, r0
 881 005e 0B46     		mov	r3, r1
 882 0060 1046     		mov	r0, r2
 883 0062 1946     		mov	r1, r3
 884 0064 0FF6A003 		adr	r3, .L80
 885 0068 D3E90023 		ldrd	r2, [r3]
 886 006c FFF7FEFF 		bl	__aeabi_dcmpgt
 887 0070 0346     		mov	r3, r0
 888 0072 002B     		cmp	r3, #0
 889 0074 1FD0     		beq	.L31
 890              	.L71:
 891              		.loc 1 149 0 is_stmt 0 discriminator 1
 892 0076 40F20003 		movw	r3, #:lower16:c0
 893 007a C0F20003 		movt	r3, #:upper16:c0
 894 007e 1B68     		ldr	r3, [r3, #0]
 895 0080 1846     		mov	r0, r3
 896 0082 FFF7FEFF 		bl	__aeabi_i2d
 897 0086 0246     		mov	r2, r0
 898 0088 0B46     		mov	r3, r1
 899 008a 1046     		mov	r0, r2
 900 008c 1946     		mov	r1, r3
 901 008e 4FF00002 		mov	r2, #0
 902 0092 4FF00003 		mov	r3, #0
 903 0096 C4F2B003 		movt	r3, 16560
 904 009a FFF7FEFF 		bl	__aeabi_dsub
 905 009e 0246     		mov	r2, r0
 906 00a0 0B46     		mov	r3, r1
 907 00a2 1046     		mov	r0, r2
 908 00a4 1946     		mov	r1, r3
 909 00a6 FFF7FEFF 		bl	__aeabi_d2iz
 910 00aa 0246     		mov	r2, r0
 911 00ac 40F20003 		movw	r3, #:lower16:c0
 912 00b0 C0F20003 		movt	r3, #:upper16:c0
 913 00b4 1A60     		str	r2, [r3, #0]
 914              	.L31:
 150:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	uint8_t c1_ = I2Cdev_readByte((const I2C001Handle_type*)&DPS310_I2C_Handle,DPS310_Address,0x11)<<4
 915              		.loc 1 150 0 is_stmt 1
 916 00b6 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 917 00ba C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 918 00be 4FF0EE01 		mov	r1, #238
 919 00c2 4FF01102 		mov	r2, #17
 920 00c6 FFF7FEFF 		bl	I2Cdev_readByte
 921 00ca 0346     		mov	r3, r0
 922 00cc DBB2     		uxtb	r3, r3
 923 00ce 4FEA0313 		lsl	r3, r3, #4
 924 00d2 FB71     		strb	r3, [r7, #7]
 151:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	c1 = c1_<<4 | I2Cdev_readByte((const I2C001Handle_type*)&DPS310_I2C_Handle,DPS310_Address,0x12);
 925              		.loc 1 151 0
 926 00d4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 927 00d6 4FEA0314 		lsl	r4, r3, #4
 928 00da 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 929 00de C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 930 00e2 4FF0EE01 		mov	r1, #238
 931 00e6 4FF01202 		mov	r2, #18
 932 00ea FFF7FEFF 		bl	I2Cdev_readByte
 933 00ee 0346     		mov	r3, r0
 934 00f0 44EA0302 		orr	r2, r4, r3
 935 00f4 40F20003 		movw	r3, #:lower16:c1
 936 00f8 C0F20003 		movt	r3, #:upper16:c1
 937 00fc 1A60     		str	r2, [r3, #0]
 152:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	if (c1 > (pow(2, 11) - 1))	c1 = c1 - pow(2, 12);
 938              		.loc 1 152 0
 939 00fe 40F20003 		movw	r3, #:lower16:c1
 940 0102 C0F20003 		movt	r3, #:upper16:c1
 941 0106 1B68     		ldr	r3, [r3, #0]
 942 0108 1846     		mov	r0, r3
 943 010a FFF7FEFF 		bl	__aeabi_i2d
 944 010e 0246     		mov	r2, r0
 945 0110 0B46     		mov	r3, r1
 946 0112 1046     		mov	r0, r2
 947 0114 1946     		mov	r1, r3
 948 0116 0FF2F073 		adr	r3, .L80
 949 011a D3E90023 		ldrd	r2, [r3]
 950 011e FFF7FEFF 		bl	__aeabi_dcmpgt
 951 0122 0346     		mov	r3, r0
 952 0124 002B     		cmp	r3, #0
 953 0126 1FD0     		beq	.L33
 954              	.L72:
 955              		.loc 1 152 0 is_stmt 0 discriminator 1
 956 0128 40F20003 		movw	r3, #:lower16:c1
 957 012c C0F20003 		movt	r3, #:upper16:c1
 958 0130 1B68     		ldr	r3, [r3, #0]
 959 0132 1846     		mov	r0, r3
 960 0134 FFF7FEFF 		bl	__aeabi_i2d
 961 0138 0246     		mov	r2, r0
 962 013a 0B46     		mov	r3, r1
 963 013c 1046     		mov	r0, r2
 964 013e 1946     		mov	r1, r3
 965 0140 4FF00002 		mov	r2, #0
 966 0144 4FF00003 		mov	r3, #0
 967 0148 C4F2B003 		movt	r3, 16560
 968 014c FFF7FEFF 		bl	__aeabi_dsub
 969 0150 0246     		mov	r2, r0
 970 0152 0B46     		mov	r3, r1
 971 0154 1046     		mov	r0, r2
 972 0156 1946     		mov	r1, r3
 973 0158 FFF7FEFF 		bl	__aeabi_d2iz
 974 015c 0246     		mov	r2, r0
 975 015e 40F20003 		movw	r3, #:lower16:c1
 976 0162 C0F20003 		movt	r3, #:upper16:c1
 977 0166 1A60     		str	r2, [r3, #0]
 978              	.L33:
 153:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	c00 = I2Cdev_readByte((const I2C001Handle_type*)&DPS310_I2C_Handle,DPS310_Address,0x13)<<12 | I2Cd
 979              		.loc 1 153 0 is_stmt 1
 980 0168 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 981 016c C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 982 0170 4FF0EE01 		mov	r1, #238
 983 0174 4FF01302 		mov	r2, #19
 984 0178 FFF7FEFF 		bl	I2Cdev_readByte
 985 017c 0346     		mov	r3, r0
 986 017e 4FEA0334 		lsl	r4, r3, #12
 987 0182 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 988 0186 C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 989 018a 4FF0EE01 		mov	r1, #238
 990 018e 4FF01402 		mov	r2, #20
 991 0192 FFF7FEFF 		bl	I2Cdev_readByte
 992 0196 0346     		mov	r3, r0
 993 0198 4FEA0313 		lsl	r3, r3, #4
 994 019c 1C43     		orrs	r4, r4, r3
 995 019e 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 996 01a2 C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 997 01a6 4FF0EE01 		mov	r1, #238
 998 01aa 4FF01502 		mov	r2, #21
 999 01ae FFF7FEFF 		bl	I2Cdev_readByte
 1000 01b2 0346     		mov	r3, r0
 1001 01b4 4FEA2313 		asr	r3, r3, #4
 1002 01b8 9BB2     		uxth	r3, r3
 1003 01ba 1BB2     		sxth	r3, r3
 1004 01bc 44EA0302 		orr	r2, r4, r3
 1005 01c0 40F20003 		movw	r3, #:lower16:c00
 1006 01c4 C0F20003 		movt	r3, #:upper16:c00
 1007 01c8 1A60     		str	r2, [r3, #0]
 154:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	if (c00 > (pow(2, 19) - 1))	c00 = c00 - pow(2, 20);
 1008              		.loc 1 154 0
 1009 01ca 40F20003 		movw	r3, #:lower16:c00
 1010 01ce C0F20003 		movt	r3, #:upper16:c00
 1011 01d2 1B68     		ldr	r3, [r3, #0]
 1012 01d4 1846     		mov	r0, r3
 1013 01d6 FFF7FEFF 		bl	__aeabi_i2d
 1014 01da 0246     		mov	r2, r0
 1015 01dc 0B46     		mov	r3, r1
 1016 01de 1046     		mov	r0, r2
 1017 01e0 1946     		mov	r1, r3
 1018 01e2 0FF22C73 		adr	r3, .L80+8
 1019 01e6 D3E90023 		ldrd	r2, [r3]
 1020 01ea FFF7FEFF 		bl	__aeabi_dcmpgt
 1021 01ee 0346     		mov	r3, r0
 1022 01f0 002B     		cmp	r3, #0
 1023 01f2 1FD0     		beq	.L35
 1024              	.L73:
 1025              		.loc 1 154 0 is_stmt 0 discriminator 1
 1026 01f4 40F20003 		movw	r3, #:lower16:c00
 1027 01f8 C0F20003 		movt	r3, #:upper16:c00
 1028 01fc 1B68     		ldr	r3, [r3, #0]
 1029 01fe 1846     		mov	r0, r3
 1030 0200 FFF7FEFF 		bl	__aeabi_i2d
 1031 0204 0246     		mov	r2, r0
 1032 0206 0B46     		mov	r3, r1
 1033 0208 1046     		mov	r0, r2
 1034 020a 1946     		mov	r1, r3
 1035 020c 4FF00002 		mov	r2, #0
 1036 0210 4FF00003 		mov	r3, #0
 1037 0214 C4F23013 		movt	r3, 16688
 1038 0218 FFF7FEFF 		bl	__aeabi_dsub
 1039 021c 0246     		mov	r2, r0
 1040 021e 0B46     		mov	r3, r1
 1041 0220 1046     		mov	r0, r2
 1042 0222 1946     		mov	r1, r3
 1043 0224 FFF7FEFF 		bl	__aeabi_d2iz
 1044 0228 0246     		mov	r2, r0
 1045 022a 40F20003 		movw	r3, #:lower16:c00
 1046 022e C0F20003 		movt	r3, #:upper16:c00
 1047 0232 1A60     		str	r2, [r3, #0]
 1048              	.L35:
 155:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	uint8_t c10_ = I2Cdev_readByte((const I2C001Handle_type*)&DPS310_I2C_Handle,DPS310_Address,0x15)<<
 1049              		.loc 1 155 0 is_stmt 1
 1050 0234 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 1051 0238 C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 1052 023c 4FF0EE01 		mov	r1, #238
 1053 0240 4FF01502 		mov	r2, #21
 1054 0244 FFF7FEFF 		bl	I2Cdev_readByte
 1055 0248 0346     		mov	r3, r0
 1056 024a DBB2     		uxtb	r3, r3
 1057 024c 4FEA0313 		lsl	r3, r3, #4
 1058 0250 BB71     		strb	r3, [r7, #6]
 156:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	c10 = c10_<<12 | I2Cdev_readByte((const I2C001Handle_type*)&DPS310_I2C_Handle,DPS310_Address,0x16)
 1059              		.loc 1 156 0
 1060 0252 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1061 0254 4FEA0334 		lsl	r4, r3, #12
 1062 0258 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 1063 025c C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 1064 0260 4FF0EE01 		mov	r1, #238
 1065 0264 4FF01602 		mov	r2, #22
 1066 0268 FFF7FEFF 		bl	I2Cdev_readByte
 1067 026c 0346     		mov	r3, r0
 1068 026e 4FEA0323 		lsl	r3, r3, #8
 1069 0272 1C43     		orrs	r4, r4, r3
 1070 0274 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 1071 0278 C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 1072 027c 4FF0EE01 		mov	r1, #238
 1073 0280 4FF01702 		mov	r2, #23
 1074 0284 FFF7FEFF 		bl	I2Cdev_readByte
 1075 0288 0346     		mov	r3, r0
 1076 028a 44EA0302 		orr	r2, r4, r3
 1077 028e 40F20003 		movw	r3, #:lower16:c10
 1078 0292 C0F20003 		movt	r3, #:upper16:c10
 1079 0296 1A60     		str	r2, [r3, #0]
 157:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	if (c10 > (pow(2, 19) - 1))	c10 = c10 - pow(2, 20);
 1080              		.loc 1 157 0
 1081 0298 40F20003 		movw	r3, #:lower16:c10
 1082 029c C0F20003 		movt	r3, #:upper16:c10
 1083 02a0 1B68     		ldr	r3, [r3, #0]
 1084 02a2 1846     		mov	r0, r3
 1085 02a4 FFF7FEFF 		bl	__aeabi_i2d
 1086 02a8 0246     		mov	r2, r0
 1087 02aa 0B46     		mov	r3, r1
 1088 02ac 1046     		mov	r0, r2
 1089 02ae 1946     		mov	r1, r3
 1090 02b0 0FF25C63 		adr	r3, .L80+8
 1091 02b4 D3E90023 		ldrd	r2, [r3]
 1092 02b8 FFF7FEFF 		bl	__aeabi_dcmpgt
 1093 02bc 0346     		mov	r3, r0
 1094 02be 002B     		cmp	r3, #0
 1095 02c0 1FD0     		beq	.L37
 1096              	.L74:
 1097              		.loc 1 157 0 is_stmt 0 discriminator 1
 1098 02c2 40F20003 		movw	r3, #:lower16:c10
 1099 02c6 C0F20003 		movt	r3, #:upper16:c10
 1100 02ca 1B68     		ldr	r3, [r3, #0]
 1101 02cc 1846     		mov	r0, r3
 1102 02ce FFF7FEFF 		bl	__aeabi_i2d
 1103 02d2 0246     		mov	r2, r0
 1104 02d4 0B46     		mov	r3, r1
 1105 02d6 1046     		mov	r0, r2
 1106 02d8 1946     		mov	r1, r3
 1107 02da 4FF00002 		mov	r2, #0
 1108 02de 4FF00003 		mov	r3, #0
 1109 02e2 C4F23013 		movt	r3, 16688
 1110 02e6 FFF7FEFF 		bl	__aeabi_dsub
 1111 02ea 0246     		mov	r2, r0
 1112 02ec 0B46     		mov	r3, r1
 1113 02ee 1046     		mov	r0, r2
 1114 02f0 1946     		mov	r1, r3
 1115 02f2 FFF7FEFF 		bl	__aeabi_d2iz
 1116 02f6 0246     		mov	r2, r0
 1117 02f8 40F20003 		movw	r3, #:lower16:c10
 1118 02fc C0F20003 		movt	r3, #:upper16:c10
 1119 0300 1A60     		str	r2, [r3, #0]
 1120              	.L37:
 158:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	c01 = I2Cdev_readByte((const I2C001Handle_type*)&DPS310_I2C_Handle,DPS310_Address,0x18)<<8 | I2Cde
 1121              		.loc 1 158 0 is_stmt 1
 1122 0302 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 1123 0306 C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 1124 030a 4FF0EE01 		mov	r1, #238
 1125 030e 4FF01802 		mov	r2, #24
 1126 0312 FFF7FEFF 		bl	I2Cdev_readByte
 1127 0316 0346     		mov	r3, r0
 1128 0318 4FEA0324 		lsl	r4, r3, #8
 1129 031c 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 1130 0320 C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 1131 0324 4FF0EE01 		mov	r1, #238
 1132 0328 4FF01902 		mov	r2, #25
 1133 032c FFF7FEFF 		bl	I2Cdev_readByte
 1134 0330 0346     		mov	r3, r0
 1135 0332 44EA0302 		orr	r2, r4, r3
 1136 0336 40F20003 		movw	r3, #:lower16:c01
 1137 033a C0F20003 		movt	r3, #:upper16:c01
 1138 033e 1A60     		str	r2, [r3, #0]
 159:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	if (c01 > (pow(2, 15) - 1))	c01 = c01 - pow(2, 16);
 1139              		.loc 1 159 0
 1140 0340 40F20003 		movw	r3, #:lower16:c01
 1141 0344 C0F20003 		movt	r3, #:upper16:c01
 1142 0348 1B68     		ldr	r3, [r3, #0]
 1143 034a 1846     		mov	r0, r3
 1144 034c FFF7FEFF 		bl	__aeabi_i2d
 1145 0350 0246     		mov	r2, r0
 1146 0352 0B46     		mov	r3, r1
 1147 0354 1046     		mov	r0, r2
 1148 0356 1946     		mov	r1, r3
 1149 0358 0FF2BC53 		adr	r3, .L80+16
 1150 035c D3E90023 		ldrd	r2, [r3]
 1151 0360 FFF7FEFF 		bl	__aeabi_dcmpgt
 1152 0364 0346     		mov	r3, r0
 1153 0366 002B     		cmp	r3, #0
 1154 0368 1FD0     		beq	.L39
 1155              	.L75:
 1156              		.loc 1 159 0 is_stmt 0 discriminator 1
 1157 036a 40F20003 		movw	r3, #:lower16:c01
 1158 036e C0F20003 		movt	r3, #:upper16:c01
 1159 0372 1B68     		ldr	r3, [r3, #0]
 1160 0374 1846     		mov	r0, r3
 1161 0376 FFF7FEFF 		bl	__aeabi_i2d
 1162 037a 0246     		mov	r2, r0
 1163 037c 0B46     		mov	r3, r1
 1164 037e 1046     		mov	r0, r2
 1165 0380 1946     		mov	r1, r3
 1166 0382 4FF00002 		mov	r2, #0
 1167 0386 4FF00003 		mov	r3, #0
 1168 038a C4F2F003 		movt	r3, 16624
 1169 038e FFF7FEFF 		bl	__aeabi_dsub
 1170 0392 0246     		mov	r2, r0
 1171 0394 0B46     		mov	r3, r1
 1172 0396 1046     		mov	r0, r2
 1173 0398 1946     		mov	r1, r3
 1174 039a FFF7FEFF 		bl	__aeabi_d2iz
 1175 039e 0246     		mov	r2, r0
 1176 03a0 40F20003 		movw	r3, #:lower16:c01
 1177 03a4 C0F20003 		movt	r3, #:upper16:c01
 1178 03a8 1A60     		str	r2, [r3, #0]
 1179              	.L39:
 160:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	c11 = I2Cdev_readByte((const I2C001Handle_type*)&DPS310_I2C_Handle,DPS310_Address,0x1a)<<8 | I2Cde
 1180              		.loc 1 160 0 is_stmt 1
 1181 03aa 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 1182 03ae C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 1183 03b2 4FF0EE01 		mov	r1, #238
 1184 03b6 4FF01A02 		mov	r2, #26
 1185 03ba FFF7FEFF 		bl	I2Cdev_readByte
 1186 03be 0346     		mov	r3, r0
 1187 03c0 4FEA0324 		lsl	r4, r3, #8
 1188 03c4 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 1189 03c8 C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 1190 03cc 4FF0EE01 		mov	r1, #238
 1191 03d0 4FF01B02 		mov	r2, #27
 1192 03d4 FFF7FEFF 		bl	I2Cdev_readByte
 1193 03d8 0346     		mov	r3, r0
 1194 03da 44EA0302 		orr	r2, r4, r3
 1195 03de 40F20003 		movw	r3, #:lower16:c11
 1196 03e2 C0F20003 		movt	r3, #:upper16:c11
 1197 03e6 1A60     		str	r2, [r3, #0]
 161:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	if (c11 > (pow(2, 15) - 1))	c11 = c11 - pow(2, 16);
 1198              		.loc 1 161 0
 1199 03e8 40F20003 		movw	r3, #:lower16:c11
 1200 03ec C0F20003 		movt	r3, #:upper16:c11
 1201 03f0 1B68     		ldr	r3, [r3, #0]
 1202 03f2 1846     		mov	r0, r3
 1203 03f4 FFF7FEFF 		bl	__aeabi_i2d
 1204 03f8 0246     		mov	r2, r0
 1205 03fa 0B46     		mov	r3, r1
 1206 03fc 1046     		mov	r0, r2
 1207 03fe 1946     		mov	r1, r3
 1208 0400 0FF21453 		adr	r3, .L80+16
 1209 0404 D3E90023 		ldrd	r2, [r3]
 1210 0408 FFF7FEFF 		bl	__aeabi_dcmpgt
 1211 040c 0346     		mov	r3, r0
 1212 040e 002B     		cmp	r3, #0
 1213 0410 1FD0     		beq	.L41
 1214              	.L76:
 1215              		.loc 1 161 0 is_stmt 0 discriminator 1
 1216 0412 40F20003 		movw	r3, #:lower16:c11
 1217 0416 C0F20003 		movt	r3, #:upper16:c11
 1218 041a 1B68     		ldr	r3, [r3, #0]
 1219 041c 1846     		mov	r0, r3
 1220 041e FFF7FEFF 		bl	__aeabi_i2d
 1221 0422 0246     		mov	r2, r0
 1222 0424 0B46     		mov	r3, r1
 1223 0426 1046     		mov	r0, r2
 1224 0428 1946     		mov	r1, r3
 1225 042a 4FF00002 		mov	r2, #0
 1226 042e 4FF00003 		mov	r3, #0
 1227 0432 C4F2F003 		movt	r3, 16624
 1228 0436 FFF7FEFF 		bl	__aeabi_dsub
 1229 043a 0246     		mov	r2, r0
 1230 043c 0B46     		mov	r3, r1
 1231 043e 1046     		mov	r0, r2
 1232 0440 1946     		mov	r1, r3
 1233 0442 FFF7FEFF 		bl	__aeabi_d2iz
 1234 0446 0246     		mov	r2, r0
 1235 0448 40F20003 		movw	r3, #:lower16:c11
 1236 044c C0F20003 		movt	r3, #:upper16:c11
 1237 0450 1A60     		str	r2, [r3, #0]
 1238              	.L41:
 162:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	c20 = I2Cdev_readByte((const I2C001Handle_type*)&DPS310_I2C_Handle,DPS310_Address,0x1c)<<8 | I2Cde
 1239              		.loc 1 162 0 is_stmt 1
 1240 0452 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 1241 0456 C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 1242 045a 4FF0EE01 		mov	r1, #238
 1243 045e 4FF01C02 		mov	r2, #28
 1244 0462 FFF7FEFF 		bl	I2Cdev_readByte
 1245 0466 0346     		mov	r3, r0
 1246 0468 4FEA0324 		lsl	r4, r3, #8
 1247 046c 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 1248 0470 C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 1249 0474 4FF0EE01 		mov	r1, #238
 1250 0478 4FF01D02 		mov	r2, #29
 1251 047c FFF7FEFF 		bl	I2Cdev_readByte
 1252 0480 0346     		mov	r3, r0
 1253 0482 44EA0302 		orr	r2, r4, r3
 1254 0486 40F20003 		movw	r3, #:lower16:c20
 1255 048a C0F20003 		movt	r3, #:upper16:c20
 1256 048e 1A60     		str	r2, [r3, #0]
 163:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	if (c20 > (pow(2, 15) - 1))	c20 = c20 - pow(2, 16);
 1257              		.loc 1 163 0
 1258 0490 40F20003 		movw	r3, #:lower16:c20
 1259 0494 C0F20003 		movt	r3, #:upper16:c20
 1260 0498 1B68     		ldr	r3, [r3, #0]
 1261 049a 1846     		mov	r0, r3
 1262 049c FFF7FEFF 		bl	__aeabi_i2d
 1263 04a0 0246     		mov	r2, r0
 1264 04a2 0B46     		mov	r3, r1
 1265 04a4 1046     		mov	r0, r2
 1266 04a6 1946     		mov	r1, r3
 1267 04a8 0FF26C43 		adr	r3, .L80+16
 1268 04ac D3E90023 		ldrd	r2, [r3]
 1269 04b0 FFF7FEFF 		bl	__aeabi_dcmpgt
 1270 04b4 0346     		mov	r3, r0
 1271 04b6 002B     		cmp	r3, #0
 1272 04b8 1FD0     		beq	.L43
 1273              	.L77:
 1274              		.loc 1 163 0 is_stmt 0 discriminator 1
 1275 04ba 40F20003 		movw	r3, #:lower16:c20
 1276 04be C0F20003 		movt	r3, #:upper16:c20
 1277 04c2 1B68     		ldr	r3, [r3, #0]
 1278 04c4 1846     		mov	r0, r3
 1279 04c6 FFF7FEFF 		bl	__aeabi_i2d
 1280 04ca 0246     		mov	r2, r0
 1281 04cc 0B46     		mov	r3, r1
 1282 04ce 1046     		mov	r0, r2
 1283 04d0 1946     		mov	r1, r3
 1284 04d2 4FF00002 		mov	r2, #0
 1285 04d6 4FF00003 		mov	r3, #0
 1286 04da C4F2F003 		movt	r3, 16624
 1287 04de FFF7FEFF 		bl	__aeabi_dsub
 1288 04e2 0246     		mov	r2, r0
 1289 04e4 0B46     		mov	r3, r1
 1290 04e6 1046     		mov	r0, r2
 1291 04e8 1946     		mov	r1, r3
 1292 04ea FFF7FEFF 		bl	__aeabi_d2iz
 1293 04ee 0246     		mov	r2, r0
 1294 04f0 40F20003 		movw	r3, #:lower16:c20
 1295 04f4 C0F20003 		movt	r3, #:upper16:c20
 1296 04f8 1A60     		str	r2, [r3, #0]
 1297              	.L43:
 164:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	c21 = I2Cdev_readByte((const I2C001Handle_type*)&DPS310_I2C_Handle,DPS310_Address,0x1e)<<8 | I2Cde
 1298              		.loc 1 164 0 is_stmt 1
 1299 04fa 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 1300 04fe C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 1301 0502 4FF0EE01 		mov	r1, #238
 1302 0506 4FF01E02 		mov	r2, #30
 1303 050a FFF7FEFF 		bl	I2Cdev_readByte
 1304 050e 0346     		mov	r3, r0
 1305 0510 4FEA0324 		lsl	r4, r3, #8
 1306 0514 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 1307 0518 C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 1308 051c 4FF0EE01 		mov	r1, #238
 1309 0520 4FF01F02 		mov	r2, #31
 1310 0524 FFF7FEFF 		bl	I2Cdev_readByte
 1311 0528 0346     		mov	r3, r0
 1312 052a 44EA0302 		orr	r2, r4, r3
 1313 052e 40F20003 		movw	r3, #:lower16:c21
 1314 0532 C0F20003 		movt	r3, #:upper16:c21
 1315 0536 1A60     		str	r2, [r3, #0]
 165:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	if (c21 > (pow(2, 15) - 1))	c21 = c21 - pow(2, 16);
 1316              		.loc 1 165 0
 1317 0538 40F20003 		movw	r3, #:lower16:c21
 1318 053c C0F20003 		movt	r3, #:upper16:c21
 1319 0540 1B68     		ldr	r3, [r3, #0]
 1320 0542 1846     		mov	r0, r3
 1321 0544 FFF7FEFF 		bl	__aeabi_i2d
 1322 0548 0246     		mov	r2, r0
 1323 054a 0B46     		mov	r3, r1
 1324 054c 1046     		mov	r0, r2
 1325 054e 1946     		mov	r1, r3
 1326 0550 F1A3     		adr	r3, .L80+16
 1327 0552 D3E90023 		ldrd	r2, [r3]
 1328 0556 FFF7FEFF 		bl	__aeabi_dcmpgt
 1329 055a 0346     		mov	r3, r0
 1330 055c 002B     		cmp	r3, #0
 1331 055e 1FD0     		beq	.L45
 1332              	.L78:
 1333              		.loc 1 165 0 is_stmt 0 discriminator 1
 1334 0560 40F20003 		movw	r3, #:lower16:c21
 1335 0564 C0F20003 		movt	r3, #:upper16:c21
 1336 0568 1B68     		ldr	r3, [r3, #0]
 1337 056a 1846     		mov	r0, r3
 1338 056c FFF7FEFF 		bl	__aeabi_i2d
 1339 0570 0246     		mov	r2, r0
 1340 0572 0B46     		mov	r3, r1
 1341 0574 1046     		mov	r0, r2
 1342 0576 1946     		mov	r1, r3
 1343 0578 4FF00002 		mov	r2, #0
 1344 057c 4FF00003 		mov	r3, #0
 1345 0580 C4F2F003 		movt	r3, 16624
 1346 0584 FFF7FEFF 		bl	__aeabi_dsub
 1347 0588 0246     		mov	r2, r0
 1348 058a 0B46     		mov	r3, r1
 1349 058c 1046     		mov	r0, r2
 1350 058e 1946     		mov	r1, r3
 1351 0590 FFF7FEFF 		bl	__aeabi_d2iz
 1352 0594 0246     		mov	r2, r0
 1353 0596 40F20003 		movw	r3, #:lower16:c21
 1354 059a C0F20003 		movt	r3, #:upper16:c21
 1355 059e 1A60     		str	r2, [r3, #0]
 1356              	.L45:
 166:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	c30 = I2Cdev_readByte((const I2C001Handle_type*)&DPS310_I2C_Handle,DPS310_Address,0x20)<<8 | I2Cde
 1357              		.loc 1 166 0 is_stmt 1
 1358 05a0 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 1359 05a4 C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 1360 05a8 4FF0EE01 		mov	r1, #238
 1361 05ac 4FF02002 		mov	r2, #32
 1362 05b0 FFF7FEFF 		bl	I2Cdev_readByte
 1363 05b4 0346     		mov	r3, r0
 1364 05b6 4FEA0324 		lsl	r4, r3, #8
 1365 05ba 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 1366 05be C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 1367 05c2 4FF0EE01 		mov	r1, #238
 1368 05c6 4FF02102 		mov	r2, #33
 1369 05ca FFF7FEFF 		bl	I2Cdev_readByte
 1370 05ce 0346     		mov	r3, r0
 1371 05d0 44EA0302 		orr	r2, r4, r3
 1372 05d4 40F20003 		movw	r3, #:lower16:c30
 1373 05d8 C0F20003 		movt	r3, #:upper16:c30
 1374 05dc 1A60     		str	r2, [r3, #0]
 167:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	if (c30 > (pow(2, 15) - 1))	c30 = c30 - pow(2, 16);
 1375              		.loc 1 167 0
 1376 05de 40F20003 		movw	r3, #:lower16:c30
 1377 05e2 C0F20003 		movt	r3, #:upper16:c30
 1378 05e6 1B68     		ldr	r3, [r3, #0]
 1379 05e8 1846     		mov	r0, r3
 1380 05ea FFF7FEFF 		bl	__aeabi_i2d
 1381 05ee 0246     		mov	r2, r0
 1382 05f0 0B46     		mov	r3, r1
 1383 05f2 1046     		mov	r0, r2
 1384 05f4 1946     		mov	r1, r3
 1385 05f6 C8A3     		adr	r3, .L80+16
 1386 05f8 D3E90023 		ldrd	r2, [r3]
 1387 05fc FFF7FEFF 		bl	__aeabi_dcmpgt
 1388 0600 0346     		mov	r3, r0
 1389 0602 002B     		cmp	r3, #0
 1390 0604 1FD0     		beq	.L47
 1391              	.L79:
 1392              		.loc 1 167 0 is_stmt 0 discriminator 1
 1393 0606 40F20003 		movw	r3, #:lower16:c30
 1394 060a C0F20003 		movt	r3, #:upper16:c30
 1395 060e 1B68     		ldr	r3, [r3, #0]
 1396 0610 1846     		mov	r0, r3
 1397 0612 FFF7FEFF 		bl	__aeabi_i2d
 1398 0616 0246     		mov	r2, r0
 1399 0618 0B46     		mov	r3, r1
 1400 061a 1046     		mov	r0, r2
 1401 061c 1946     		mov	r1, r3
 1402 061e 4FF00002 		mov	r2, #0
 1403 0622 4FF00003 		mov	r3, #0
 1404 0626 C4F2F003 		movt	r3, 16624
 1405 062a FFF7FEFF 		bl	__aeabi_dsub
 1406 062e 0246     		mov	r2, r0
 1407 0630 0B46     		mov	r3, r1
 1408 0632 1046     		mov	r0, r2
 1409 0634 1946     		mov	r1, r3
 1410 0636 FFF7FEFF 		bl	__aeabi_d2iz
 1411 063a 0246     		mov	r2, r0
 1412 063c 40F20003 		movw	r3, #:lower16:c30
 1413 0640 C0F20003 		movt	r3, #:upper16:c30
 1414 0644 1A60     		str	r2, [r3, #0]
 1415              	.L47:
 168:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 
 169:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	//use some default values if coefficient registers are "empty"
 170:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	if (c0 == 0 || c1 == 0 || c00 == 0 || c10 == 0 || c01 == 0 || c11 == 0 || c20 == 0 || c21 == 0 || 
 1416              		.loc 1 170 0 is_stmt 1
 1417 0646 40F20003 		movw	r3, #:lower16:c0
 1418 064a C0F20003 		movt	r3, #:upper16:c0
 1419 064e 1B68     		ldr	r3, [r3, #0]
 1420 0650 002B     		cmp	r3, #0
 1421 0652 37D0     		beq	.L49
 1422              		.loc 1 170 0 is_stmt 0 discriminator 1
 1423 0654 40F20003 		movw	r3, #:lower16:c1
 1424 0658 C0F20003 		movt	r3, #:upper16:c1
 1425 065c 1B68     		ldr	r3, [r3, #0]
 1426 065e 002B     		cmp	r3, #0
 1427 0660 30D0     		beq	.L49
 1428 0662 40F20003 		movw	r3, #:lower16:c00
 1429 0666 C0F20003 		movt	r3, #:upper16:c00
 1430 066a 1B68     		ldr	r3, [r3, #0]
 1431 066c 002B     		cmp	r3, #0
 1432 066e 29D0     		beq	.L49
 1433 0670 40F20003 		movw	r3, #:lower16:c10
 1434 0674 C0F20003 		movt	r3, #:upper16:c10
 1435 0678 1B68     		ldr	r3, [r3, #0]
 1436 067a 002B     		cmp	r3, #0
 1437 067c 22D0     		beq	.L49
 1438 067e 40F20003 		movw	r3, #:lower16:c01
 1439 0682 C0F20003 		movt	r3, #:upper16:c01
 1440 0686 1B68     		ldr	r3, [r3, #0]
 1441 0688 002B     		cmp	r3, #0
 1442 068a 1BD0     		beq	.L49
 1443 068c 40F20003 		movw	r3, #:lower16:c11
 1444 0690 C0F20003 		movt	r3, #:upper16:c11
 1445 0694 1B68     		ldr	r3, [r3, #0]
 1446 0696 002B     		cmp	r3, #0
 1447 0698 14D0     		beq	.L49
 1448 069a 40F20003 		movw	r3, #:lower16:c20
 1449 069e C0F20003 		movt	r3, #:upper16:c20
 1450 06a2 1B68     		ldr	r3, [r3, #0]
 1451 06a4 002B     		cmp	r3, #0
 1452 06a6 0DD0     		beq	.L49
 1453 06a8 40F20003 		movw	r3, #:lower16:c21
 1454 06ac C0F20003 		movt	r3, #:upper16:c21
 1455 06b0 1B68     		ldr	r3, [r3, #0]
 1456 06b2 002B     		cmp	r3, #0
 1457 06b4 06D0     		beq	.L49
 1458 06b6 40F20003 		movw	r3, #:lower16:c30
 1459 06ba C0F20003 		movt	r3, #:upper16:c30
 1460 06be 1B68     		ldr	r3, [r3, #0]
 1461 06c0 002B     		cmp	r3, #0
 1462 06c2 4AD1     		bne	.L50
 1463              	.L49:
 171:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	{
 172:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		c00 = 81507;
 1464              		.loc 1 172 0 is_stmt 1
 1465 06c4 40F20003 		movw	r3, #:lower16:c00
 1466 06c8 C0F20003 		movt	r3, #:upper16:c00
 1467 06cc 43F66362 		movw	r2, #15971
 1468 06d0 C0F20102 		movt	r2, 1
 1469 06d4 1A60     		str	r2, [r3, #0]
 173:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		c10 = -66011;
 1470              		.loc 1 173 0
 1471 06d6 40F20003 		movw	r3, #:lower16:c10
 1472 06da C0F20003 		movt	r3, #:upper16:c10
 1473 06de 4FF62562 		movw	r2, #65061
 1474 06e2 CFF6FE72 		movt	r2, 65534
 1475 06e6 1A60     		str	r2, [r3, #0]
 174:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		c20 = -13579;
 1476              		.loc 1 174 0
 1477 06e8 40F20003 		movw	r3, #:lower16:c20
 1478 06ec C0F20003 		movt	r3, #:upper16:c20
 1479 06f0 4CF6F522 		movw	r2, #51957
 1480 06f4 CFF6FF72 		movt	r2, 65535
 1481 06f8 1A60     		str	r2, [r3, #0]
 175:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		c30 = -2154;
 1482              		.loc 1 175 0
 1483 06fa 40F20003 		movw	r3, #:lower16:c30
 1484 06fe C0F20003 		movt	r3, #:upper16:c30
 1485 0702 4FF29672 		movw	r2, #63382
 1486 0706 CFF6FF72 		movt	r2, 65535
 1487 070a 1A60     		str	r2, [r3, #0]
 176:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		c01 = -2115;
 1488              		.loc 1 176 0
 1489 070c 40F20003 		movw	r3, #:lower16:c01
 1490 0710 C0F20003 		movt	r3, #:upper16:c01
 1491 0714 4FF2BD72 		movw	r2, #63421
 1492 0718 CFF6FF72 		movt	r2, 65535
 1493 071c 1A60     		str	r2, [r3, #0]
 177:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		c11 = 1585;
 1494              		.loc 1 177 0
 1495 071e 40F20003 		movw	r3, #:lower16:c11
 1496 0722 C0F20003 		movt	r3, #:upper16:c11
 1497 0726 40F23162 		movw	r2, #1585
 1498 072a 1A60     		str	r2, [r3, #0]
 178:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		c21 = 117;
 1499              		.loc 1 178 0
 1500 072c 40F20003 		movw	r3, #:lower16:c21
 1501 0730 C0F20003 		movt	r3, #:upper16:c21
 1502 0734 4FF07502 		mov	r2, #117
 1503 0738 1A60     		str	r2, [r3, #0]
 179:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		c0 = 205;
 1504              		.loc 1 179 0
 1505 073a 40F20003 		movw	r3, #:lower16:c0
 1506 073e C0F20003 		movt	r3, #:upper16:c0
 1507 0742 4FF0CD02 		mov	r2, #205
 1508 0746 1A60     		str	r2, [r3, #0]
 180:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		c1 = -258;
 1509              		.loc 1 180 0
 1510 0748 40F20003 		movw	r3, #:lower16:c1
 1511 074c C0F20003 		movt	r3, #:upper16:c1
 1512 0750 4FF6FE62 		movw	r2, #65278
 1513 0754 CFF6FF72 		movt	r2, 65535
 1514 0758 1A60     		str	r2, [r3, #0]
 1515              	.L50:
 181:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	}
 182:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 
 183:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	// select compensation scale factors
 184:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	uint8_t P_sampling = I2Cdev_readByte((const I2C001Handle_type*)&DPS310_I2C_Handle,DPS310_Address,P
 1516              		.loc 1 184 0
 1517 075a 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 1518 075e C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 1519 0762 4FF0EE01 		mov	r1, #238
 1520 0766 4FF00602 		mov	r2, #6
 1521 076a FFF7FEFF 		bl	I2Cdev_readByte
 1522 076e 0346     		mov	r3, r0
 1523 0770 DBB2     		uxtb	r3, r3
 1524 0772 4FEA0313 		lsl	r3, r3, #4
 1525 0776 7B71     		strb	r3, [r7, #5]
 185:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	switch (P_sampling>>4)
 1526              		.loc 1 185 0
 1527 0778 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1528 077a 4FEA1313 		lsr	r3, r3, #4
 1529 077e DBB2     		uxtb	r3, r3
 1530 0780 072B     		cmp	r3, #7
 1531 0782 53D8     		bhi	.L51
 1532 0784 01A2     		adr	r2, .L60
 1533 0786 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1534 078a 00BF     		.align	2
 1535              	.L60:
 1536 078c AD070000 		.word	.L52+1
 1537 0790 BD070000 		.word	.L53+1
 1538 0794 CD070000 		.word	.L54+1
 1539 0798 DD070000 		.word	.L55+1
 1540 079c ED070000 		.word	.L56+1
 1541 07a0 FD070000 		.word	.L57+1
 1542 07a4 0D080000 		.word	.L58+1
 1543 07a8 1D080000 		.word	.L59+1
 1544              	.L52:
 186:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	{
 187:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		case 0: kP = 524288;
 1545              		.loc 1 187 0
 1546 07ac 40F20003 		movw	r3, #:lower16:kP
 1547 07b0 C0F20003 		movt	r3, #:upper16:kP
 1548 07b4 4FF40022 		mov	r2, #524288
 1549 07b8 1A60     		str	r2, [r3, #0]
 188:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		break;
 1550              		.loc 1 188 0
 1551 07ba 37E0     		b	.L51
 1552              	.L53:
 189:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		case 1: kP = 1572864;
 1553              		.loc 1 189 0
 1554 07bc 40F20003 		movw	r3, #:lower16:kP
 1555 07c0 C0F20003 		movt	r3, #:upper16:kP
 1556 07c4 4FF4C012 		mov	r2, #1572864
 1557 07c8 1A60     		str	r2, [r3, #0]
 190:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		break;
 1558              		.loc 1 190 0
 1559 07ca 2FE0     		b	.L51
 1560              	.L54:
 191:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		case 2: kP = 3670016;
 1561              		.loc 1 191 0
 1562 07cc 40F20003 		movw	r3, #:lower16:kP
 1563 07d0 C0F20003 		movt	r3, #:upper16:kP
 1564 07d4 4FF46012 		mov	r2, #3670016
 1565 07d8 1A60     		str	r2, [r3, #0]
 192:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		break;
 1566              		.loc 1 192 0
 1567 07da 27E0     		b	.L51
 1568              	.L55:
 193:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		case 3: kP = 7864320;
 1569              		.loc 1 193 0
 1570 07dc 40F20003 		movw	r3, #:lower16:kP
 1571 07e0 C0F20003 		movt	r3, #:upper16:kP
 1572 07e4 4FF4F002 		mov	r2, #7864320
 1573 07e8 1A60     		str	r2, [r3, #0]
 194:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		break;
 1574              		.loc 1 194 0
 1575 07ea 1FE0     		b	.L51
 1576              	.L56:
 195:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		case 4: kP = 253952;
 1577              		.loc 1 195 0
 1578 07ec 40F20003 		movw	r3, #:lower16:kP
 1579 07f0 C0F20003 		movt	r3, #:upper16:kP
 1580 07f4 4FF47832 		mov	r2, #253952
 1581 07f8 1A60     		str	r2, [r3, #0]
 196:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		break;
 1582              		.loc 1 196 0
 1583 07fa 17E0     		b	.L51
 1584              	.L57:
 197:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		case 5: kP = 516096;
 1585              		.loc 1 197 0
 1586 07fc 40F20003 		movw	r3, #:lower16:kP
 1587 0800 C0F20003 		movt	r3, #:upper16:kP
 1588 0804 4FF4FC22 		mov	r2, #516096
 1589 0808 1A60     		str	r2, [r3, #0]
 198:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		break;
 1590              		.loc 1 198 0
 1591 080a 0FE0     		b	.L51
 1592              	.L58:
 199:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		case 6: kP = 1040384;
 1593              		.loc 1 199 0
 1594 080c 40F20003 		movw	r3, #:lower16:kP
 1595 0810 C0F20003 		movt	r3, #:upper16:kP
 1596 0814 4FF47E22 		mov	r2, #1040384
 1597 0818 1A60     		str	r2, [r3, #0]
 200:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		break;
 1598              		.loc 1 200 0
 1599 081a 07E0     		b	.L51
 1600              	.L59:
 201:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		case 7: kP = 2088960;
 1601              		.loc 1 201 0
 1602 081c 40F20003 		movw	r3, #:lower16:kP
 1603 0820 C0F20003 		movt	r3, #:upper16:kP
 1604 0824 4FF4FF12 		mov	r2, #2088960
 1605 0828 1A60     		str	r2, [r3, #0]
 202:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		break;
 1606              		.loc 1 202 0
 1607 082a 00BF     		nop
 1608              	.L51:
 203:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	}
 204:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	uint8_t T_sampling = I2Cdev_readByte((const I2C001Handle_type*)&DPS310_I2C_Handle,DPS310_Address,T
 1609              		.loc 1 204 0
 1610 082c 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 1611 0830 C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 1612 0834 4FF0EE01 		mov	r1, #238
 1613 0838 4FF00702 		mov	r2, #7
 1614 083c FFF7FEFF 		bl	I2Cdev_readByte
 1615 0840 0346     		mov	r3, r0
 1616 0842 DBB2     		uxtb	r3, r3
 1617 0844 4FEA0313 		lsl	r3, r3, #4
 1618 0848 3B71     		strb	r3, [r7, #4]
 205:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	switch (T_sampling>>4)
 1619              		.loc 1 205 0
 1620 084a 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 1621 084c 4FEA1313 		lsr	r3, r3, #4
 1622 0850 DBB2     		uxtb	r3, r3
 1623 0852 072B     		cmp	r3, #7
 1624 0854 52D8     		bhi	.L30
 1625 0856 01A2     		adr	r2, .L70
 1626 0858 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1627              		.align	2
 1628              	.L70:
 1629 085c 7D080000 		.word	.L62+1
 1630 0860 8D080000 		.word	.L63+1
 1631 0864 9D080000 		.word	.L64+1
 1632 0868 AD080000 		.word	.L65+1
 1633 086c BD080000 		.word	.L66+1
 1634 0870 CD080000 		.word	.L67+1
 1635 0874 DD080000 		.word	.L68+1
 1636 0878 ED080000 		.word	.L69+1
 1637              	.L62:
 206:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	{
 207:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		case 0: kT = 524288;
 1638              		.loc 1 207 0
 1639 087c 40F20003 		movw	r3, #:lower16:kT
 1640 0880 C0F20003 		movt	r3, #:upper16:kT
 1641 0884 4FF40022 		mov	r2, #524288
 1642 0888 1A60     		str	r2, [r3, #0]
 208:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		break;
 1643              		.loc 1 208 0
 1644 088a 37E0     		b	.L30
 1645              	.L63:
 209:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		case 1: kT = 1572864;
 1646              		.loc 1 209 0
 1647 088c 40F20003 		movw	r3, #:lower16:kT
 1648 0890 C0F20003 		movt	r3, #:upper16:kT
 1649 0894 4FF4C012 		mov	r2, #1572864
 1650 0898 1A60     		str	r2, [r3, #0]
 210:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		break;
 1651              		.loc 1 210 0
 1652 089a 2FE0     		b	.L30
 1653              	.L64:
 211:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		case 2: kT = 3670016;
 1654              		.loc 1 211 0
 1655 089c 40F20003 		movw	r3, #:lower16:kT
 1656 08a0 C0F20003 		movt	r3, #:upper16:kT
 1657 08a4 4FF46012 		mov	r2, #3670016
 1658 08a8 1A60     		str	r2, [r3, #0]
 212:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		break;
 1659              		.loc 1 212 0
 1660 08aa 27E0     		b	.L30
 1661              	.L65:
 213:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		case 3: kT = 7864320;
 1662              		.loc 1 213 0
 1663 08ac 40F20003 		movw	r3, #:lower16:kT
 1664 08b0 C0F20003 		movt	r3, #:upper16:kT
 1665 08b4 4FF4F002 		mov	r2, #7864320
 1666 08b8 1A60     		str	r2, [r3, #0]
 214:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		break;
 1667              		.loc 1 214 0
 1668 08ba 1FE0     		b	.L30
 1669              	.L66:
 215:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		case 4: kT = 253952;
 1670              		.loc 1 215 0
 1671 08bc 40F20003 		movw	r3, #:lower16:kT
 1672 08c0 C0F20003 		movt	r3, #:upper16:kT
 1673 08c4 4FF47832 		mov	r2, #253952
 1674 08c8 1A60     		str	r2, [r3, #0]
 216:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		break;
 1675              		.loc 1 216 0
 1676 08ca 17E0     		b	.L30
 1677              	.L67:
 217:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		case 5: kT = 516096;
 1678              		.loc 1 217 0
 1679 08cc 40F20003 		movw	r3, #:lower16:kT
 1680 08d0 C0F20003 		movt	r3, #:upper16:kT
 1681 08d4 4FF4FC22 		mov	r2, #516096
 1682 08d8 1A60     		str	r2, [r3, #0]
 218:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		break;
 1683              		.loc 1 218 0
 1684 08da 0FE0     		b	.L30
 1685              	.L68:
 219:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		case 6: kT = 1040384;
 1686              		.loc 1 219 0
 1687 08dc 40F20003 		movw	r3, #:lower16:kT
 1688 08e0 C0F20003 		movt	r3, #:upper16:kT
 1689 08e4 4FF47E22 		mov	r2, #1040384
 1690 08e8 1A60     		str	r2, [r3, #0]
 220:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		break;
 1691              		.loc 1 220 0
 1692 08ea 07E0     		b	.L30
 1693              	.L69:
 221:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		case 7: kT = 2088960;
 1694              		.loc 1 221 0
 1695 08ec 40F20003 		movw	r3, #:lower16:kT
 1696 08f0 C0F20003 		movt	r3, #:upper16:kT
 1697 08f4 4FF4FF12 		mov	r2, #2088960
 1698 08f8 1A60     		str	r2, [r3, #0]
 222:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 		break;
 1699              		.loc 1 222 0
 1700 08fa 00BF     		nop
 1701              	.L30:
 223:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	}
 224:../_Quadrocopter/Sensors/DPS310/DPS310.c **** }
 1702              		.loc 1 224 0
 1703 08fc 07F10C07 		add	r7, r7, #12
 1704 0900 BD46     		mov	sp, r7
 1705 0902 90BD     		pop	{r4, r7, pc}
 1706              	.L81:
 1707 0904 AFF30080 		.align	3
 1708              	.L80:
 1709 0908 00000000 		.word	0
 1710 090c 00FC9F40 		.word	1084226560
 1711 0910 00000000 		.word	0
 1712 0914 FCFF1F41 		.word	1092616188
 1713 0918 00000000 		.word	0
 1714 091c C0FFDF40 		.word	1088421824
 1715              		.cfi_endproc
 1716              	.LFE156:
 1718              		.section	.text.getPressure,"ax",%progbits
 1719              		.align	2
 1720              		.global	getPressure
 1721              		.thumb
 1722              		.thumb_func
 1724              	getPressure:
 1725              	.LFB157:
 225:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 
 226:../_Quadrocopter/Sensors/DPS310/DPS310.c **** int32_t getPressure()
 227:../_Quadrocopter/Sensors/DPS310/DPS310.c **** {
 1726              		.loc 1 227 0
 1727              		.cfi_startproc
 1728              		@ args = 0, pretend = 0, frame = 16
 1729              		@ frame_needed = 1, uses_anonymous_args = 0
 1730 0000 80B5     		push	{r7, lr}
 1731              	.LCFI12:
 1732              		.cfi_def_cfa_offset 8
 1733              		.cfi_offset 7, -8
 1734              		.cfi_offset 14, -4
 1735 0002 84B0     		sub	sp, sp, #16
 1736              	.LCFI13:
 1737              		.cfi_def_cfa_offset 24
 1738 0004 00AF     		add	r7, sp, #0
 1739              	.LCFI14:
 1740              		.cfi_def_cfa_register 7
 228:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	//Read Pressure start-----------------------------------------------------------------------------
 229:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	uint32_t register0 = I2Cdev_readByte((const I2C001Handle_type*)&DPS310_I2C_Handle,DPS310_Address,0
 1741              		.loc 1 229 0
 1742 0006 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 1743 000a C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 1744 000e 4FF0EE01 		mov	r1, #238
 1745 0012 4FF00002 		mov	r2, #0
 1746 0016 FFF7FEFF 		bl	I2Cdev_readByte
 1747 001a 0346     		mov	r3, r0
 1748 001c FB60     		str	r3, [r7, #12]
 230:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	uint32_t register1 = I2Cdev_readByte((const I2C001Handle_type*)&DPS310_I2C_Handle,DPS310_Address,0
 1749              		.loc 1 230 0
 1750 001e 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 1751 0022 C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 1752 0026 4FF0EE01 		mov	r1, #238
 1753 002a 4FF00102 		mov	r2, #1
 1754 002e FFF7FEFF 		bl	I2Cdev_readByte
 1755 0032 0346     		mov	r3, r0
 1756 0034 BB60     		str	r3, [r7, #8]
 231:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	uint32_t register2 = I2Cdev_readByte((const I2C001Handle_type*)&DPS310_I2C_Handle,DPS310_Address,0
 1757              		.loc 1 231 0
 1758 0036 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 1759 003a C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 1760 003e 4FF0EE01 		mov	r1, #238
 1761 0042 4FF00202 		mov	r2, #2
 1762 0046 FFF7FEFF 		bl	I2Cdev_readByte
 1763 004a 0346     		mov	r3, r0
 1764 004c 7B60     		str	r3, [r7, #4]
 232:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	//Read Pressure end-------------------------------------------------------------------------------
 233:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	return (uint32_t)(register0<<16 | register1<<8 | register2);
 1765              		.loc 1 233 0
 1766 004e FB68     		ldr	r3, [r7, #12]
 1767 0050 4FEA0342 		lsl	r2, r3, #16
 1768 0054 BB68     		ldr	r3, [r7, #8]
 1769 0056 4FEA0323 		lsl	r3, r3, #8
 1770 005a 1A43     		orrs	r2, r2, r3
 1771 005c 7B68     		ldr	r3, [r7, #4]
 1772 005e 1343     		orrs	r3, r3, r2
 234:../_Quadrocopter/Sensors/DPS310/DPS310.c **** }
 1773              		.loc 1 234 0
 1774 0060 1846     		mov	r0, r3
 1775 0062 07F11007 		add	r7, r7, #16
 1776 0066 BD46     		mov	sp, r7
 1777 0068 80BD     		pop	{r7, pc}
 1778              		.cfi_endproc
 1779              	.LFE157:
 1781 006a 00BF     		.section	.text.getTemperature,"ax",%progbits
 1782              		.align	2
 1783              		.global	getTemperature
 1784              		.thumb
 1785              		.thumb_func
 1787              	getTemperature:
 1788              	.LFB158:
 235:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 
 236:../_Quadrocopter/Sensors/DPS310/DPS310.c **** int32_t getTemperature()
 237:../_Quadrocopter/Sensors/DPS310/DPS310.c **** {
 1789              		.loc 1 237 0
 1790              		.cfi_startproc
 1791              		@ args = 0, pretend = 0, frame = 16
 1792              		@ frame_needed = 1, uses_anonymous_args = 0
 1793 0000 80B5     		push	{r7, lr}
 1794              	.LCFI15:
 1795              		.cfi_def_cfa_offset 8
 1796              		.cfi_offset 7, -8
 1797              		.cfi_offset 14, -4
 1798 0002 84B0     		sub	sp, sp, #16
 1799              	.LCFI16:
 1800              		.cfi_def_cfa_offset 24
 1801 0004 00AF     		add	r7, sp, #0
 1802              	.LCFI17:
 1803              		.cfi_def_cfa_register 7
 238:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	//Read Temp start---------------------------------------------------------------------------------
 239:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	uint32_t register3 = I2Cdev_readByte((const I2C001Handle_type*)&DPS310_I2C_Handle,DPS310_Address,0
 1804              		.loc 1 239 0
 1805 0006 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 1806 000a C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 1807 000e 4FF0EE01 		mov	r1, #238
 1808 0012 4FF00302 		mov	r2, #3
 1809 0016 FFF7FEFF 		bl	I2Cdev_readByte
 1810 001a 0346     		mov	r3, r0
 1811 001c FB60     		str	r3, [r7, #12]
 240:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	uint32_t register4 = I2Cdev_readByte((const I2C001Handle_type*)&DPS310_I2C_Handle,DPS310_Address,0
 1812              		.loc 1 240 0
 1813 001e 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 1814 0022 C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 1815 0026 4FF0EE01 		mov	r1, #238
 1816 002a 4FF00402 		mov	r2, #4
 1817 002e FFF7FEFF 		bl	I2Cdev_readByte
 1818 0032 0346     		mov	r3, r0
 1819 0034 BB60     		str	r3, [r7, #8]
 241:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	uint32_t register5 = I2Cdev_readByte((const I2C001Handle_type*)&DPS310_I2C_Handle,DPS310_Address,0
 1820              		.loc 1 241 0
 1821 0036 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 1822 003a C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 1823 003e 4FF0EE01 		mov	r1, #238
 1824 0042 4FF00502 		mov	r2, #5
 1825 0046 FFF7FEFF 		bl	I2Cdev_readByte
 1826 004a 0346     		mov	r3, r0
 1827 004c 7B60     		str	r3, [r7, #4]
 242:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	//Read Temp end-----------------------------------------------------------------------------------
 243:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	return (uint32_t)(register3<<16 | register4<<8 | register5);
 1828              		.loc 1 243 0
 1829 004e FB68     		ldr	r3, [r7, #12]
 1830 0050 4FEA0342 		lsl	r2, r3, #16
 1831 0054 BB68     		ldr	r3, [r7, #8]
 1832 0056 4FEA0323 		lsl	r3, r3, #8
 1833 005a 1A43     		orrs	r2, r2, r3
 1834 005c 7B68     		ldr	r3, [r7, #4]
 1835 005e 1343     		orrs	r3, r3, r2
 244:../_Quadrocopter/Sensors/DPS310/DPS310.c **** }
 1836              		.loc 1 244 0
 1837 0060 1846     		mov	r0, r3
 1838 0062 07F11007 		add	r7, r7, #16
 1839 0066 BD46     		mov	sp, r7
 1840 0068 80BD     		pop	{r7, pc}
 1841              		.cfi_endproc
 1842              	.LFE158:
 1844 006a 00BF     		.section	.text.setRegister,"ax",%progbits
 1845              		.align	2
 1846              		.global	setRegister
 1847              		.thumb
 1848              		.thumb_func
 1850              	setRegister:
 1851              	.LFB159:
 245:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 
 246:../_Quadrocopter/Sensors/DPS310/DPS310.c **** SensorError setRegister(uint8_t DPS310Address, uint8_t registerAdress, uint8_t setValue)
 247:../_Quadrocopter/Sensors/DPS310/DPS310.c **** {
 1852              		.loc 1 247 0
 1853              		.cfi_startproc
 1854              		@ args = 0, pretend = 0, frame = 16
 1855              		@ frame_needed = 1, uses_anonymous_args = 0
 1856 0000 80B5     		push	{r7, lr}
 1857              	.LCFI18:
 1858              		.cfi_def_cfa_offset 8
 1859              		.cfi_offset 7, -8
 1860              		.cfi_offset 14, -4
 1861 0002 84B0     		sub	sp, sp, #16
 1862              	.LCFI19:
 1863              		.cfi_def_cfa_offset 24
 1864 0004 00AF     		add	r7, sp, #0
 1865              	.LCFI20:
 1866              		.cfi_def_cfa_register 7
 1867 0006 1346     		mov	r3, r2
 1868 0008 0246     		mov	r2, r0
 1869 000a FA71     		strb	r2, [r7, #7]
 1870 000c 0A46     		mov	r2, r1
 1871 000e BA71     		strb	r2, [r7, #6]
 1872 0010 7B71     		strb	r3, [r7, #5]
 248:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 
 249:../_Quadrocopter/Sensors/DPS310/DPS310.c **** SensorError	worked = NO_ERROR;
 1873              		.loc 1 249 0
 1874 0012 4FF00003 		mov	r3, #0
 1875 0016 FB73     		strb	r3, [r7, #15]
 250:../_Quadrocopter/Sensors/DPS310/DPS310.c **** I2Cdev_writeByte((const I2C001Handle_type*)&DPS310_I2C_Handle,DPS310Address,registerAdress,setValue
 1876              		.loc 1 250 0
 1877 0018 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1878 001a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 1879 001c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1880 001e 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 1881 0022 C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 1882 0026 FFF7FEFF 		bl	I2Cdev_writeByte
 251:../_Quadrocopter/Sensors/DPS310/DPS310.c **** //if(setValue != I2Cdev_readByte((const I2C001Handle_type*)&DPS310_I2C_Handle,DPS310Address,registe
 252:../_Quadrocopter/Sensors/DPS310/DPS310.c **** uint8_t reg=I2Cdev_readByte((const I2C001Handle_type*)&DPS310_I2C_Handle,DPS310Address,registerAdre
 1883              		.loc 1 252 0
 1884 002a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1885 002c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1886 002e 40F20000 		movw	r0, #:lower16:I2C001_Handle1
 1887 0032 C0F20000 		movt	r0, #:upper16:I2C001_Handle1
 1888 0036 1146     		mov	r1, r2
 1889 0038 1A46     		mov	r2, r3
 1890 003a FFF7FEFF 		bl	I2Cdev_readByte
 1891 003e 0346     		mov	r3, r0
 1892 0040 BB73     		strb	r3, [r7, #14]
 253:../_Quadrocopter/Sensors/DPS310/DPS310.c **** if(setValue != reg)
 1893              		.loc 1 253 0
 1894 0042 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 1895 0044 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1896 0046 9A42     		cmp	r2, r3
 1897 0048 20D0     		beq	.L87
 254:../_Quadrocopter/Sensors/DPS310/DPS310.c **** {
 255:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	switch(registerAdress)
 1898              		.loc 1 255 0
 1899 004a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1900 004c A3F10603 		sub	r3, r3, #6
 1901 0050 032B     		cmp	r3, #3
 1902 0052 1BD8     		bhi	.L87
 1903 0054 01A2     		adr	r2, .L92
 1904 0056 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1905 005a 00BF     		.align	2
 1906              	.L92:
 1907 005c 6D000000 		.word	.L88+1
 1908 0060 75000000 		.word	.L89+1
 1909 0064 7D000000 		.word	.L90+1
 1910 0068 85000000 		.word	.L91+1
 1911              	.L88:
 256:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	{
 257:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	case 0x06:
 258:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	worked = PRESSURE_CONFIG;
 1912              		.loc 1 258 0
 1913 006c 4FF00103 		mov	r3, #1
 1914 0070 FB73     		strb	r3, [r7, #15]
 259:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	break;
 1915              		.loc 1 259 0
 1916 0072 0BE0     		b	.L87
 1917              	.L89:
 260:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 
 261:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	case 0x07:
 262:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	worked = TEMPERATURE_CONFIG;
 1918              		.loc 1 262 0
 1919 0074 4FF00203 		mov	r3, #2
 1920 0078 FB73     		strb	r3, [r7, #15]
 263:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	break;
 1921              		.loc 1 263 0
 1922 007a 07E0     		b	.L87
 1923              	.L90:
 264:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 
 265:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	case 0x08:
 266:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	worked = SET_CONTINOUS;
 1924              		.loc 1 266 0
 1925 007c 4FF00303 		mov	r3, #3
 1926 0080 FB73     		strb	r3, [r7, #15]
 267:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	break;
 1927              		.loc 1 267 0
 1928 0082 03E0     		b	.L87
 1929              	.L91:
 268:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 
 269:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	case 0x09:
 270:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	worked = IR_CONFIG;
 1930              		.loc 1 270 0
 1931 0084 4FF00403 		mov	r3, #4
 1932 0088 FB73     		strb	r3, [r7, #15]
 271:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	break;
 1933              		.loc 1 271 0
 1934 008a 00BF     		nop
 1935              	.L87:
 272:../_Quadrocopter/Sensors/DPS310/DPS310.c **** 	}
 273:../_Quadrocopter/Sensors/DPS310/DPS310.c **** }
 274:../_Quadrocopter/Sensors/DPS310/DPS310.c **** return worked;
 1936              		.loc 1 274 0
 1937 008c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 275:../_Quadrocopter/Sensors/DPS310/DPS310.c **** }
 1938              		.loc 1 275 0
 1939 008e 1846     		mov	r0, r3
 1940 0090 07F11007 		add	r7, r7, #16
 1941 0094 BD46     		mov	sp, r7
 1942 0096 80BD     		pop	{r7, pc}
 1943              		.cfi_endproc
 1944              	.LFE159:
 1946              		.text
 1947              	.Letext0:
 1948              		.file 2 "c:\\dave-3.1.10\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/i
 1949              		.file 3 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 1950              		.file 4 "E:\\GitHub\\Flying-PCB\\Software\\LARIX Flightcontroller\\CORE_Larix_V1.0\\Dave\\Generate
 1951              		.file 5 "E:\\GitHub\\Flying-PCB\\Software\\LARIX Flightcontroller\\CORE_Larix_V1.0\\Dave\\Generate
 1952              		.file 6 "E:\\GitHub\\Flying-PCB\\Software\\LARIX Flightcontroller\\CORE_Larix_V1.0\\Dave\\Generate
 1953              		.file 7 "E:\\GitHub\\Flying-PCB\\Software\\LARIX Flightcontroller\\CORE_Larix_V1.0\\Dave\\Generate
 1954              		.file 8 "../_Quadrocopter/Sensors/DPS310/../../_FIR_Filter/FIR_Filter.h"
 1955              		.file 9 "../_Quadrocopter/Sensors/DPS310/DPS310.h"
 1956              		.file 10 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Include/core_cm4.h"
 1957              		.file 11 "E:\\GitHub\\Flying-PCB\\Software\\LARIX Flightcontroller\\CORE_Larix_V1.0\\Dave\\Generat
DEFINED SYMBOLS
                            *ABS*:00000000 DPS310.c
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:24     .bss:00000000 Praw
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:21     .bss:00000000 $d
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:30     .bss:00000004 Traw
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:36     .bss:00000008 Praw_sc
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:42     .bss:0000000c Traw_sc
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:48     .bss:00000010 Pcomp
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:54     .bss:00000014 Tcomp
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:60     .bss:00000018 c00
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:66     .bss:0000001c c10
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:72     .bss:00000020 c20
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:78     .bss:00000024 c30
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:84     .bss:00000028 c01
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:90     .bss:0000002c c11
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:96     .bss:00000030 c21
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:102    .bss:00000034 c0
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:108    .bss:00000038 c1
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:114    .bss:0000003c kP
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:120    .bss:00000040 kT
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:123    .text.ERU1_3_IRQHandler:00000000 $t
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:128    .text.ERU1_3_IRQHandler:00000000 ERU1_3_IRQHandler
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:558    .text.updateValues:00000000 updateValues
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:277    .text.ERU1_3_IRQHandler:0000015c $d
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:284    .text.setupDPS310:00000000 $t
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:289    .text.setupDPS310:00000000 setupDPS310
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:1850   .text.setRegister:00000000 setRegister
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:553    .text.updateValues:00000000 $t
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:1724   .text.getPressure:00000000 getPressure
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:1787   .text.getTemperature:00000000 getTemperature
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:830    .text.getCoefficients:00000000 $t
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:835    .text.getCoefficients:00000000 getCoefficients
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:1536   .text.getCoefficients:0000078c $d
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:1546   .text.getCoefficients:000007ac $t
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:1629   .text.getCoefficients:0000085c $d
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:1639   .text.getCoefficients:0000087c $t
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:1709   .text.getCoefficients:00000908 $d
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:1719   .text.getPressure:00000000 $t
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:1782   .text.getTemperature:00000000 $t
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:1845   .text.setRegister:00000000 $t
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:1907   .text.setRegister:0000005c $d
C:\Users\Mya\AppData\Local\Temp\cctJ7ciQ.s:1913   .text.setRegister:0000006c $t
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.84cfd71c6d2dc0bd4021712beaa9efd8
                           .group:00000000 wm4.XMC4500.h.45.215f4b8c79f46c7645c15373868d08c0
                           .group:00000000 wm4.core_cm4.h.47.41af406cb4cda82c972f112a9cd0a024
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.39.3d3d1b4a79aef37532666dc6ee87c6ac
                           .group:00000000 wm4.core_cm4_simd.h.43.b5d1d38735af6366227b4256d330cf13
                           .group:00000000 wm4.core_cm4.h.178.e5ef5ce66d198d7f00f9d0076e267c41
                           .group:00000000 wm4.system_XMC4500.h.29.827f68baa362c84f2abae4ab67dde7c9
                           .group:00000000 wm4.XMC4500.h.198.8e022f279ff353ed081df898dc7b9cf3
                           .group:00000000 wm4.stddef.h.40.50cf36416e06376af8a9dca28536f2e4
                           .group:00000000 wm4.types.h.60.e75c47576398c648cdcf9000ace5e3d8
                           .group:00000000 wm4.MULTIPLEXER.h.46.4a863fbae1c79f0db26da3ce2dc30d02
                           .group:00000000 wm4.CCU8PWMLIB.h.74.725ec81203769525cc7a424597055f47
                           .group:00000000 wm4.MOTORLIB.h.62.951091d95913dd2ff36d761323a1771d
                           .group:00000000 wm4.DBG001.h.116.d6d9e7459a0faa3905c97c1d2edb339d
                           .group:00000000 wm4.uc_id.h.35.fa57ecd9f559d2767f56c96da2848c12
                           .group:00000000 wm4.CLK001_Const.h.50.e5e9c2ddc89f4cc9e7b93e9648fa94e4
                           .group:00000000 wm4.CLK001_Conf.h.81.851ac7a1268528f4d6739384c2f248a5
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.161.c6104a0666cf681b6269ddc9b4f516d4
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.80.1f2c84c0d57dd52dd9936095d9ac218e
                           .group:00000000 wm4.time.h.16.a4579e68956d2601c6113814b546764b
                           .group:00000000 wm4.RTC001.h.113.715d6fcab1863c6656b238bddd304166
                           .group:00000000 wm4.lmm001_debuglog.h.40.8031299705ecf04ad726bd19baff976d
                           .group:00000000 wm4.reent.h.11.a39e4126dcf3c6afd3054e0622577bae
                           .group:00000000 wm4.stddef.h.161.e50ff8a9d5d1abbc15641da28ac571bf
                           .group:00000000 wm4.string.h.86.d5c872ff52e2712c985b588a0ef39f3c
                           .group:00000000 wm4.LMM001.h.45.fa2df8bae969f45df5071221ac433ffa
                           .group:00000000 wm4.stdio.h.27.f2ac352bab34f31f9f478442827b2ba6
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.63.dfdea6580b080784d08faace69b6ed76
                           .group:00000000 wm4.stdlib.h.13.603ed7eb09a1561ab06840b7c0fcff58
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.53.c69c7609933ff56d59c757cec2d13230
                           .group:00000000 wm4.time.h.2.9857e62ad6ac99431e29d58067232314
                           .group:00000000 wm4.time.h.24.c499d4c1915694df17abb795fd34b719
                           .group:00000000 wm4.time.h.124.10ced469f846269cafc58b59c853e1bb
                           .group:00000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:00000000 wm4.errno.h.9.65044c2b5d8494e43f5986ab0a1d770f
                           .group:00000000 wm4.unistd.h.2.6ce1b91c4223f6078c1b210c7538c1d2
                           .group:00000000 wm4.unistd.h.251.605bc560cdc6c3b07b599bb71ac4e425
                           .group:00000000 wm4.malloc.h.4.62bd13b8107d5245f60bd92bb5994838
                           .group:00000000 wm4.malloc.h.148.73b7de3bd065dafbd594b04197a9466e
                           .group:00000000 wm4.reent.h.91.faac4d0ac97c0fcf23d10d0786197642
                           .group:00000000 wm4.SLTHA003.h.104.05371e300b30617373255b3cdb4765a2
                           .group:00000000 wm4.SYSTM001.h.64.6ecb31c49bc3e7691644fdcdfc11b5cd
                           .group:00000000 wm4.stdarg.h.31.fa591a4b1df9e413e9f5b8097f9ae89d
                           .group:00000000 wm4.Type_CM.h.61.3660c940695d7d5fef91de9c4081d0f0
                           .group:00000000 wm4.dwc_os.h.82.db2ca40c41e2f648d146b8942e5157d9
                           .group:00000000 wm4.dwc_otg_core_if.h.95.37e41eee47e9a4502e4044edf60ea92d
                           .group:00000000 wm4.usbcore001_device.h.107.6c032c9c28ac6c3f4e5e24a068720cd7
                           .group:00000000 wm4.USB.h.399.44a2bec94122294f06c4d854450494d3
                           .group:00000000 wm4.Common.h.102.bc881ac788d1d7ce84e651cbaa40f2c2
                           .group:00000000 wm4.Common.h.134.5069b632a0407201156f18fde915b80c
                           .group:00000000 wm4.USBMode.h.234.0cc9e23131c025605bb7c0db3ebb8ac9
                           .group:00000000 wm4.StdRequestType.h.93.4e19c7c655f990c2abedbb76a546fcde
                           .group:00000000 wm4.Endpoint.h.116.4ef46b127c9047ed49fe1e0df19e09b8
                           .group:00000000 wm4.StdDescriptors.h.120.0ce817e16dcc91b8cf4a79ba0e0e19b6
                           .group:00000000 wm4.CDC.h.103.7ce3e4692dde29e827f8736493eef7ef
                           .group:00000000 wm4.CDC.h.115.c83a7d6c5b6c8644b3dec6212d4ced09
                           .group:00000000 wm4.Descriptors.h.91.5cf84c2489ee54d154cabfe9e14b5c19
                           .group:00000000 wm4.Usic.h.54.8af9f733ba5771eeb374435d205ea54b
                           .group:00000000 wm4.UART001_Conf.h.53.fce01a2aa073e958cae0b1cc894db26c
                           .group:00000000 wm4.UART001.h.109.3e835815a7a59791d8bd39655f4d4cc9
                           .group:00000000 wm4.CCU4Global_Conf.h.63.10a5fc586e1563647b9633c45b1b739e
                           .group:00000000 wm4.PWMSP001.h.57.29b732b86baf3e81f49153f5f495912e
                           .group:00000000 wm4.NVIC002_Conf.h.63.85c8666caca8bd9e6c27dcbc8efe5043
                           .group:00000000 wm4.I2C001.h.97.5277d52889d6c741e048ea45ee1277b5
                           .group:00000000 wm4.I2C001_Conf.h.58.2b816ac2c964c55a6c88f9c406d78c9f
                           .group:00000000 wm4.ERU001_Conf.h.69.61c28b1ac8f55fb79ee064524d8b6415
                           .group:00000000 wm4.ERU002_Conf.h.49.449ecc05b9e62e9b43f2dc6ead06a5ce
                           .group:00000000 wm4.IO002_Conf.h.51.87e2c8c60b647393fe9ced2cae198f63
                           .group:00000000 wm4.ADCGROUP001.h.66.3ee81aba16709c201614af7d67499bdb
                           .group:00000000 wm4.IO001.h.49.4efcabb368feaef60c65bd7504b48505
                           .group:00000000 wm4.ADC001.h.72.a0f6b9479a18584b91fa95e6f862978d
                           .group:00000000 wm4.IO004.h.53.442ea5eb47ad9eedc675253aa35f3107
                           .group:00000000 wm4.math.h.35.cc9264b0ced3bd063c5784e64e89cf51
                           .group:00000000 wm4.arm_math.h.258.4f811f2034dd4ca295ea6f28c00c3d1e
                           .group:00000000 wm4.arm_math.h.277.3c36979cd3767d76e13a76d35d605b04
                           .group:00000000 wm4.I2Cdev.h.14.f8691519f66653930a002c194805c1eb
                           .group:00000000 wm4.FIR_Filter.h.9.4e964a304570d6362a54bd10cf9ece8c
                           .group:00000000 wm4.DPS310.h.16.caa4c47411da0fdd1759c4186e449235

UNDEFINED SYMBOLS
pressure
temperature
I2C001_Handle1
I2Cdev_readByte
PressureFIR
FIR_FILTER
ground_pressure
ground_temperature
SYSTM001_GetTime
I2Cdev_writeByte
__aeabi_i2d
__aeabi_dcmpgt
__aeabi_dsub
__aeabi_d2iz
__aeabi_dmul
__aeabi_f2d
__aeabi_dadd
__aeabi_d2f
