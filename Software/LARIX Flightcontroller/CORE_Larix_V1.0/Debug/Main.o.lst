   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"Main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PWM_percent
  20              		.bss
  21              		.align	2
  24              	PWM_percent:
  25 0000 00000000 		.space	16
  25      00000000 
  25      00000000 
  25      00000000 
  26              		.comm	x_pitch,8,4
  27              		.comm	x_roll,8,4
  28              		.global	u_yaw_dot
  29              		.align	2
  32              	u_yaw_dot:
  33 0010 00000000 		.space	4
  34              		.global	u_pitch
  35              		.align	2
  38              	u_pitch:
  39 0014 00000000 		.space	4
  40              		.global	u_roll
  41              		.align	2
  44              	u_roll:
  45 0018 00000000 		.space	4
  46              		.global	T
  47              		.section	.rodata
  48              		.align	2
  51              	T:
  52 0000 6F12033B 		.word	990057071
  53              		.global	P_roll
  54              		.align	2
  57              	P_roll:
  58 0004 00008C42 		.word	1116471296
  59              		.global	I_roll
  60              		.align	2
  63              	I_roll:
  64 0008 CDCC4C3E 		.word	1045220557
  65              		.global	D_roll
  66              		.align	2
  69              	D_roll:
  70 000c 9A99D93F 		.word	1071225242
  71              		.global	N_roll
  72              		.align	2
  75              	N_roll:
  76 0010 0000C843 		.word	1137180672
  77              		.global	P_pitch
  78              		.align	2
  81              	P_pitch:
  82 0014 00008C42 		.word	1116471296
  83              		.global	I_pitch
  84              		.align	2
  87              	I_pitch:
  88 0018 CDCC4C3E 		.word	1045220557
  89              		.global	D_pitch
  90              		.align	2
  93              	D_pitch:
  94 001c 9A99D93F 		.word	1071225242
  95              		.global	N_pitch
  96              		.align	2
  99              	N_pitch:
 100 0020 0000C843 		.word	1137180672
 101              		.global	P_yaw
 102              		.align	2
 105              	P_yaw:
 106 0024 00004843 		.word	1128792064
 107              		.comm	a_roll,8,4
 108              		.comm	a_pitch,8,4
 109              		.comm	b_roll,12,4
 110              		.comm	b_pitch,12,4
 111              		.global	powerD
 112              		.bss
 113              		.align	2
 116              	powerD:
 117 001c 00000000 		.space	4
 118              		.global	height_control
 121              	height_control:
 122 0020 00       		.space	1
 123              		.global	yawD_dot
 124 0021 000000   		.align	2
 127              	yawD_dot:
 128 0024 00000000 		.space	4
 129              		.global	pitchD
 130              		.align	2
 133              	pitchD:
 134 0028 00000000 		.space	4
 135              		.global	rollD
 136              		.align	2
 139              	rollD:
 140 002c 00000000 		.space	4
 141              		.comm	YPR,12,4
 142              		.comm	sensorData,12,4
 143              		.global	pressure
 144              		.align	2
 147              	pressure:
 148 0030 00000000 		.space	4
 149              		.global	temperature
 150              		.align	2
 153              	temperature:
 154 0034 00000000 		.space	4
 155              		.comm	PressureFIR,56,4
 156              		.global	TxBuffer
 157              		.align	2
 160              	TxBuffer:
 161 0038 00000000 		.space	100
 161      00000000 
 161      00000000 
 161      00000000 
 161      00000000 
 162              		.comm	c,100,4
 163              		.global	VBat
 164              		.align	2
 167              	VBat:
 168 009c 00000000 		.space	4
 169              		.global	sendMag
 172              	sendMag:
 173 00a0 00       		.space	1
 174              		.global	counter_main
 175 00a1 00       		.align	1
 178              	counter_main:
 179 00a2 0000     		.space	2
 180              		.global	MonitorBuffer
 181              		.align	2
 184              	MonitorBuffer:
 185 00a4 00000000 		.space	14
 185      00000000 
 185      00000000 
 185      0000
 186              		.global	MotorRunning
 189              	MotorRunning:
 190 00b2 00       		.space	1
 191              		.global	ground_pressure
 192 00b3 00       		.align	2
 195              	ground_pressure:
 196 00b4 00000000 		.space	4
 197              		.global	ground_temperature
 198              		.align	2
 201              	ground_temperature:
 202 00b8 00000000 		.space	4
 203              		.global	alt
 204              		.align	2
 207              	alt:
 208 00bc 00000000 		.space	4
 209              		.global	alt_ctrl_cnt
 210              		.align	2
 213              	alt_ctrl_cnt:
 214 00c0 00000000 		.space	4
 215              		.global	__aeabi_f2d
 216              		.global	__aeabi_ddiv
 217              		.global	__aeabi_dmul
 218              		.global	__aeabi_d2uiz
 219              		.section	.text.CCU40_1_IRQHandler,"ax",%progbits
 220              		.align	2
 221              		.global	CCU40_1_IRQHandler
 222              		.thumb
 223              		.thumb_func
 225              	CCU40_1_IRQHandler:
 226              	.LFB153:
 227              		.file 1 "../Main.c"
   1:../Main.c     **** /*
   2:../Main.c     ****  * Main.c
   3:../Main.c     ****  *
   4:../Main.c     ****  *  Created on: 25.12.2014
   5:../Main.c     ****  *      Author: Andreas
   6:../Main.c     ****  */
   7:../Main.c     **** 
   8:../Main.c     **** //----------------------------------------------------------------------------
   9:../Main.c     **** //
  10:../Main.c     **** //					LARIX Flight Controller Software with DPS310
  11:../Main.c     **** //				(compatible with Flight Controller App V2.0 or higher)
  12:../Main.c     **** //
  13:../Main.c     **** //----------------------------------------------------------------------------
  14:../Main.c     **** //
  15:../Main.c     **** //		Default Mode: RC controlled with switch for Bluetooth-App Control
  16:../Main.c     **** //		(for Bluetooth only Version "#define BT_ONLY" in the RCReceive.h)
  17:../Main.c     **** //
  18:../Main.c     **** //----------------------------------------------------------------------------
  19:../Main.c     **** 
  20:../Main.c     **** //#>>>>>>>>>>
  21:../Main.c     **** //#include "_Quadrocopter/Dev/def.h"	//# user defined variables
  22:../Main.c     **** //#<<<<<<<<<<
  23:../Main.c     **** 
  24:../Main.c     **** #include <DAVE3.h>			//Declarations from DAVE3 Code Generation (includes SFR declaration)
  25:../Main.c     **** #include <limits.h>
  26:../Main.c     **** #include "_Quadrocopter/_HAL/Delay/util.h"
  27:../Main.c     **** #include "_Quadrocopter/_HAL/I2C/I2Cdev.h"
  28:../Main.c     **** #include "_Quadrocopter/Sensors/MPU9X50/MPU9150.h"
  29:../Main.c     **** #include "_Quadrocopter/Sensors/DPS310/DPS310.h"
  30:../Main.c     **** 
  31:../Main.c     **** #include "_Quadrocopter/RemoteControl/RCReceive.h"
  32:../Main.c     **** #include "_Quadrocopter/Attitude_Control/Attitudecontroller.h"
  33:../Main.c     **** #include "_Quadrocopter/DaisyChain/DaisyChain.h"
  34:../Main.c     **** 
  35:../Main.c     **** #include "_Quadrocopter/_FIR_Filter/FIR_Filter.h"
  36:../Main.c     **** 
  37:../Main.c     **** #include "_Quadrocopter/BatterySafety/BatterySafety.h"
  38:../Main.c     **** 
  39:../Main.c     **** //Define which Frame is used:
  40:../Main.c     **** //++++++++++++++++++++++++++++++++++++++++
  41:../Main.c     **** //#define Carbon
  42:../Main.c     **** #define Plexi
  43:../Main.c     **** //++++++++++++++++++++++++++++++++++++++++
  44:../Main.c     **** 
  45:../Main.c     **** 
  46:../Main.c     **** #define CONTROL_ORDER 2
  47:../Main.c     **** //Actor values
  48:../Main.c     **** float PWM_percent[] = {0.0, 0.0, 0.0, 0.0};
  49:../Main.c     **** 
  50:../Main.c     **** float x_pitch[CONTROL_ORDER];
  51:../Main.c     **** float x_roll[CONTROL_ORDER];
  52:../Main.c     **** 
  53:../Main.c     **** float u_yaw_dot = 0.0;
  54:../Main.c     **** float u_pitch = 0.0;
  55:../Main.c     **** float u_roll = 0.0;
  56:../Main.c     **** //------------------------------------------------------------------------
  57:../Main.c     **** //Controllerparamter for Carbon
  58:../Main.c     **** #ifdef Carbon
  59:../Main.c     **** const float T=0.002;
  60:../Main.c     **** const float P_roll = 125.0;		//for Carbon: 125.0;
  61:../Main.c     **** const float I_roll = 0.0;		//for Carbon: 0.2;
  62:../Main.c     **** const float D_roll =  4.0;		//for Carbon: 4.0;
  63:../Main.c     **** const float N_roll = 400.0;		//for Carbon: 400.0;
  64:../Main.c     **** const float P_pitch = 125.0;	//for Carbon: 125.0;
  65:../Main.c     **** const float I_pitch = 0.0;		//for Carbon: 0.2;
  66:../Main.c     **** const float D_pitch = 4.0;		//for Carbon: 4.0;
  67:../Main.c     **** const float N_pitch = 400.0;	//for Carbon: 400.0;
  68:../Main.c     **** const float P_yaw = 200.0;		//for Carbon: 40.0;
  69:../Main.c     **** #endif
  70:../Main.c     **** //------------------------------------------------------------------------
  71:../Main.c     **** //Controllerparamter for Plexi
  72:../Main.c     **** #ifdef Plexi
  73:../Main.c     **** const float T=0.002;
  74:../Main.c     **** const float P_roll = 70.0;		//for Plexi: 70.0
  75:../Main.c     **** const float I_roll = 0.2;		//for Plexi: 0.2
  76:../Main.c     **** const float D_roll =  1.7;		//for Plexi: 1.7
  77:../Main.c     **** const float N_roll = 400.0;		//for Plexi: 400.0
  78:../Main.c     **** const float P_pitch = 70.0;		//for Plexi: 70.0
  79:../Main.c     **** const float I_pitch = 0.2;		//for Plexi: 0.2
  80:../Main.c     **** const float D_pitch = 1.7;		//for Plexi: 1.7
  81:../Main.c     **** const float N_pitch = 400.0;	//for Plexi: 400.0
  82:../Main.c     **** const float P_yaw = 200.0;		//for Plexi: 200.0
  83:../Main.c     **** #endif
  84:../Main.c     **** //------------------------------------------------------------------------
  85:../Main.c     **** //Controllerpolynomials
  86:../Main.c     **** float a_roll[CONTROL_ORDER];
  87:../Main.c     **** float a_pitch[CONTROL_ORDER];
  88:../Main.c     **** float b_roll[CONTROL_ORDER+1];
  89:../Main.c     **** float b_pitch[CONTROL_ORDER+1];
  90:../Main.c     **** 
  91:../Main.c     **** //Remote Control
  92:../Main.c     **** float powerD = 0.0;
  93:../Main.c     **** uint8_t height_control = 0;		// 0xFF when activated
  94:../Main.c     **** float yawD_dot = 0.0;
  95:../Main.c     **** float pitchD = 0.0;
  96:../Main.c     **** float rollD = 0.0;
  97:../Main.c     **** 
  98:../Main.c     **** float YPR[3];
  99:../Main.c     **** float sensorData[3];
 100:../Main.c     **** 
 101:../Main.c     **** //DPS3100 Pressure-Sensor
 102:../Main.c     **** float pressure = 0;
 103:../Main.c     **** float temperature = 0;
 104:../Main.c     **** struct structFIR PressureFIR;
 105:../Main.c     **** 
 106:../Main.c     **** int8_t TxBuffer[100] = { 0 };
 107:../Main.c     **** char c[100]; //for displaying data
 108:../Main.c     **** 
 109:../Main.c     **** //Battery Safety
 110:../Main.c     **** float VBat = 0;
 111:../Main.c     **** 
 112:../Main.c     **** bool sendMag = FALSE;
 113:../Main.c     **** 
 114:../Main.c     **** uint16_t counter_main=0;
 115:../Main.c     **** 
 116:../Main.c     **** int8_t MonitorBuffer[14] = {0};
 117:../Main.c     **** int8_t MotorRunning=0;
 118:../Main.c     **** 
 119:../Main.c     **** //#>>>>>>>>>>
 120:../Main.c     **** //# user defined variables
 121:../Main.c     **** float ground_pressure = 0;
 122:../Main.c     **** float ground_temperature = 0;
 123:../Main.c     **** float alt = 0;
 124:../Main.c     **** int alt_ctrl_cnt = 0;
 125:../Main.c     **** //#<<<<<<<<<<
 126:../Main.c     **** 
 127:../Main.c     **** void Monitoring_Int_Handler();
 128:../Main.c     **** 
 129:../Main.c     **** void Controller_CompareMatch_Int_Handler(void)
 130:../Main.c     **** {
 228              		.loc 1 130 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 1, uses_anonymous_args = 0
 232 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 233              	.LCFI0:
 234              		.cfi_def_cfa_offset 20
 235              		.cfi_offset 4, -20
 236              		.cfi_offset 5, -16
 237              		.cfi_offset 6, -12
 238              		.cfi_offset 7, -8
 239              		.cfi_offset 14, -4
 240 0002 85B0     		sub	sp, sp, #20
 241              	.LCFI1:
 242              		.cfi_def_cfa_offset 40
 243 0004 04AF     		add	r7, sp, #16
 244              	.LCFI2:
 245              		.cfi_def_cfa 7, 24
 131:../Main.c     **** 	GetAngles(YPR);
 246              		.loc 1 131 0
 247 0006 40F20000 		movw	r0, #:lower16:YPR
 248 000a C0F20000 		movt	r0, #:upper16:YPR
 249 000e FFF7FEFF 		bl	GetAngles
 132:../Main.c     **** 	GetRCData(&powerD, &height_control, &yawD_dot, &pitchD, &rollD);
 250              		.loc 1 132 0
 251 0012 40F20003 		movw	r3, #:lower16:rollD
 252 0016 C0F20003 		movt	r3, #:upper16:rollD
 253 001a 0093     		str	r3, [sp, #0]
 254 001c 40F20000 		movw	r0, #:lower16:powerD
 255 0020 C0F20000 		movt	r0, #:upper16:powerD
 256 0024 40F20001 		movw	r1, #:lower16:height_control
 257 0028 C0F20001 		movt	r1, #:upper16:height_control
 258 002c 40F20002 		movw	r2, #:lower16:yawD_dot
 259 0030 C0F20002 		movt	r2, #:upper16:yawD_dot
 260 0034 40F20003 		movw	r3, #:lower16:pitchD
 261 0038 C0F20003 		movt	r3, #:upper16:pitchD
 262 003c FFF7FEFF 		bl	GetRCData
 133:../Main.c     **** 	//yaw control
 134:../Main.c     **** 	AngleRateController(&yawD_dot, &YPR[0], &P_yaw, &u_yaw_dot);
 263              		.loc 1 134 0
 264 0040 40F20000 		movw	r0, #:lower16:yawD_dot
 265 0044 C0F20000 		movt	r0, #:upper16:yawD_dot
 266 0048 40F20001 		movw	r1, #:lower16:YPR
 267 004c C0F20001 		movt	r1, #:upper16:YPR
 268 0050 40F20002 		movw	r2, #:lower16:P_yaw
 269 0054 C0F20002 		movt	r2, #:upper16:P_yaw
 270 0058 40F20003 		movw	r3, #:lower16:u_yaw_dot
 271 005c C0F20003 		movt	r3, #:upper16:u_yaw_dot
 272 0060 FFF7FEFF 		bl	AngleRateController
 135:../Main.c     **** 	//pitch control
 136:../Main.c     **** 	AngleController(&pitchD, &YPR[1], CONTROL_ORDER, a_pitch, b_pitch, x_pitch, &u_pitch);
 273              		.loc 1 136 0
 274 0064 40F20003 		movw	r3, #:lower16:b_pitch
 275 0068 C0F20003 		movt	r3, #:upper16:b_pitch
 276 006c 0093     		str	r3, [sp, #0]
 277 006e 40F20003 		movw	r3, #:lower16:x_pitch
 278 0072 C0F20003 		movt	r3, #:upper16:x_pitch
 279 0076 0193     		str	r3, [sp, #4]
 280 0078 40F20003 		movw	r3, #:lower16:u_pitch
 281 007c C0F20003 		movt	r3, #:upper16:u_pitch
 282 0080 0293     		str	r3, [sp, #8]
 283 0082 40F20000 		movw	r0, #:lower16:pitchD
 284 0086 C0F20000 		movt	r0, #:upper16:pitchD
 285 008a 8549     		ldr	r1, .L7+8
 286 008c 4FF00202 		mov	r2, #2
 287 0090 40F20003 		movw	r3, #:lower16:a_pitch
 288 0094 C0F20003 		movt	r3, #:upper16:a_pitch
 289 0098 FFF7FEFF 		bl	AngleController
 137:../Main.c     **** 	//roll control
 138:../Main.c     **** 	AngleController(&rollD, &YPR[2], CONTROL_ORDER, a_roll, b_roll, x_roll, &u_roll);
 290              		.loc 1 138 0
 291 009c 40F20003 		movw	r3, #:lower16:b_roll
 292 00a0 C0F20003 		movt	r3, #:upper16:b_roll
 293 00a4 0093     		str	r3, [sp, #0]
 294 00a6 40F20003 		movw	r3, #:lower16:x_roll
 295 00aa C0F20003 		movt	r3, #:upper16:x_roll
 296 00ae 0193     		str	r3, [sp, #4]
 297 00b0 40F20003 		movw	r3, #:lower16:u_roll
 298 00b4 C0F20003 		movt	r3, #:upper16:u_roll
 299 00b8 0293     		str	r3, [sp, #8]
 300 00ba 40F20000 		movw	r0, #:lower16:rollD
 301 00be C0F20000 		movt	r0, #:upper16:rollD
 302 00c2 7849     		ldr	r1, .L7+12
 303 00c4 4FF00202 		mov	r2, #2
 304 00c8 40F20003 		movw	r3, #:lower16:a_roll
 305 00cc C0F20003 		movt	r3, #:upper16:a_roll
 306 00d0 FFF7FEFF 		bl	AngleController
 139:../Main.c     **** 
 140:../Main.c     **** 	//generate actuator values
 141:../Main.c     **** 	CreatePulseWidth(&u_roll, &u_pitch, &u_yaw_dot, &powerD, PWM_percent);
 307              		.loc 1 141 0
 308 00d4 40F20003 		movw	r3, #:lower16:PWM_percent
 309 00d8 C0F20003 		movt	r3, #:upper16:PWM_percent
 310 00dc 0093     		str	r3, [sp, #0]
 311 00de 40F20000 		movw	r0, #:lower16:u_roll
 312 00e2 C0F20000 		movt	r0, #:upper16:u_roll
 313 00e6 40F20001 		movw	r1, #:lower16:u_pitch
 314 00ea C0F20001 		movt	r1, #:upper16:u_pitch
 315 00ee 40F20002 		movw	r2, #:lower16:u_yaw_dot
 316 00f2 C0F20002 		movt	r2, #:upper16:u_yaw_dot
 317 00f6 40F20003 		movw	r3, #:lower16:powerD
 318 00fa C0F20003 		movt	r3, #:upper16:powerD
 319 00fe FFF7FEFF 		bl	CreatePulseWidth
 142:../Main.c     **** 
 143:../Main.c     **** 	if (powerD > 5.0)
 320              		.loc 1 143 0
 321 0102 40F20003 		movw	r3, #:lower16:powerD
 322 0106 C0F20003 		movt	r3, #:upper16:powerD
 323 010a 93ED007A 		flds	s14, [r3, #0]
 324 010e F1EE047A 		fconsts	s15, #20
 325 0112 B4EEE77A 		fcmpes	s14, s15
 326 0116 F1EE10FA 		fmstat
 327 011a 40F39D80 		ble	.L6
 328              	.L5:
 144:../Main.c     **** 		SendDaisyData(SET_REF_CURRENT,
 145:../Main.c     **** 			PWM_percent[2]/100.0*1279,
 329              		.loc 1 145 0
 330 011e 40F20003 		movw	r3, #:lower16:PWM_percent
 331 0122 C0F20003 		movt	r3, #:upper16:PWM_percent
 332 0126 9B68     		ldr	r3, [r3, #8]	@ float
 333 0128 1846     		mov	r0, r3	@ float
 334 012a FFF7FEFF 		bl	__aeabi_f2d
 335 012e 0246     		mov	r2, r0
 336 0130 0B46     		mov	r3, r1
 337 0132 1046     		mov	r0, r2
 338 0134 1946     		mov	r1, r3
 339 0136 4FF00002 		mov	r2, #0
 340 013a 4FF00003 		mov	r3, #0
 341 013e C4F25903 		movt	r3, 16473
 342 0142 FFF7FEFF 		bl	__aeabi_ddiv
 343 0146 0246     		mov	r2, r0
 344 0148 0B46     		mov	r3, r1
 345 014a 1046     		mov	r0, r2
 346 014c 1946     		mov	r1, r3
 347 014e 52A3     		adr	r3, .L7
 348 0150 D3E90023 		ldrd	r2, [r3]
 349 0154 FFF7FEFF 		bl	__aeabi_dmul
 350 0158 0246     		mov	r2, r0
 351 015a 0B46     		mov	r3, r1
 144:../Main.c     **** 		SendDaisyData(SET_REF_CURRENT,
 352              		.loc 1 144 0
 353 015c 1046     		mov	r0, r2
 354 015e 1946     		mov	r1, r3
 355 0160 FFF7FEFF 		bl	__aeabi_d2uiz
 356 0164 0346     		mov	r3, r0
 357 0166 9EB2     		uxth	r6, r3
 146:../Main.c     **** 			PWM_percent[0]/100.0*1279,
 358              		.loc 1 146 0
 359 0168 40F20003 		movw	r3, #:lower16:PWM_percent
 360 016c C0F20003 		movt	r3, #:upper16:PWM_percent
 361 0170 1B68     		ldr	r3, [r3, #0]	@ float
 362 0172 1846     		mov	r0, r3	@ float
 363 0174 FFF7FEFF 		bl	__aeabi_f2d
 364 0178 0246     		mov	r2, r0
 365 017a 0B46     		mov	r3, r1
 366 017c 1046     		mov	r0, r2
 367 017e 1946     		mov	r1, r3
 368 0180 4FF00002 		mov	r2, #0
 369 0184 4FF00003 		mov	r3, #0
 370 0188 C4F25903 		movt	r3, 16473
 371 018c FFF7FEFF 		bl	__aeabi_ddiv
 372 0190 0246     		mov	r2, r0
 373 0192 0B46     		mov	r3, r1
 374 0194 1046     		mov	r0, r2
 375 0196 1946     		mov	r1, r3
 376 0198 3FA3     		adr	r3, .L7
 377 019a D3E90023 		ldrd	r2, [r3]
 378 019e FFF7FEFF 		bl	__aeabi_dmul
 379 01a2 0246     		mov	r2, r0
 380 01a4 0B46     		mov	r3, r1
 144:../Main.c     **** 		SendDaisyData(SET_REF_CURRENT,
 381              		.loc 1 144 0
 382 01a6 1046     		mov	r0, r2
 383 01a8 1946     		mov	r1, r3
 384 01aa FFF7FEFF 		bl	__aeabi_d2uiz
 385 01ae 0346     		mov	r3, r0
 386 01b0 9DB2     		uxth	r5, r3
 147:../Main.c     **** 			PWM_percent[1]/100.0*1279,
 387              		.loc 1 147 0
 388 01b2 40F20003 		movw	r3, #:lower16:PWM_percent
 389 01b6 C0F20003 		movt	r3, #:upper16:PWM_percent
 390 01ba 5B68     		ldr	r3, [r3, #4]	@ float
 391 01bc 1846     		mov	r0, r3	@ float
 392 01be FFF7FEFF 		bl	__aeabi_f2d
 393 01c2 0246     		mov	r2, r0
 394 01c4 0B46     		mov	r3, r1
 395 01c6 1046     		mov	r0, r2
 396 01c8 1946     		mov	r1, r3
 397 01ca 4FF00002 		mov	r2, #0
 398 01ce 4FF00003 		mov	r3, #0
 399 01d2 C4F25903 		movt	r3, 16473
 400 01d6 FFF7FEFF 		bl	__aeabi_ddiv
 401 01da 0246     		mov	r2, r0
 402 01dc 0B46     		mov	r3, r1
 403 01de 1046     		mov	r0, r2
 404 01e0 1946     		mov	r1, r3
 405 01e2 2DA3     		adr	r3, .L7
 406 01e4 D3E90023 		ldrd	r2, [r3]
 407 01e8 FFF7FEFF 		bl	__aeabi_dmul
 408 01ec 0246     		mov	r2, r0
 409 01ee 0B46     		mov	r3, r1
 144:../Main.c     **** 		SendDaisyData(SET_REF_CURRENT,
 410              		.loc 1 144 0
 411 01f0 1046     		mov	r0, r2
 412 01f2 1946     		mov	r1, r3
 413 01f4 FFF7FEFF 		bl	__aeabi_d2uiz
 414 01f8 0346     		mov	r3, r0
 415 01fa 9CB2     		uxth	r4, r3
 148:../Main.c     **** 			PWM_percent[3]/100.0*1279);
 416              		.loc 1 148 0
 417 01fc 40F20003 		movw	r3, #:lower16:PWM_percent
 418 0200 C0F20003 		movt	r3, #:upper16:PWM_percent
 419 0204 DB68     		ldr	r3, [r3, #12]	@ float
 420 0206 1846     		mov	r0, r3	@ float
 421 0208 FFF7FEFF 		bl	__aeabi_f2d
 422 020c 0246     		mov	r2, r0
 423 020e 0B46     		mov	r3, r1
 424 0210 1046     		mov	r0, r2
 425 0212 1946     		mov	r1, r3
 426 0214 4FF00002 		mov	r2, #0
 427 0218 4FF00003 		mov	r3, #0
 428 021c C4F25903 		movt	r3, 16473
 429 0220 FFF7FEFF 		bl	__aeabi_ddiv
 430 0224 0246     		mov	r2, r0
 431 0226 0B46     		mov	r3, r1
 432 0228 1046     		mov	r0, r2
 433 022a 1946     		mov	r1, r3
 434 022c 1AA3     		adr	r3, .L7
 435 022e D3E90023 		ldrd	r2, [r3]
 436 0232 FFF7FEFF 		bl	__aeabi_dmul
 437 0236 0246     		mov	r2, r0
 438 0238 0B46     		mov	r3, r1
 144:../Main.c     **** 		SendDaisyData(SET_REF_CURRENT,
 439              		.loc 1 144 0
 440 023a 1046     		mov	r0, r2
 441 023c 1946     		mov	r1, r3
 442 023e FFF7FEFF 		bl	__aeabi_d2uiz
 443 0242 0346     		mov	r3, r0
 444 0244 9BB2     		uxth	r3, r3
 445 0246 0093     		str	r3, [sp, #0]
 446 0248 4FF02200 		mov	r0, #34
 447 024c 3146     		mov	r1, r6
 448 024e 2A46     		mov	r2, r5
 449 0250 2346     		mov	r3, r4
 450 0252 FFF7FEFF 		bl	SendDaisyData
 451 0256 0CE0     		b	.L4
 452              	.L6:
 149:../Main.c     **** 	else
 150:../Main.c     **** 		SendDaisyData(STOP_MOTOR,0,0,0,0);
 453              		.loc 1 150 0
 454 0258 4FF00003 		mov	r3, #0
 455 025c 0093     		str	r3, [sp, #0]
 456 025e 4FF00B00 		mov	r0, #11
 457 0262 4FF00001 		mov	r1, #0
 458 0266 4FF00002 		mov	r2, #0
 459 026a 4FF00003 		mov	r3, #0
 460 026e FFF7FEFF 		bl	SendDaisyData
 461              	.L4:
 151:../Main.c     **** 
 152:../Main.c     **** 	counter_main++;
 462              		.loc 1 152 0
 463 0272 40F20003 		movw	r3, #:lower16:counter_main
 464 0276 C0F20003 		movt	r3, #:upper16:counter_main
 465 027a 1B88     		ldrh	r3, [r3, #0]
 466 027c 03F10103 		add	r3, r3, #1
 467 0280 9AB2     		uxth	r2, r3
 468 0282 40F20003 		movw	r3, #:lower16:counter_main
 469 0286 C0F20003 		movt	r3, #:upper16:counter_main
 470 028a 1A80     		strh	r2, [r3, #0]	@ movhi
 153:../Main.c     **** }
 471              		.loc 1 153 0
 472 028c 07F10407 		add	r7, r7, #4
 473 0290 BD46     		mov	sp, r7
 474 0292 F0BD     		pop	{r4, r5, r6, r7, pc}
 475              	.L8:
 476 0294 AFF30080 		.align	3
 477              	.L7:
 478 0298 00000000 		.word	0
 479 029c 00FC9340 		.word	1083440128
 480 02a0 04000000 		.word	YPR+4
 481 02a4 08000000 		.word	YPR+8
 482              		.cfi_endproc
 483              	.LFE153:
 485              		.section	.text.Initialize,"ax",%progbits
 486              		.align	2
 487              		.global	Initialize
 488              		.thumb
 489              		.thumb_func
 491              	Initialize:
 492              	.LFB154:
 154:../Main.c     **** 
 155:../Main.c     **** void Initialize()
 156:../Main.c     **** {
 493              		.loc 1 156 0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 56
 496              		@ frame_needed = 1, uses_anonymous_args = 0
 497 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 498              	.LCFI3:
 499              		.cfi_def_cfa_offset 24
 500              		.cfi_offset 4, -24
 501              		.cfi_offset 5, -20
 502              		.cfi_offset 6, -16
 503              		.cfi_offset 7, -12
 504              		.cfi_offset 8, -8
 505              		.cfi_offset 14, -4
 506 0004 9AB0     		sub	sp, sp, #104
 507              	.LCFI4:
 508              		.cfi_def_cfa_offset 128
 509 0006 0CAF     		add	r7, sp, #48
 510              	.LCFI5:
 511              		.cfi_def_cfa 7, 80
 157:../Main.c     **** 
 158:../Main.c     **** 	initBluetoothStorage();
 512              		.loc 1 158 0
 513 0008 FFF7FEFF 		bl	initBluetoothStorage
 159:../Main.c     **** 	delay(1000);
 514              		.loc 1 159 0
 515 000c 4FF47A70 		mov	r0, #1000
 516 0010 FFF7FEFF 		bl	delay
 160:../Main.c     ****     // initialize device
 161:../Main.c     **** 	MPU9150_Setup();
 517              		.loc 1 161 0
 518 0014 FFF7FEFF 		bl	MPU9150_Setup
 162:../Main.c     **** 	delay(1000);
 519              		.loc 1 162 0
 520 0018 4FF47A70 		mov	r0, #1000
 521 001c FFF7FEFF 		bl	delay
 163:../Main.c     **** 
 164:../Main.c     ****     // initilize controller polynomials
 165:../Main.c     **** 	b_roll[0]=P_roll-I_roll*T-P_roll*N_roll*T+N_roll*I_roll*T*T+D_roll*N_roll;
 522              		.loc 1 165 0
 523 0020 40F20003 		movw	r3, #:lower16:P_roll
 524 0024 C0F20003 		movt	r3, #:upper16:P_roll
 525 0028 93ED007A 		flds	s14, [r3, #0]
 526 002c 40F20003 		movw	r3, #:lower16:I_roll
 527 0030 C0F20003 		movt	r3, #:upper16:I_roll
 528 0034 D3ED006A 		flds	s13, [r3, #0]
 529 0038 40F20003 		movw	r3, #:lower16:T
 530 003c C0F20003 		movt	r3, #:upper16:T
 531 0040 D3ED007A 		flds	s15, [r3, #0]
 532 0044 66EEA77A 		fmuls	s15, s13, s15
 533 0048 37EE677A 		fsubs	s14, s14, s15
 534 004c 40F20003 		movw	r3, #:lower16:P_roll
 535 0050 C0F20003 		movt	r3, #:upper16:P_roll
 536 0054 D3ED006A 		flds	s13, [r3, #0]
 537 0058 40F20003 		movw	r3, #:lower16:N_roll
 538 005c C0F20003 		movt	r3, #:upper16:N_roll
 539 0060 D3ED007A 		flds	s15, [r3, #0]
 540 0064 66EEA76A 		fmuls	s13, s13, s15
 541 0068 40F20003 		movw	r3, #:lower16:T
 542 006c C0F20003 		movt	r3, #:upper16:T
 543 0070 D3ED007A 		flds	s15, [r3, #0]
 544 0074 66EEA77A 		fmuls	s15, s13, s15
 545 0078 37EE677A 		fsubs	s14, s14, s15
 546 007c 40F20003 		movw	r3, #:lower16:N_roll
 547 0080 C0F20003 		movt	r3, #:upper16:N_roll
 548 0084 D3ED006A 		flds	s13, [r3, #0]
 549 0088 40F20003 		movw	r3, #:lower16:I_roll
 550 008c C0F20003 		movt	r3, #:upper16:I_roll
 551 0090 D3ED007A 		flds	s15, [r3, #0]
 552 0094 66EEA76A 		fmuls	s13, s13, s15
 553 0098 40F20003 		movw	r3, #:lower16:T
 554 009c C0F20003 		movt	r3, #:upper16:T
 555 00a0 D3ED007A 		flds	s15, [r3, #0]
 556 00a4 66EEA76A 		fmuls	s13, s13, s15
 557 00a8 40F20003 		movw	r3, #:lower16:T
 558 00ac C0F20003 		movt	r3, #:upper16:T
 559 00b0 D3ED007A 		flds	s15, [r3, #0]
 560 00b4 66EEA77A 		fmuls	s15, s13, s15
 561 00b8 37EE277A 		fadds	s14, s14, s15
 562 00bc 40F20003 		movw	r3, #:lower16:D_roll
 563 00c0 C0F20003 		movt	r3, #:upper16:D_roll
 564 00c4 D3ED006A 		flds	s13, [r3, #0]
 565 00c8 40F20003 		movw	r3, #:lower16:N_roll
 566 00cc C0F20003 		movt	r3, #:upper16:N_roll
 567 00d0 D3ED007A 		flds	s15, [r3, #0]
 568 00d4 66EEA77A 		fmuls	s15, s13, s15
 569 00d8 77EE277A 		fadds	s15, s14, s15
 570 00dc 40F20003 		movw	r3, #:lower16:b_roll
 571 00e0 C0F20003 		movt	r3, #:upper16:b_roll
 572 00e4 C3ED007A 		fsts	s15, [r3, #0]
 166:../Main.c     **** 	b_roll[1]=I_roll*T-2*P_roll+P_roll*N_roll*T-2*D_roll*N_roll;
 573              		.loc 1 166 0
 574 00e8 40F20003 		movw	r3, #:lower16:I_roll
 575 00ec C0F20003 		movt	r3, #:upper16:I_roll
 576 00f0 93ED007A 		flds	s14, [r3, #0]
 577 00f4 40F20003 		movw	r3, #:lower16:T
 578 00f8 C0F20003 		movt	r3, #:upper16:T
 579 00fc D3ED007A 		flds	s15, [r3, #0]
 580 0100 27EE277A 		fmuls	s14, s14, s15
 581 0104 40F20003 		movw	r3, #:lower16:P_roll
 582 0108 C0F20003 		movt	r3, #:upper16:P_roll
 583 010c D3ED007A 		flds	s15, [r3, #0]
 584 0110 77EEA77A 		fadds	s15, s15, s15
 585 0114 37EE677A 		fsubs	s14, s14, s15
 586 0118 40F20003 		movw	r3, #:lower16:P_roll
 587 011c C0F20003 		movt	r3, #:upper16:P_roll
 588 0120 D3ED006A 		flds	s13, [r3, #0]
 589 0124 40F20003 		movw	r3, #:lower16:N_roll
 590 0128 C0F20003 		movt	r3, #:upper16:N_roll
 591 012c D3ED007A 		flds	s15, [r3, #0]
 592 0130 66EEA76A 		fmuls	s13, s13, s15
 593 0134 40F20003 		movw	r3, #:lower16:T
 594 0138 C0F20003 		movt	r3, #:upper16:T
 595 013c D3ED007A 		flds	s15, [r3, #0]
 596 0140 66EEA77A 		fmuls	s15, s13, s15
 597 0144 37EE277A 		fadds	s14, s14, s15
 598 0148 40F20003 		movw	r3, #:lower16:D_roll
 599 014c C0F20003 		movt	r3, #:upper16:D_roll
 600 0150 D3ED007A 		flds	s15, [r3, #0]
 601 0154 77EEA76A 		fadds	s13, s15, s15
 602 0158 40F20003 		movw	r3, #:lower16:N_roll
 603 015c C0F20003 		movt	r3, #:upper16:N_roll
 604 0160 D3ED007A 		flds	s15, [r3, #0]
 605 0164 66EEA77A 		fmuls	s15, s13, s15
 606 0168 77EE677A 		fsubs	s15, s14, s15
 607 016c 40F20003 		movw	r3, #:lower16:b_roll
 608 0170 C0F20003 		movt	r3, #:upper16:b_roll
 609 0174 C3ED017A 		fsts	s15, [r3, #4]
 167:../Main.c     **** 	b_roll[2]=P_roll+D_roll*N_roll;
 610              		.loc 1 167 0
 611 0178 40F20003 		movw	r3, #:lower16:D_roll
 612 017c C0F20003 		movt	r3, #:upper16:D_roll
 613 0180 93ED007A 		flds	s14, [r3, #0]
 614 0184 40F20003 		movw	r3, #:lower16:N_roll
 615 0188 C0F20003 		movt	r3, #:upper16:N_roll
 616 018c D3ED007A 		flds	s15, [r3, #0]
 617 0190 27EE277A 		fmuls	s14, s14, s15
 618 0194 40F20003 		movw	r3, #:lower16:P_roll
 619 0198 C0F20003 		movt	r3, #:upper16:P_roll
 620 019c D3ED007A 		flds	s15, [r3, #0]
 621 01a0 77EE277A 		fadds	s15, s14, s15
 622 01a4 40F20003 		movw	r3, #:lower16:b_roll
 623 01a8 C0F20003 		movt	r3, #:upper16:b_roll
 624 01ac C3ED027A 		fsts	s15, [r3, #8]
 168:../Main.c     **** 	a_roll[0]=1-N_roll*T;
 625              		.loc 1 168 0
 626 01b0 40F20003 		movw	r3, #:lower16:N_roll
 627 01b4 C0F20003 		movt	r3, #:upper16:N_roll
 628 01b8 93ED007A 		flds	s14, [r3, #0]
 629 01bc 40F20003 		movw	r3, #:lower16:T
 630 01c0 C0F20003 		movt	r3, #:upper16:T
 631 01c4 D3ED007A 		flds	s15, [r3, #0]
 632 01c8 67EE277A 		fmuls	s15, s14, s15
 633 01cc B7EE007A 		fconsts	s14, #112
 634 01d0 77EE677A 		fsubs	s15, s14, s15
 635 01d4 40F20003 		movw	r3, #:lower16:a_roll
 636 01d8 C0F20003 		movt	r3, #:upper16:a_roll
 637 01dc C3ED007A 		fsts	s15, [r3, #0]
 169:../Main.c     **** 	a_roll[1]=N_roll*T-2;
 638              		.loc 1 169 0
 639 01e0 40F20003 		movw	r3, #:lower16:N_roll
 640 01e4 C0F20003 		movt	r3, #:upper16:N_roll
 641 01e8 93ED007A 		flds	s14, [r3, #0]
 642 01ec 40F20003 		movw	r3, #:lower16:T
 643 01f0 C0F20003 		movt	r3, #:upper16:T
 644 01f4 D3ED007A 		flds	s15, [r3, #0]
 645 01f8 27EE277A 		fmuls	s14, s14, s15
 646 01fc F0EE007A 		fconsts	s15, #0
 647 0200 77EE677A 		fsubs	s15, s14, s15
 648 0204 40F20003 		movw	r3, #:lower16:a_roll
 649 0208 C0F20003 		movt	r3, #:upper16:a_roll
 650 020c C3ED017A 		fsts	s15, [r3, #4]
 170:../Main.c     **** 
 171:../Main.c     **** 	b_pitch[0]=P_pitch-I_pitch*T-P_pitch*N_pitch*T+N_pitch*I_pitch*T*T+D_pitch*N_pitch;
 651              		.loc 1 171 0
 652 0210 40F20003 		movw	r3, #:lower16:P_pitch
 653 0214 C0F20003 		movt	r3, #:upper16:P_pitch
 654 0218 93ED007A 		flds	s14, [r3, #0]
 655 021c 40F20003 		movw	r3, #:lower16:I_pitch
 656 0220 C0F20003 		movt	r3, #:upper16:I_pitch
 657 0224 D3ED006A 		flds	s13, [r3, #0]
 658 0228 40F20003 		movw	r3, #:lower16:T
 659 022c C0F20003 		movt	r3, #:upper16:T
 660 0230 D3ED007A 		flds	s15, [r3, #0]
 661 0234 66EEA77A 		fmuls	s15, s13, s15
 662 0238 37EE677A 		fsubs	s14, s14, s15
 663 023c 40F20003 		movw	r3, #:lower16:P_pitch
 664 0240 C0F20003 		movt	r3, #:upper16:P_pitch
 665 0244 D3ED006A 		flds	s13, [r3, #0]
 666 0248 40F20003 		movw	r3, #:lower16:N_pitch
 667 024c C0F20003 		movt	r3, #:upper16:N_pitch
 668 0250 D3ED007A 		flds	s15, [r3, #0]
 669 0254 66EEA76A 		fmuls	s13, s13, s15
 670 0258 40F20003 		movw	r3, #:lower16:T
 671 025c C0F20003 		movt	r3, #:upper16:T
 672 0260 D3ED007A 		flds	s15, [r3, #0]
 673 0264 66EEA77A 		fmuls	s15, s13, s15
 674 0268 37EE677A 		fsubs	s14, s14, s15
 675 026c 40F20003 		movw	r3, #:lower16:N_pitch
 676 0270 C0F20003 		movt	r3, #:upper16:N_pitch
 677 0274 D3ED006A 		flds	s13, [r3, #0]
 678 0278 40F20003 		movw	r3, #:lower16:I_pitch
 679 027c C0F20003 		movt	r3, #:upper16:I_pitch
 680 0280 D3ED007A 		flds	s15, [r3, #0]
 681 0284 66EEA76A 		fmuls	s13, s13, s15
 682 0288 40F20003 		movw	r3, #:lower16:T
 683 028c C0F20003 		movt	r3, #:upper16:T
 684 0290 D3ED007A 		flds	s15, [r3, #0]
 685 0294 66EEA76A 		fmuls	s13, s13, s15
 686 0298 40F20003 		movw	r3, #:lower16:T
 687 029c C0F20003 		movt	r3, #:upper16:T
 688 02a0 D3ED007A 		flds	s15, [r3, #0]
 689 02a4 66EEA77A 		fmuls	s15, s13, s15
 690 02a8 37EE277A 		fadds	s14, s14, s15
 691 02ac 40F20003 		movw	r3, #:lower16:D_pitch
 692 02b0 C0F20003 		movt	r3, #:upper16:D_pitch
 693 02b4 D3ED006A 		flds	s13, [r3, #0]
 694 02b8 40F20003 		movw	r3, #:lower16:N_pitch
 695 02bc C0F20003 		movt	r3, #:upper16:N_pitch
 696 02c0 D3ED007A 		flds	s15, [r3, #0]
 697 02c4 66EEA77A 		fmuls	s15, s13, s15
 698 02c8 77EE277A 		fadds	s15, s14, s15
 699 02cc 40F20003 		movw	r3, #:lower16:b_pitch
 700 02d0 C0F20003 		movt	r3, #:upper16:b_pitch
 701 02d4 C3ED007A 		fsts	s15, [r3, #0]
 172:../Main.c     **** 	b_pitch[1]=I_pitch*T-2*P_pitch+P_pitch*N_pitch*T-2*D_pitch*N_pitch;
 702              		.loc 1 172 0
 703 02d8 40F20003 		movw	r3, #:lower16:I_pitch
 704 02dc C0F20003 		movt	r3, #:upper16:I_pitch
 705 02e0 93ED007A 		flds	s14, [r3, #0]
 706 02e4 40F20003 		movw	r3, #:lower16:T
 707 02e8 C0F20003 		movt	r3, #:upper16:T
 708 02ec D3ED007A 		flds	s15, [r3, #0]
 709 02f0 27EE277A 		fmuls	s14, s14, s15
 710 02f4 40F20003 		movw	r3, #:lower16:P_pitch
 711 02f8 C0F20003 		movt	r3, #:upper16:P_pitch
 712 02fc D3ED007A 		flds	s15, [r3, #0]
 713 0300 77EEA77A 		fadds	s15, s15, s15
 714 0304 37EE677A 		fsubs	s14, s14, s15
 715 0308 40F20003 		movw	r3, #:lower16:P_pitch
 716 030c C0F20003 		movt	r3, #:upper16:P_pitch
 717 0310 D3ED006A 		flds	s13, [r3, #0]
 718 0314 40F20003 		movw	r3, #:lower16:N_pitch
 719 0318 C0F20003 		movt	r3, #:upper16:N_pitch
 720 031c D3ED007A 		flds	s15, [r3, #0]
 721 0320 66EEA76A 		fmuls	s13, s13, s15
 722 0324 40F20003 		movw	r3, #:lower16:T
 723 0328 C0F20003 		movt	r3, #:upper16:T
 724 032c D3ED007A 		flds	s15, [r3, #0]
 725 0330 66EEA77A 		fmuls	s15, s13, s15
 726 0334 37EE277A 		fadds	s14, s14, s15
 727 0338 40F20003 		movw	r3, #:lower16:D_pitch
 728 033c C0F20003 		movt	r3, #:upper16:D_pitch
 729 0340 D3ED007A 		flds	s15, [r3, #0]
 730 0344 77EEA76A 		fadds	s13, s15, s15
 731 0348 40F20003 		movw	r3, #:lower16:N_pitch
 732 034c C0F20003 		movt	r3, #:upper16:N_pitch
 733 0350 D3ED007A 		flds	s15, [r3, #0]
 734 0354 66EEA77A 		fmuls	s15, s13, s15
 735 0358 77EE677A 		fsubs	s15, s14, s15
 736 035c 40F20003 		movw	r3, #:lower16:b_pitch
 737 0360 C0F20003 		movt	r3, #:upper16:b_pitch
 738 0364 C3ED017A 		fsts	s15, [r3, #4]
 173:../Main.c     **** 	b_pitch[2]=P_pitch+D_pitch*N_pitch;
 739              		.loc 1 173 0
 740 0368 40F20003 		movw	r3, #:lower16:D_pitch
 741 036c C0F20003 		movt	r3, #:upper16:D_pitch
 742 0370 93ED007A 		flds	s14, [r3, #0]
 743 0374 40F20003 		movw	r3, #:lower16:N_pitch
 744 0378 C0F20003 		movt	r3, #:upper16:N_pitch
 745 037c D3ED007A 		flds	s15, [r3, #0]
 746 0380 27EE277A 		fmuls	s14, s14, s15
 747 0384 40F20003 		movw	r3, #:lower16:P_pitch
 748 0388 C0F20003 		movt	r3, #:upper16:P_pitch
 749 038c D3ED007A 		flds	s15, [r3, #0]
 750 0390 77EE277A 		fadds	s15, s14, s15
 751 0394 40F20003 		movw	r3, #:lower16:b_pitch
 752 0398 C0F20003 		movt	r3, #:upper16:b_pitch
 753 039c C3ED027A 		fsts	s15, [r3, #8]
 174:../Main.c     **** 	a_pitch[0]=1-N_pitch*T;
 754              		.loc 1 174 0
 755 03a0 40F20003 		movw	r3, #:lower16:N_pitch
 756 03a4 C0F20003 		movt	r3, #:upper16:N_pitch
 757 03a8 93ED007A 		flds	s14, [r3, #0]
 758 03ac 40F20003 		movw	r3, #:lower16:T
 759 03b0 C0F20003 		movt	r3, #:upper16:T
 760 03b4 D3ED007A 		flds	s15, [r3, #0]
 761 03b8 67EE277A 		fmuls	s15, s14, s15
 762 03bc B7EE007A 		fconsts	s14, #112
 763 03c0 77EE677A 		fsubs	s15, s14, s15
 764 03c4 40F20003 		movw	r3, #:lower16:a_pitch
 765 03c8 C0F20003 		movt	r3, #:upper16:a_pitch
 766 03cc C3ED007A 		fsts	s15, [r3, #0]
 175:../Main.c     **** 	a_pitch[1]=N_pitch*T-2;
 767              		.loc 1 175 0
 768 03d0 40F20003 		movw	r3, #:lower16:N_pitch
 769 03d4 C0F20003 		movt	r3, #:upper16:N_pitch
 770 03d8 93ED007A 		flds	s14, [r3, #0]
 771 03dc 40F20003 		movw	r3, #:lower16:T
 772 03e0 C0F20003 		movt	r3, #:upper16:T
 773 03e4 D3ED007A 		flds	s15, [r3, #0]
 774 03e8 27EE277A 		fmuls	s14, s14, s15
 775 03ec F0EE007A 		fconsts	s15, #0
 776 03f0 77EE677A 		fsubs	s15, s14, s15
 777 03f4 40F20003 		movw	r3, #:lower16:a_pitch
 778 03f8 C0F20003 		movt	r3, #:upper16:a_pitch
 779 03fc C3ED017A 		fsts	s15, [r3, #4]
 176:../Main.c     **** 
 177:../Main.c     **** 	WatchRC_Init(); //Initialize RC watchdog
 780              		.loc 1 177 0
 781 0400 FFF7FEFF 		bl	WatchRC_Init
 178:../Main.c     **** 
 179:../Main.c     **** 	//initialize DPS310
 180:../Main.c     **** 	setupDPS310();
 782              		.loc 1 180 0
 783 0404 FFF7FEFF 		bl	setupDPS310
 181:../Main.c     **** 	getCoefficients();
 784              		.loc 1 181 0
 785 0408 FFF7FEFF 		bl	getCoefficients
 182:../Main.c     **** 
 183:../Main.c     **** 	//initialize FIR Filter
 184:../Main.c     **** 	PressureFIR = Initialize_FIR_Filter(PressureFIR, MOVING_AVERAGE);
 786              		.loc 1 184 0
 787 040c 40F20008 		movw	r8, #:lower16:PressureFIR
 788 0410 C0F20008 		movt	r8, #:upper16:PressureFIR
 789 0414 BE46     		mov	lr, r7
 790 0416 40F20006 		movw	r6, #:lower16:PressureFIR
 791 041a C0F20006 		movt	r6, #:upper16:PressureFIR
 792 041e 4FF00003 		mov	r3, #0
 793 0422 0B93     		str	r3, [sp, #44]
 794 0424 6C46     		mov	r4, sp
 795 0426 06F10C05 		add	r5, r6, #12
 796 042a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 797 042c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 798 042e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 799 0430 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 800 0432 95E80700 		ldmia	r5, {r0, r1, r2}
 801 0436 84E80700 		stmia	r4, {r0, r1, r2}
 802 043a 96E80E00 		ldmia	r6, {r1, r2, r3}
 803 043e 7046     		mov	r0, lr
 804 0440 FFF7FEFF 		bl	Initialize_FIR_Filter
 805 0444 4446     		mov	r4, r8
 806 0446 3D46     		mov	r5, r7
 807 0448 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 808 044a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 809 044c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 810 044e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 811 0450 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 812 0452 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 813 0454 95E80300 		ldmia	r5, {r0, r1}
 814 0458 84E80300 		stmia	r4, {r0, r1}
 185:../Main.c     **** 	//#>>>>>>>>>>
 186:../Main.c     **** 	//# record ground pressure and temperature
 187:../Main.c     **** 	/*
 188:../Main.c     **** 	int gnd_cnt = 0;
 189:../Main.c     **** 	do {
 190:../Main.c     **** 		ground_pressure = pressure;
 191:../Main.c     **** 		ground_temperature = temperature;
 192:../Main.c     **** 		delay(100);
 193:../Main.c     **** 		//if(gnd_cnt++ > 10) break;
 194:../Main.c     **** 	} while(!(pressure > 90000 && pressure < 100000) || !(temperature > 0 && temperature < 50));
 195:../Main.c     **** 	*/
 196:../Main.c     **** 	//#<<<<<<<<<<
 197:../Main.c     **** 
 198:../Main.c     **** 	delay(2000);
 815              		.loc 1 198 0
 816 045c 4FF4FA60 		mov	r0, #2000
 817 0460 FFF7FEFF 		bl	delay
 199:../Main.c     **** 	//#>>>>>>>>>>
 200:../Main.c     **** 	//ground_pressure = pressure;
 201:../Main.c     **** 	//ground_temperature = temperature;
 202:../Main.c     **** 	//PWMSP001_Start(&PWMSP001_Handle4);
 203:../Main.c     **** 	//#<<<<<<<<<<
 204:../Main.c     **** 
 205:../Main.c     **** 	PWMSP001_Start(&PWMSP001_Handle0);
 818              		.loc 1 205 0
 819 0464 40F20000 		movw	r0, #:lower16:PWMSP001_Handle0
 820 0468 C0F20000 		movt	r0, #:upper16:PWMSP001_Handle0
 821 046c FFF7FEFF 		bl	PWMSP001_Start
 206:../Main.c     **** }
 822              		.loc 1 206 0
 823 0470 07F13807 		add	r7, r7, #56
 824 0474 BD46     		mov	sp, r7
 825 0476 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 826              		.cfi_endproc
 827              	.LFE154:
 829 047a 00BF     		.section	.rodata
 830              		.align	2
 831              	.LC0:
 832 0028 5468726F 		.ascii	"Throttle: %f   Rudder: %f   Elevator: %f   Aileron:"
 832      74746C65 
 832      3A202566 
 832      20202052 
 832      75646465 
 833 005b 2025660A 		.ascii	" %f\012\000"
 833      00
 834              		.align	2
 835              	.LC1:
 836 0060 593A2531 		.ascii	"Y:%1.2f P:%1.2f R:%1.2f\012\000"
 836      2E326620 
 836      503A2531 
 836      2E326620 
 836      523A2531 
 837 0079 000000   		.align	2
 838              	.LC2:
 839 007c 50574D31 		.ascii	"PWM1:%f PWM2:%f PWM3:%f PWM4:%f\012\000"
 839      3A256620 
 839      50574D32 
 839      3A256620 
 839      50574D33 
 840 009d 000000   		.align	2
 841              	.LC3:
 842 00a0 65593A25 		.ascii	"eY:%f eP:%f eR:%f\012\000"
 842      66206550 
 842      3A256620 
 842      65523A25 
 842      660A00
 843 00b3 00       		.align	2
 844              	.LC4:
 845 00b4 54696D65 		.ascii	"TimerSensor:%d TimerMain:%d TimerRC:%d\012\000"
 845      7253656E 
 845      736F723A 
 845      25642054 
 845      696D6572 
 846              		.align	2
 847              	.LC5:
 848 00dc 4779726F 		.ascii	"GyroX:%3.2f GyroY:%3.2f GyroZ:%3.2f\012\000"
 848      583A2533 
 848      2E326620 
 848      4779726F 
 848      593A2533 
 849 0101 000000   		.align	2
 850              	.LC6:
 851 0104 41636358 		.ascii	"AccX:%f AccY:%f AccZ:%f\012\000"
 851      3A256620 
 851      41636359 
 851      3A256620 
 851      4163635A 
 852 011d 000000   		.align	2
 853              	.LC7:
 854 0120 50726573 		.ascii	"Pressure:%f Temperature:%f\012\000"
 854      73757265 
 854      3A256620 
 854      54656D70 
 854      65726174 
 855              		.align	2
 856              	.LC8:
 857 013c 56426174 		.ascii	"VBat:%0.2f\012\000"
 857      3A25302E 
 857      32660A00 
 858              		.align	2
 859              	.LC9:
 860 0148 476E6420 		.ascii	"Gnd Pressure:%0.2f, Gnd Temp:%0.2f\012\000"
 860      50726573 
 860      73757265 
 860      3A25302E 
 860      32662C20 
 861              		.align	2
 862              	.LC10:
 863 016c 416C7469 		.ascii	"Altitude:%0.2f, alt_ctrl_cnt:%d\012\000"
 863      74756465 
 863      3A25302E 
 863      32662C20 
 863      616C745F 
 864              		.section	.text.main,"ax",%progbits
 865              		.align	2
 866              		.global	main
 867              		.thumb
 868              		.thumb_func
 870              	main:
 871              	.LFB155:
 207:../Main.c     **** 
 208:../Main.c     **** int main(void)
 209:../Main.c     **** {
 872              		.loc 1 209 0
 873              		.cfi_startproc
 874              		@ args = 0, pretend = 0, frame = 8
 875              		@ frame_needed = 1, uses_anonymous_args = 0
 876 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, sl, fp, lr}
 877              	.LCFI6:
 878              		.cfi_def_cfa_offset 32
 879              		.cfi_offset 4, -32
 880              		.cfi_offset 5, -28
 881              		.cfi_offset 7, -24
 882              		.cfi_offset 8, -20
 883              		.cfi_offset 9, -16
 884              		.cfi_offset 10, -12
 885              		.cfi_offset 11, -8
 886              		.cfi_offset 14, -4
 887 0004 88B0     		sub	sp, sp, #32
 888              	.LCFI7:
 889              		.cfi_def_cfa_offset 64
 890 0006 06AF     		add	r7, sp, #24
 891              	.LCFI8:
 892              		.cfi_def_cfa 7, 40
 210:../Main.c     **** 	uint16_t Bytes = 0;
 893              		.loc 1 210 0
 894 0008 4FF00003 		mov	r3, #0
 895 000c BB80     		strh	r3, [r7, #4]	@ movhi
 211:../Main.c     **** 	uint16_t nByte;
 212:../Main.c     **** //	status_t status;		// Declaration of return variable for DAVE3 APIs (toggle comment if required)
 213:../Main.c     **** 
 214:../Main.c     **** 	DAVE_Init();			// Initialization of DAVE Apps
 896              		.loc 1 214 0
 897 000e FFF7FEFF 		bl	DAVE_Init
 215:../Main.c     **** 	USBVC001_Init();		//Initialize the USB core in Device mode
 898              		.loc 1 215 0
 899 0012 FFF7FEFF 		bl	USBVC001_Init
 216:../Main.c     **** 
 217:../Main.c     **** 	Initialize();
 900              		.loc 1 217 0
 901 0016 FFF7FEFF 		bl	Initialize
 902              	.L29:
 218:../Main.c     **** 
 219:../Main.c     **** 	while(1)
 220:../Main.c     **** 	{
 221:../Main.c     **** 
 222:../Main.c     **** 	    //--------------------------------------------------------------------------------------------
 223:../Main.c     **** 		//		for serial communication (USB)
 224:../Main.c     **** 
 225:../Main.c     **** 		// Check number of bytes received
 226:../Main.c     **** 	    Bytes = USBVC001_BytesReceived();
 903              		.loc 1 226 0
 904 001a FFF7FEFF 		bl	USBVC001_BytesReceived
 905 001e 0346     		mov	r3, r0
 906 0020 BB80     		strh	r3, [r7, #4]	@ movhi
 227:../Main.c     **** 
 228:../Main.c     **** 	    if(Bytes != 0)
 907              		.loc 1 228 0
 908 0022 BB88     		ldrh	r3, [r7, #4]
 909 0024 002B     		cmp	r3, #0
 910 0026 00F08382 		beq	.L11
 229:../Main.c     **** 	    {
 230:../Main.c     **** 	    	for(nByte = 0; nByte < Bytes; nByte++)
 911              		.loc 1 230 0
 912 002a 4FF00003 		mov	r3, #0
 913 002e FB80     		strh	r3, [r7, #6]	@ movhi
 914 0030 09E0     		b	.L12
 915              	.L13:
 231:../Main.c     **** 	    	{
 232:../Main.c     **** 	    		// Receive Byte
 233:../Main.c     **** 	    		if(USBVC001_ReceiveByte(&TxBuffer[0]) != DAVEApp_SUCCESS)
 916              		.loc 1 233 0
 917 0032 40F20000 		movw	r0, #:lower16:TxBuffer
 918 0036 C0F20000 		movt	r0, #:upper16:TxBuffer
 919 003a FFF7FEFF 		bl	USBVC001_ReceiveByte
 230:../Main.c     **** 	    	for(nByte = 0; nByte < Bytes; nByte++)
 920              		.loc 1 230 0
 921 003e FB88     		ldrh	r3, [r7, #6]	@ movhi
 922 0040 03F10103 		add	r3, r3, #1
 923 0044 FB80     		strh	r3, [r7, #6]	@ movhi
 924              	.L12:
 230:../Main.c     **** 	    	for(nByte = 0; nByte < Bytes; nByte++)
 925              		.loc 1 230 0 is_stmt 0 discriminator 1
 926 0046 FA88     		ldrh	r2, [r7, #6]
 927 0048 BB88     		ldrh	r3, [r7, #4]
 928 004a 9A42     		cmp	r2, r3
 929 004c F1D3     		bcc	.L13
 234:../Main.c     **** 	    		{
 235:../Main.c     **** 	    			//Error
 236:../Main.c     **** 	    		}
 237:../Main.c     **** 	    	}
 238:../Main.c     **** 			switch(TxBuffer[0])
 930              		.loc 1 238 0 is_stmt 1
 931 004e 40F20003 		movw	r3, #:lower16:TxBuffer
 932 0052 C0F20003 		movt	r3, #:upper16:TxBuffer
 933 0056 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 934 0058 5BB2     		sxtb	r3, r3
 935 005a A3F13003 		sub	r3, r3, #48
 936 005e 322B     		cmp	r3, #50
 937 0060 00F26082 		bhi	.L14
 938 0064 01A2     		adr	r2, .L27
 939 0066 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 940 006a 00BF     		.align	2
 941              	.L27:
 942 006c 7B040000 		.word	.L15+1
 943 0070 39010000 		.word	.L16+1
 944 0074 AF010000 		.word	.L17+1
 945 0078 BD010000 		.word	.L18+1
 946 007c 1B020000 		.word	.L19+1
 947 0080 91020000 		.word	.L20+1
 948 0084 2B030000 		.word	.L21+1
 949 0088 61030000 		.word	.L22+1
 950 008c CB030000 		.word	.L23+1
 951 0090 35040000 		.word	.L24+1
 952 0094 25050000 		.word	.L14+1
 953 0098 25050000 		.word	.L14+1
 954 009c 25050000 		.word	.L14+1
 955 00a0 25050000 		.word	.L14+1
 956 00a4 25050000 		.word	.L14+1
 957 00a8 25050000 		.word	.L14+1
 958 00ac 25050000 		.word	.L14+1
 959 00b0 25050000 		.word	.L14+1
 960 00b4 25050000 		.word	.L14+1
 961 00b8 25050000 		.word	.L14+1
 962 00bc 25050000 		.word	.L14+1
 963 00c0 25050000 		.word	.L14+1
 964 00c4 25050000 		.word	.L14+1
 965 00c8 25050000 		.word	.L14+1
 966 00cc 25050000 		.word	.L14+1
 967 00d0 25050000 		.word	.L14+1
 968 00d4 25050000 		.word	.L14+1
 969 00d8 25050000 		.word	.L14+1
 970 00dc 25050000 		.word	.L14+1
 971 00e0 25050000 		.word	.L14+1
 972 00e4 25050000 		.word	.L14+1
 973 00e8 25050000 		.word	.L14+1
 974 00ec 25050000 		.word	.L14+1
 975 00f0 25050000 		.word	.L14+1
 976 00f4 25050000 		.word	.L14+1
 977 00f8 25050000 		.word	.L14+1
 978 00fc 25050000 		.word	.L14+1
 979 0100 25050000 		.word	.L14+1
 980 0104 25050000 		.word	.L14+1
 981 0108 25050000 		.word	.L14+1
 982 010c 25050000 		.word	.L14+1
 983 0110 25050000 		.word	.L14+1
 984 0114 25050000 		.word	.L14+1
 985 0118 25050000 		.word	.L14+1
 986 011c 25050000 		.word	.L14+1
 987 0120 25050000 		.word	.L14+1
 988 0124 25050000 		.word	.L14+1
 989 0128 25050000 		.word	.L14+1
 990 012c 25050000 		.word	.L14+1
 991 0130 A5040000 		.word	.L25+1
 992 0134 EB040000 		.word	.L26+1
 993              	.L16:
 239:../Main.c     **** 			{
 240:../Main.c     **** 				case '1':
 241:../Main.c     **** 					sprintf(c, "Throttle: %f   Rudder: %f   Elevator: %f   Aileron: %f\n", powerD, yawD_dot, pitch
 994              		.loc 1 241 0
 995 0138 40F20003 		movw	r3, #:lower16:powerD
 996 013c C0F20003 		movt	r3, #:upper16:powerD
 997 0140 1B68     		ldr	r3, [r3, #0]	@ float
 998 0142 1846     		mov	r0, r3	@ float
 999 0144 FFF7FEFF 		bl	__aeabi_f2d
 1000 0148 0446     		mov	r4, r0
 1001 014a 0D46     		mov	r5, r1
 1002 014c 40F20003 		movw	r3, #:lower16:yawD_dot
 1003 0150 C0F20003 		movt	r3, #:upper16:yawD_dot
 1004 0154 1B68     		ldr	r3, [r3, #0]	@ float
 1005 0156 1846     		mov	r0, r3	@ float
 1006 0158 FFF7FEFF 		bl	__aeabi_f2d
 1007 015c 8246     		mov	sl, r0
 1008 015e 8B46     		mov	fp, r1
 1009 0160 40F20003 		movw	r3, #:lower16:pitchD
 1010 0164 C0F20003 		movt	r3, #:upper16:pitchD
 1011 0168 1B68     		ldr	r3, [r3, #0]	@ float
 1012 016a 1846     		mov	r0, r3	@ float
 1013 016c FFF7FEFF 		bl	__aeabi_f2d
 1014 0170 8046     		mov	r8, r0
 1015 0172 8946     		mov	r9, r1
 1016 0174 40F20003 		movw	r3, #:lower16:rollD
 1017 0178 C0F20003 		movt	r3, #:upper16:rollD
 1018 017c 1B68     		ldr	r3, [r3, #0]	@ float
 1019 017e 1846     		mov	r0, r3	@ float
 1020 0180 FFF7FEFF 		bl	__aeabi_f2d
 1021 0184 0246     		mov	r2, r0
 1022 0186 0B46     		mov	r3, r1
 1023 0188 CDE900AB 		strd	sl, [sp]
 1024 018c CDE90289 		strd	r8, [sp, #8]
 1025 0190 CDE90423 		strd	r2, [sp, #16]
 1026 0194 40F20000 		movw	r0, #:lower16:c
 1027 0198 C0F20000 		movt	r0, #:upper16:c
 1028 019c 40F20001 		movw	r1, #:lower16:.LC0
 1029 01a0 C0F20001 		movt	r1, #:upper16:.LC0
 1030 01a4 2246     		mov	r2, r4
 1031 01a6 2B46     		mov	r3, r5
 1032 01a8 FFF7FEFF 		bl	sprintf
 242:../Main.c     **** 					break;
 1033              		.loc 1 242 0
 1034 01ac BAE1     		b	.L14
 1035              	.L17:
 243:../Main.c     **** 				case '2':
 244:../Main.c     **** 					PWMSP001_Start(&PWMSP001_Handle2);
 1036              		.loc 1 244 0
 1037 01ae 40F20000 		movw	r0, #:lower16:PWMSP001_Handle2
 1038 01b2 C0F20000 		movt	r0, #:upper16:PWMSP001_Handle2
 1039 01b6 FFF7FEFF 		bl	PWMSP001_Start
 245:../Main.c     **** 					break;
 1040              		.loc 1 245 0
 1041 01ba B3E1     		b	.L14
 1042              	.L18:
 246:../Main.c     **** 				case '3':
 247:../Main.c     **** 					sprintf(c, "Y:%1.2f P:%1.2f R:%1.2f\n", YPR[0], YPR[1], YPR[2]);
 1043              		.loc 1 247 0
 1044 01bc 40F20003 		movw	r3, #:lower16:YPR
 1045 01c0 C0F20003 		movt	r3, #:upper16:YPR
 1046 01c4 1B68     		ldr	r3, [r3, #0]	@ float
 1047 01c6 1846     		mov	r0, r3	@ float
 1048 01c8 FFF7FEFF 		bl	__aeabi_f2d
 1049 01cc 0446     		mov	r4, r0
 1050 01ce 0D46     		mov	r5, r1
 1051 01d0 40F20003 		movw	r3, #:lower16:YPR
 1052 01d4 C0F20003 		movt	r3, #:upper16:YPR
 1053 01d8 5B68     		ldr	r3, [r3, #4]	@ float
 1054 01da 1846     		mov	r0, r3	@ float
 1055 01dc FFF7FEFF 		bl	__aeabi_f2d
 1056 01e0 8046     		mov	r8, r0
 1057 01e2 8946     		mov	r9, r1
 1058 01e4 40F20003 		movw	r3, #:lower16:YPR
 1059 01e8 C0F20003 		movt	r3, #:upper16:YPR
 1060 01ec 9B68     		ldr	r3, [r3, #8]	@ float
 1061 01ee 1846     		mov	r0, r3	@ float
 1062 01f0 FFF7FEFF 		bl	__aeabi_f2d
 1063 01f4 0246     		mov	r2, r0
 1064 01f6 0B46     		mov	r3, r1
 1065 01f8 CDE90089 		strd	r8, [sp]
 1066 01fc CDE90223 		strd	r2, [sp, #8]
 1067 0200 40F20000 		movw	r0, #:lower16:c
 1068 0204 C0F20000 		movt	r0, #:upper16:c
 1069 0208 40F20001 		movw	r1, #:lower16:.LC1
 1070 020c C0F20001 		movt	r1, #:upper16:.LC1
 1071 0210 2246     		mov	r2, r4
 1072 0212 2B46     		mov	r3, r5
 1073 0214 FFF7FEFF 		bl	sprintf
 248:../Main.c     **** 					break;
 1074              		.loc 1 248 0
 1075 0218 84E1     		b	.L14
 1076              	.L19:
 249:../Main.c     **** 				case '4':
 250:../Main.c     **** 					sprintf(c, "PWM1:%f PWM2:%f PWM3:%f PWM4:%f\n", PWM_percent[0], PWM_percent[1], PWM_percent[2]
 1077              		.loc 1 250 0
 1078 021a 40F20003 		movw	r3, #:lower16:PWM_percent
 1079 021e C0F20003 		movt	r3, #:upper16:PWM_percent
 1080 0222 1B68     		ldr	r3, [r3, #0]	@ float
 1081 0224 1846     		mov	r0, r3	@ float
 1082 0226 FFF7FEFF 		bl	__aeabi_f2d
 1083 022a 0446     		mov	r4, r0
 1084 022c 0D46     		mov	r5, r1
 1085 022e 40F20003 		movw	r3, #:lower16:PWM_percent
 1086 0232 C0F20003 		movt	r3, #:upper16:PWM_percent
 1087 0236 5B68     		ldr	r3, [r3, #4]	@ float
 1088 0238 1846     		mov	r0, r3	@ float
 1089 023a FFF7FEFF 		bl	__aeabi_f2d
 1090 023e 8246     		mov	sl, r0
 1091 0240 8B46     		mov	fp, r1
 1092 0242 40F20003 		movw	r3, #:lower16:PWM_percent
 1093 0246 C0F20003 		movt	r3, #:upper16:PWM_percent
 1094 024a 9B68     		ldr	r3, [r3, #8]	@ float
 1095 024c 1846     		mov	r0, r3	@ float
 1096 024e FFF7FEFF 		bl	__aeabi_f2d
 1097 0252 8046     		mov	r8, r0
 1098 0254 8946     		mov	r9, r1
 1099 0256 40F20003 		movw	r3, #:lower16:PWM_percent
 1100 025a C0F20003 		movt	r3, #:upper16:PWM_percent
 1101 025e DB68     		ldr	r3, [r3, #12]	@ float
 1102 0260 1846     		mov	r0, r3	@ float
 1103 0262 FFF7FEFF 		bl	__aeabi_f2d
 1104 0266 0246     		mov	r2, r0
 1105 0268 0B46     		mov	r3, r1
 1106 026a CDE900AB 		strd	sl, [sp]
 1107 026e CDE90289 		strd	r8, [sp, #8]
 1108 0272 CDE90423 		strd	r2, [sp, #16]
 1109 0276 40F20000 		movw	r0, #:lower16:c
 1110 027a C0F20000 		movt	r0, #:upper16:c
 1111 027e 40F20001 		movw	r1, #:lower16:.LC2
 1112 0282 C0F20001 		movt	r1, #:upper16:.LC2
 1113 0286 2246     		mov	r2, r4
 1114 0288 2B46     		mov	r3, r5
 1115 028a FFF7FEFF 		bl	sprintf
 251:../Main.c     **** 					break;
 1116              		.loc 1 251 0
 1117 028e 49E1     		b	.L14
 1118              	.L20:
 252:../Main.c     **** 				case '5':
 253:../Main.c     **** 					sprintf(c, "eY:%f eP:%f eR:%f\n", yawD_dot-YPR[0], pitchD-YPR[1], rollD-YPR[2]);
 1119              		.loc 1 253 0
 1120 0290 40F20003 		movw	r3, #:lower16:yawD_dot
 1121 0294 C0F20003 		movt	r3, #:upper16:yawD_dot
 1122 0298 93ED007A 		flds	s14, [r3, #0]
 1123 029c 40F20003 		movw	r3, #:lower16:YPR
 1124 02a0 C0F20003 		movt	r3, #:upper16:YPR
 1125 02a4 D3ED007A 		flds	s15, [r3, #0]
 1126 02a8 77EE677A 		fsubs	s15, s14, s15
 1127 02ac 17EE900A 		fmrs	r0, s15
 1128 02b0 FFF7FEFF 		bl	__aeabi_f2d
 1129 02b4 0446     		mov	r4, r0
 1130 02b6 0D46     		mov	r5, r1
 1131 02b8 40F20003 		movw	r3, #:lower16:pitchD
 1132 02bc C0F20003 		movt	r3, #:upper16:pitchD
 1133 02c0 93ED007A 		flds	s14, [r3, #0]
 1134 02c4 40F20003 		movw	r3, #:lower16:YPR
 1135 02c8 C0F20003 		movt	r3, #:upper16:YPR
 1136 02cc D3ED017A 		flds	s15, [r3, #4]
 1137 02d0 77EE677A 		fsubs	s15, s14, s15
 1138 02d4 17EE900A 		fmrs	r0, s15
 1139 02d8 FFF7FEFF 		bl	__aeabi_f2d
 1140 02dc 8046     		mov	r8, r0
 1141 02de 8946     		mov	r9, r1
 1142 02e0 40F20003 		movw	r3, #:lower16:rollD
 1143 02e4 C0F20003 		movt	r3, #:upper16:rollD
 1144 02e8 93ED007A 		flds	s14, [r3, #0]
 1145 02ec 40F20003 		movw	r3, #:lower16:YPR
 1146 02f0 C0F20003 		movt	r3, #:upper16:YPR
 1147 02f4 D3ED027A 		flds	s15, [r3, #8]
 1148 02f8 77EE677A 		fsubs	s15, s14, s15
 1149 02fc 17EE900A 		fmrs	r0, s15
 1150 0300 FFF7FEFF 		bl	__aeabi_f2d
 1151 0304 0246     		mov	r2, r0
 1152 0306 0B46     		mov	r3, r1
 1153 0308 CDE90089 		strd	r8, [sp]
 1154 030c CDE90223 		strd	r2, [sp, #8]
 1155 0310 40F20000 		movw	r0, #:lower16:c
 1156 0314 C0F20000 		movt	r0, #:upper16:c
 1157 0318 40F20001 		movw	r1, #:lower16:.LC3
 1158 031c C0F20001 		movt	r1, #:upper16:.LC3
 1159 0320 2246     		mov	r2, r4
 1160 0322 2B46     		mov	r3, r5
 1161 0324 FFF7FEFF 		bl	sprintf
 254:../Main.c     **** 					break;
 1162              		.loc 1 254 0
 1163 0328 FCE0     		b	.L14
 1164              	.L21:
 255:../Main.c     **** 				case '6':
 256:../Main.c     **** 					sprintf(c, "TimerSensor:%d TimerMain:%d TimerRC:%d\n", (int)GetSensorCount(), (int)counter_mai
 1165              		.loc 1 256 0
 1166 032a FFF7FEFF 		bl	GetSensorCount
 1167 032e 0346     		mov	r3, r0
 1168 0330 1D46     		mov	r5, r3
 1169 0332 40F20003 		movw	r3, #:lower16:counter_main
 1170 0336 C0F20003 		movt	r3, #:upper16:counter_main
 1171 033a 1B88     		ldrh	r3, [r3, #0]
 1172 033c 1C46     		mov	r4, r3
 1173 033e FFF7FEFF 		bl	GetRCCount
 1174 0342 0346     		mov	r3, r0
 1175 0344 0093     		str	r3, [sp, #0]
 1176 0346 40F20000 		movw	r0, #:lower16:c
 1177 034a C0F20000 		movt	r0, #:upper16:c
 1178 034e 40F20001 		movw	r1, #:lower16:.LC4
 1179 0352 C0F20001 		movt	r1, #:upper16:.LC4
 1180 0356 2A46     		mov	r2, r5
 1181 0358 2346     		mov	r3, r4
 1182 035a FFF7FEFF 		bl	sprintf
 257:../Main.c     **** 					break;
 1183              		.loc 1 257 0
 1184 035e E1E0     		b	.L14
 1185              	.L22:
 258:../Main.c     **** 				case '7':
 259:../Main.c     **** 					GetGyroData(sensorData);
 1186              		.loc 1 259 0
 1187 0360 40F20000 		movw	r0, #:lower16:sensorData
 1188 0364 C0F20000 		movt	r0, #:upper16:sensorData
 1189 0368 FFF7FEFF 		bl	GetGyroData
 260:../Main.c     **** 					sprintf(c, "GyroX:%3.2f GyroY:%3.2f GyroZ:%3.2f\n", sensorData[0], sensorData[1], sensorData[2
 1190              		.loc 1 260 0
 1191 036c 40F20003 		movw	r3, #:lower16:sensorData
 1192 0370 C0F20003 		movt	r3, #:upper16:sensorData
 1193 0374 1B68     		ldr	r3, [r3, #0]	@ float
 1194 0376 1846     		mov	r0, r3	@ float
 1195 0378 FFF7FEFF 		bl	__aeabi_f2d
 1196 037c 0446     		mov	r4, r0
 1197 037e 0D46     		mov	r5, r1
 1198 0380 40F20003 		movw	r3, #:lower16:sensorData
 1199 0384 C0F20003 		movt	r3, #:upper16:sensorData
 1200 0388 5B68     		ldr	r3, [r3, #4]	@ float
 1201 038a 1846     		mov	r0, r3	@ float
 1202 038c FFF7FEFF 		bl	__aeabi_f2d
 1203 0390 8046     		mov	r8, r0
 1204 0392 8946     		mov	r9, r1
 1205 0394 40F20003 		movw	r3, #:lower16:sensorData
 1206 0398 C0F20003 		movt	r3, #:upper16:sensorData
 1207 039c 9B68     		ldr	r3, [r3, #8]	@ float
 1208 039e 1846     		mov	r0, r3	@ float
 1209 03a0 FFF7FEFF 		bl	__aeabi_f2d
 1210 03a4 0246     		mov	r2, r0
 1211 03a6 0B46     		mov	r3, r1
 1212 03a8 CDE90089 		strd	r8, [sp]
 1213 03ac CDE90223 		strd	r2, [sp, #8]
 1214 03b0 40F20000 		movw	r0, #:lower16:c
 1215 03b4 C0F20000 		movt	r0, #:upper16:c
 1216 03b8 40F20001 		movw	r1, #:lower16:.LC5
 1217 03bc C0F20001 		movt	r1, #:upper16:.LC5
 1218 03c0 2246     		mov	r2, r4
 1219 03c2 2B46     		mov	r3, r5
 1220 03c4 FFF7FEFF 		bl	sprintf
 261:../Main.c     **** 					break;
 1221              		.loc 1 261 0
 1222 03c8 ACE0     		b	.L14
 1223              	.L23:
 262:../Main.c     **** 				case '8':
 263:../Main.c     **** 					GetAccData(sensorData);
 1224              		.loc 1 263 0
 1225 03ca 40F20000 		movw	r0, #:lower16:sensorData
 1226 03ce C0F20000 		movt	r0, #:upper16:sensorData
 1227 03d2 FFF7FEFF 		bl	GetAccData
 264:../Main.c     **** 					sprintf(c, "AccX:%f AccY:%f AccZ:%f\n", sensorData[0], sensorData[1], sensorData[2]);
 1228              		.loc 1 264 0
 1229 03d6 40F20003 		movw	r3, #:lower16:sensorData
 1230 03da C0F20003 		movt	r3, #:upper16:sensorData
 1231 03de 1B68     		ldr	r3, [r3, #0]	@ float
 1232 03e0 1846     		mov	r0, r3	@ float
 1233 03e2 FFF7FEFF 		bl	__aeabi_f2d
 1234 03e6 0446     		mov	r4, r0
 1235 03e8 0D46     		mov	r5, r1
 1236 03ea 40F20003 		movw	r3, #:lower16:sensorData
 1237 03ee C0F20003 		movt	r3, #:upper16:sensorData
 1238 03f2 5B68     		ldr	r3, [r3, #4]	@ float
 1239 03f4 1846     		mov	r0, r3	@ float
 1240 03f6 FFF7FEFF 		bl	__aeabi_f2d
 1241 03fa 8046     		mov	r8, r0
 1242 03fc 8946     		mov	r9, r1
 1243 03fe 40F20003 		movw	r3, #:lower16:sensorData
 1244 0402 C0F20003 		movt	r3, #:upper16:sensorData
 1245 0406 9B68     		ldr	r3, [r3, #8]	@ float
 1246 0408 1846     		mov	r0, r3	@ float
 1247 040a FFF7FEFF 		bl	__aeabi_f2d
 1248 040e 0246     		mov	r2, r0
 1249 0410 0B46     		mov	r3, r1
 1250 0412 CDE90089 		strd	r8, [sp]
 1251 0416 CDE90223 		strd	r2, [sp, #8]
 1252 041a 40F20000 		movw	r0, #:lower16:c
 1253 041e C0F20000 		movt	r0, #:upper16:c
 1254 0422 40F20001 		movw	r1, #:lower16:.LC6
 1255 0426 C0F20001 		movt	r1, #:upper16:.LC6
 1256 042a 2246     		mov	r2, r4
 1257 042c 2B46     		mov	r3, r5
 1258 042e FFF7FEFF 		bl	sprintf
 265:../Main.c     **** 					break;
 1259              		.loc 1 265 0
 1260 0432 77E0     		b	.L14
 1261              	.L24:
 266:../Main.c     **** 				case '9':
 267:../Main.c     **** 					sprintf(c, "Pressure:%f Temperature:%f\n", pressure, temperature);
 1262              		.loc 1 267 0
 1263 0434 40F20003 		movw	r3, #:lower16:pressure
 1264 0438 C0F20003 		movt	r3, #:upper16:pressure
 1265 043c 1B68     		ldr	r3, [r3, #0]	@ float
 1266 043e 1846     		mov	r0, r3	@ float
 1267 0440 FFF7FEFF 		bl	__aeabi_f2d
 1268 0444 0446     		mov	r4, r0
 1269 0446 0D46     		mov	r5, r1
 1270 0448 40F20003 		movw	r3, #:lower16:temperature
 1271 044c C0F20003 		movt	r3, #:upper16:temperature
 1272 0450 1B68     		ldr	r3, [r3, #0]	@ float
 1273 0452 1846     		mov	r0, r3	@ float
 1274 0454 FFF7FEFF 		bl	__aeabi_f2d
 1275 0458 0246     		mov	r2, r0
 1276 045a 0B46     		mov	r3, r1
 1277 045c CDE90023 		strd	r2, [sp]
 1278 0460 40F20000 		movw	r0, #:lower16:c
 1279 0464 C0F20000 		movt	r0, #:upper16:c
 1280 0468 40F20001 		movw	r1, #:lower16:.LC7
 1281 046c C0F20001 		movt	r1, #:upper16:.LC7
 1282 0470 2246     		mov	r2, r4
 1283 0472 2B46     		mov	r3, r5
 1284 0474 FFF7FEFF 		bl	sprintf
 268:../Main.c     **** 					break;
 1285              		.loc 1 268 0
 1286 0478 54E0     		b	.L14
 1287              	.L15:
 269:../Main.c     **** 				case '0':
 270:../Main.c     **** 					sprintf(c, "VBat:%0.2f\n", VBat);
 1288              		.loc 1 270 0
 1289 047a 40F20003 		movw	r3, #:lower16:VBat
 1290 047e C0F20003 		movt	r3, #:upper16:VBat
 1291 0482 1B68     		ldr	r3, [r3, #0]	@ float
 1292 0484 1846     		mov	r0, r3	@ float
 1293 0486 FFF7FEFF 		bl	__aeabi_f2d
 1294 048a 0246     		mov	r2, r0
 1295 048c 0B46     		mov	r3, r1
 1296 048e 40F20000 		movw	r0, #:lower16:c
 1297 0492 C0F20000 		movt	r0, #:upper16:c
 1298 0496 40F20001 		movw	r1, #:lower16:.LC8
 1299 049a C0F20001 		movt	r1, #:upper16:.LC8
 1300 049e FFF7FEFF 		bl	sprintf
 271:../Main.c     **** 					break;
 1301              		.loc 1 271 0
 1302 04a2 3FE0     		b	.L14
 1303              	.L25:
 272:../Main.c     **** 				//#>>>>>>>>>>
 273:../Main.c     **** 				case 'a':
 274:../Main.c     **** 					sprintf(c,"Gnd Pressure:%0.2f, Gnd Temp:%0.2f\n",ground_pressure,ground_temperature);
 1304              		.loc 1 274 0
 1305 04a4 40F20003 		movw	r3, #:lower16:ground_pressure
 1306 04a8 C0F20003 		movt	r3, #:upper16:ground_pressure
 1307 04ac 1B68     		ldr	r3, [r3, #0]	@ float
 1308 04ae 1846     		mov	r0, r3	@ float
 1309 04b0 FFF7FEFF 		bl	__aeabi_f2d
 1310 04b4 0446     		mov	r4, r0
 1311 04b6 0D46     		mov	r5, r1
 1312 04b8 40F20003 		movw	r3, #:lower16:ground_temperature
 1313 04bc C0F20003 		movt	r3, #:upper16:ground_temperature
 1314 04c0 1B68     		ldr	r3, [r3, #0]	@ float
 1315 04c2 1846     		mov	r0, r3	@ float
 1316 04c4 FFF7FEFF 		bl	__aeabi_f2d
 1317 04c8 0246     		mov	r2, r0
 1318 04ca 0B46     		mov	r3, r1
 1319 04cc CDE90023 		strd	r2, [sp]
 1320 04d0 40F20000 		movw	r0, #:lower16:c
 1321 04d4 C0F20000 		movt	r0, #:upper16:c
 1322 04d8 40F20001 		movw	r1, #:lower16:.LC9
 1323 04dc C0F20001 		movt	r1, #:upper16:.LC9
 1324 04e0 2246     		mov	r2, r4
 1325 04e2 2B46     		mov	r3, r5
 1326 04e4 FFF7FEFF 		bl	sprintf
 275:../Main.c     **** 					break;
 1327              		.loc 1 275 0
 1328 04e8 1CE0     		b	.L14
 1329              	.L26:
 276:../Main.c     **** 				case 'b':
 277:../Main.c     **** 					sprintf(c,"Altitude:%0.2f, alt_ctrl_cnt:%d\n",alt,alt_ctrl_cnt);
 1330              		.loc 1 277 0
 1331 04ea 40F20003 		movw	r3, #:lower16:alt
 1332 04ee C0F20003 		movt	r3, #:upper16:alt
 1333 04f2 1B68     		ldr	r3, [r3, #0]	@ float
 1334 04f4 1846     		mov	r0, r3	@ float
 1335 04f6 FFF7FEFF 		bl	__aeabi_f2d
 1336 04fa 0446     		mov	r4, r0
 1337 04fc 0D46     		mov	r5, r1
 1338 04fe 40F20003 		movw	r3, #:lower16:alt_ctrl_cnt
 1339 0502 C0F20003 		movt	r3, #:upper16:alt_ctrl_cnt
 1340 0506 1B68     		ldr	r3, [r3, #0]
 1341 0508 0093     		str	r3, [sp, #0]
 1342 050a 40F20000 		movw	r0, #:lower16:c
 1343 050e C0F20000 		movt	r0, #:upper16:c
 1344 0512 40F20001 		movw	r1, #:lower16:.LC10
 1345 0516 C0F20001 		movt	r1, #:upper16:.LC10
 1346 051a 2246     		mov	r2, r4
 1347 051c 2B46     		mov	r3, r5
 1348 051e FFF7FEFF 		bl	sprintf
 278:../Main.c     **** 					break;
 1349              		.loc 1 278 0
 1350 0522 00BF     		nop
 1351              	.L14:
 279:../Main.c     **** 				//#<<<<<<<<<<
 280:../Main.c     **** 			}
 281:../Main.c     **** 			USBVC001_SendString((const char *)c);
 1352              		.loc 1 281 0
 1353 0524 40F20000 		movw	r0, #:lower16:c
 1354 0528 C0F20000 		movt	r0, #:upper16:c
 1355 052c FFF7FEFF 		bl	USBVC001_SendString
 1356              	.L11:
 282:../Main.c     **** 	    }
 283:../Main.c     **** 	    if (sendMag)
 1357              		.loc 1 283 0
 1358 0530 40F20003 		movw	r3, #:lower16:sendMag
 1359 0534 C0F20003 		movt	r3, #:upper16:sendMag
 1360 0538 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1361 053a 002B     		cmp	r3, #0
 1362 053c 0CD0     		beq	.L28
 284:../Main.c     **** 	    {
 285:../Main.c     **** 	    	sendMag = FALSE;
 1363              		.loc 1 285 0
 1364 053e 40F20003 		movw	r3, #:lower16:sendMag
 1365 0542 C0F20003 		movt	r3, #:upper16:sendMag
 1366 0546 4FF00002 		mov	r2, #0
 1367 054a 1A70     		strb	r2, [r3, #0]
 286:../Main.c     **** 	    	USBVC001_SendString((const char *)c);
 1368              		.loc 1 286 0
 1369 054c 40F20000 		movw	r0, #:lower16:c
 1370 0550 C0F20000 		movt	r0, #:upper16:c
 1371 0554 FFF7FEFF 		bl	USBVC001_SendString
 1372              	.L28:
 287:../Main.c     **** 	    }
 288:../Main.c     **** 	    // Call continuous to handle class specific control request
 289:../Main.c     **** 	    USB_USBTask();
 1373              		.loc 1 289 0
 1374 0558 FFF7FEFF 		bl	USB_USBTask
 290:../Main.c     **** 	    //--------------------------------------------------------------------------------------------
 291:../Main.c     **** 	}
 1375              		.loc 1 291 0
 1376 055c 5DE5     		b	.L29
 1377              		.cfi_endproc
 1378              	.LFE155:
 1380 055e 00BF     		.section	.rodata
 1381 018d 000000   		.align	2
 1382              	.LC11:
 1383 0190 25662C25 		.ascii	"%f,%f,%f\015\012\000"
 1383      662C2566 
 1383      0D0A00
 1384 019b 00       		.section	.text.CCU40_3_IRQHandler,"ax",%progbits
 1385              		.align	2
 1386              		.global	CCU40_3_IRQHandler
 1387              		.thumb
 1388              		.thumb_func
 1390              	CCU40_3_IRQHandler:
 1391              	.LFB156:
 292:../Main.c     **** 	return 0;
 293:../Main.c     **** }
 294:../Main.c     **** 
 295:../Main.c     **** void Mag_Calibration_Int_Handler()
 296:../Main.c     **** {
 1392              		.loc 1 296 0
 1393              		.cfi_startproc
 1394              		@ args = 0, pretend = 0, frame = 0
 1395              		@ frame_needed = 1, uses_anonymous_args = 0
 1396 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 1397              	.LCFI9:
 1398              		.cfi_def_cfa_offset 24
 1399              		.cfi_offset 4, -24
 1400              		.cfi_offset 5, -20
 1401              		.cfi_offset 7, -16
 1402              		.cfi_offset 8, -12
 1403              		.cfi_offset 9, -8
 1404              		.cfi_offset 14, -4
 1405 0004 84B0     		sub	sp, sp, #16
 1406              	.LCFI10:
 1407              		.cfi_def_cfa_offset 40
 1408 0006 04AF     		add	r7, sp, #16
 1409              	.LCFI11:
 1410              		.cfi_def_cfa 7, 24
 297:../Main.c     ****     GetMagData(sensorData);
 1411              		.loc 1 297 0
 1412 0008 40F20000 		movw	r0, #:lower16:sensorData
 1413 000c C0F20000 		movt	r0, #:upper16:sensorData
 1414 0010 FFF7FEFF 		bl	GetMagData
 298:../Main.c     ****     sprintf(c, "%f,%f,%f\r\n", sensorData[0], sensorData[1], sensorData[2]);
 1415              		.loc 1 298 0
 1416 0014 40F20003 		movw	r3, #:lower16:sensorData
 1417 0018 C0F20003 		movt	r3, #:upper16:sensorData
 1418 001c 1B68     		ldr	r3, [r3, #0]	@ float
 1419 001e 1846     		mov	r0, r3	@ float
 1420 0020 FFF7FEFF 		bl	__aeabi_f2d
 1421 0024 0446     		mov	r4, r0
 1422 0026 0D46     		mov	r5, r1
 1423 0028 40F20003 		movw	r3, #:lower16:sensorData
 1424 002c C0F20003 		movt	r3, #:upper16:sensorData
 1425 0030 5B68     		ldr	r3, [r3, #4]	@ float
 1426 0032 1846     		mov	r0, r3	@ float
 1427 0034 FFF7FEFF 		bl	__aeabi_f2d
 1428 0038 8046     		mov	r8, r0
 1429 003a 8946     		mov	r9, r1
 1430 003c 40F20003 		movw	r3, #:lower16:sensorData
 1431 0040 C0F20003 		movt	r3, #:upper16:sensorData
 1432 0044 9B68     		ldr	r3, [r3, #8]	@ float
 1433 0046 1846     		mov	r0, r3	@ float
 1434 0048 FFF7FEFF 		bl	__aeabi_f2d
 1435 004c 0246     		mov	r2, r0
 1436 004e 0B46     		mov	r3, r1
 1437 0050 CDE90089 		strd	r8, [sp]
 1438 0054 CDE90223 		strd	r2, [sp, #8]
 1439 0058 40F20000 		movw	r0, #:lower16:c
 1440 005c C0F20000 		movt	r0, #:upper16:c
 1441 0060 40F20001 		movw	r1, #:lower16:.LC11
 1442 0064 C0F20001 		movt	r1, #:upper16:.LC11
 1443 0068 2246     		mov	r2, r4
 1444 006a 2B46     		mov	r3, r5
 1445 006c FFF7FEFF 		bl	sprintf
 299:../Main.c     ****     sendMag = TRUE;
 1446              		.loc 1 299 0
 1447 0070 40F20003 		movw	r3, #:lower16:sendMag
 1448 0074 C0F20003 		movt	r3, #:upper16:sendMag
 1449 0078 4FF00102 		mov	r2, #1
 1450 007c 1A70     		strb	r2, [r3, #0]
 300:../Main.c     **** }
 1451              		.loc 1 300 0
 1452 007e BD46     		mov	sp, r7
 1453 0080 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 1454              		.cfi_endproc
 1455              	.LFE156:
 1457              		.text
 1458              	.Letext0:
 1459              		.file 2 "c:\\dave-3.1.10\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/i
 1460              		.file 3 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 1461              		.file 4 "E:\\GitHub\\Flying-PCB\\Software\\LARIX Flightcontroller\\CORE_Larix_V1.0\\Dave\\Generate
 1462              		.file 5 "E:\\GitHub\\Flying-PCB\\Software\\LARIX Flightcontroller\\CORE_Larix_V1.0\\Dave\\Generate
 1463              		.file 6 "E:\\GitHub\\Flying-PCB\\Software\\LARIX Flightcontroller\\CORE_Larix_V1.0\\Dave\\Generate
 1464              		.file 7 "../_Quadrocopter/Sensors/DPS310/../../_FIR_Filter/FIR_Filter.h"
 1465              		.file 8 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Include/core_cm4.h"
 1466              		.file 9 "E:\\GitHub\\Flying-PCB\\Software\\LARIX Flightcontroller\\CORE_Larix_V1.0\\Dave\\Generate
DEFINED SYMBOLS
                            *ABS*:00000000 Main.c
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:24     .bss:00000000 PWM_percent
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:21     .bss:00000000 $d
                            *COM*:00000008 x_pitch
                            *COM*:00000008 x_roll
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:32     .bss:00000010 u_yaw_dot
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:38     .bss:00000014 u_pitch
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:44     .bss:00000018 u_roll
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:51     .rodata:00000000 T
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:48     .rodata:00000000 $d
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:57     .rodata:00000004 P_roll
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:63     .rodata:00000008 I_roll
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:69     .rodata:0000000c D_roll
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:75     .rodata:00000010 N_roll
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:81     .rodata:00000014 P_pitch
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:87     .rodata:00000018 I_pitch
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:93     .rodata:0000001c D_pitch
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:99     .rodata:00000020 N_pitch
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:105    .rodata:00000024 P_yaw
                            *COM*:00000008 a_roll
                            *COM*:00000008 a_pitch
                            *COM*:0000000c b_roll
                            *COM*:0000000c b_pitch
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:116    .bss:0000001c powerD
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:121    .bss:00000020 height_control
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:127    .bss:00000024 yawD_dot
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:133    .bss:00000028 pitchD
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:139    .bss:0000002c rollD
                            *COM*:0000000c YPR
                            *COM*:0000000c sensorData
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:147    .bss:00000030 pressure
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:153    .bss:00000034 temperature
                            *COM*:00000038 PressureFIR
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:160    .bss:00000038 TxBuffer
                            *COM*:00000064 c
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:167    .bss:0000009c VBat
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:172    .bss:000000a0 sendMag
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:178    .bss:000000a2 counter_main
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:184    .bss:000000a4 MonitorBuffer
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:189    .bss:000000b2 MotorRunning
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:195    .bss:000000b4 ground_pressure
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:201    .bss:000000b8 ground_temperature
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:207    .bss:000000bc alt
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:213    .bss:000000c0 alt_ctrl_cnt
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:220    .text.CCU40_1_IRQHandler:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:225    .text.CCU40_1_IRQHandler:00000000 CCU40_1_IRQHandler
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:478    .text.CCU40_1_IRQHandler:00000298 $d
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:486    .text.Initialize:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:491    .text.Initialize:00000000 Initialize
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:831    .rodata:00000028 .LC0
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:835    .rodata:00000060 .LC1
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:838    .rodata:0000007c .LC2
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:841    .rodata:000000a0 .LC3
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:844    .rodata:000000b4 .LC4
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:847    .rodata:000000dc .LC5
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:850    .rodata:00000104 .LC6
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:853    .rodata:00000120 .LC7
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:856    .rodata:0000013c .LC8
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:859    .rodata:00000148 .LC9
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:862    .rodata:0000016c .LC10
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:865    .text.main:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:870    .text.main:00000000 main
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:942    .text.main:0000006c $d
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:995    .text.main:00000138 $t
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:1382   .rodata:00000190 .LC11
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:1385   .text.CCU40_3_IRQHandler:00000000 $t
C:\Users\Mya\AppData\Local\Temp\ccLoHf8W.s:1390   .text.CCU40_3_IRQHandler:00000000 CCU40_3_IRQHandler
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.84cfd71c6d2dc0bd4021712beaa9efd8
                           .group:00000000 wm4.XMC4500.h.45.215f4b8c79f46c7645c15373868d08c0
                           .group:00000000 wm4.core_cm4.h.47.41af406cb4cda82c972f112a9cd0a024
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.39.3d3d1b4a79aef37532666dc6ee87c6ac
                           .group:00000000 wm4.core_cm4_simd.h.43.b5d1d38735af6366227b4256d330cf13
                           .group:00000000 wm4.core_cm4.h.178.e5ef5ce66d198d7f00f9d0076e267c41
                           .group:00000000 wm4.system_XMC4500.h.29.827f68baa362c84f2abae4ab67dde7c9
                           .group:00000000 wm4.XMC4500.h.198.8e022f279ff353ed081df898dc7b9cf3
                           .group:00000000 wm4.stddef.h.40.50cf36416e06376af8a9dca28536f2e4
                           .group:00000000 wm4.types.h.60.e75c47576398c648cdcf9000ace5e3d8
                           .group:00000000 wm4.MULTIPLEXER.h.46.4a863fbae1c79f0db26da3ce2dc30d02
                           .group:00000000 wm4.CCU8PWMLIB.h.74.725ec81203769525cc7a424597055f47
                           .group:00000000 wm4.MOTORLIB.h.62.951091d95913dd2ff36d761323a1771d
                           .group:00000000 wm4.DBG001.h.116.d6d9e7459a0faa3905c97c1d2edb339d
                           .group:00000000 wm4.uc_id.h.35.fa57ecd9f559d2767f56c96da2848c12
                           .group:00000000 wm4.CLK001_Const.h.50.e5e9c2ddc89f4cc9e7b93e9648fa94e4
                           .group:00000000 wm4.CLK001_Conf.h.81.851ac7a1268528f4d6739384c2f248a5
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.161.c6104a0666cf681b6269ddc9b4f516d4
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.80.1f2c84c0d57dd52dd9936095d9ac218e
                           .group:00000000 wm4.time.h.16.a4579e68956d2601c6113814b546764b
                           .group:00000000 wm4.RTC001.h.113.715d6fcab1863c6656b238bddd304166
                           .group:00000000 wm4.lmm001_debuglog.h.40.8031299705ecf04ad726bd19baff976d
                           .group:00000000 wm4.reent.h.11.a39e4126dcf3c6afd3054e0622577bae
                           .group:00000000 wm4.stddef.h.161.e50ff8a9d5d1abbc15641da28ac571bf
                           .group:00000000 wm4.string.h.86.d5c872ff52e2712c985b588a0ef39f3c
                           .group:00000000 wm4.LMM001.h.45.fa2df8bae969f45df5071221ac433ffa
                           .group:00000000 wm4.stdio.h.27.f2ac352bab34f31f9f478442827b2ba6
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.63.dfdea6580b080784d08faace69b6ed76
                           .group:00000000 wm4.stdlib.h.13.603ed7eb09a1561ab06840b7c0fcff58
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.53.c69c7609933ff56d59c757cec2d13230
                           .group:00000000 wm4.time.h.2.9857e62ad6ac99431e29d58067232314
                           .group:00000000 wm4.time.h.24.c499d4c1915694df17abb795fd34b719
                           .group:00000000 wm4.time.h.124.10ced469f846269cafc58b59c853e1bb
                           .group:00000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:00000000 wm4.errno.h.9.65044c2b5d8494e43f5986ab0a1d770f
                           .group:00000000 wm4.unistd.h.2.6ce1b91c4223f6078c1b210c7538c1d2
                           .group:00000000 wm4.unistd.h.251.605bc560cdc6c3b07b599bb71ac4e425
                           .group:00000000 wm4.malloc.h.4.62bd13b8107d5245f60bd92bb5994838
                           .group:00000000 wm4.malloc.h.148.73b7de3bd065dafbd594b04197a9466e
                           .group:00000000 wm4.reent.h.91.faac4d0ac97c0fcf23d10d0786197642
                           .group:00000000 wm4.SLTHA003.h.104.05371e300b30617373255b3cdb4765a2
                           .group:00000000 wm4.SYSTM001.h.64.6ecb31c49bc3e7691644fdcdfc11b5cd
                           .group:00000000 wm4.stdarg.h.31.fa591a4b1df9e413e9f5b8097f9ae89d
                           .group:00000000 wm4.Type_CM.h.61.3660c940695d7d5fef91de9c4081d0f0
                           .group:00000000 wm4.dwc_os.h.82.db2ca40c41e2f648d146b8942e5157d9
                           .group:00000000 wm4.dwc_otg_core_if.h.95.37e41eee47e9a4502e4044edf60ea92d
                           .group:00000000 wm4.usbcore001_device.h.107.6c032c9c28ac6c3f4e5e24a068720cd7
                           .group:00000000 wm4.USB.h.399.44a2bec94122294f06c4d854450494d3
                           .group:00000000 wm4.Common.h.102.bc881ac788d1d7ce84e651cbaa40f2c2
                           .group:00000000 wm4.Common.h.134.5069b632a0407201156f18fde915b80c
                           .group:00000000 wm4.USBMode.h.234.0cc9e23131c025605bb7c0db3ebb8ac9
                           .group:00000000 wm4.StdRequestType.h.93.4e19c7c655f990c2abedbb76a546fcde
                           .group:00000000 wm4.Endpoint.h.116.4ef46b127c9047ed49fe1e0df19e09b8
                           .group:00000000 wm4.StdDescriptors.h.120.0ce817e16dcc91b8cf4a79ba0e0e19b6
                           .group:00000000 wm4.CDC.h.103.7ce3e4692dde29e827f8736493eef7ef
                           .group:00000000 wm4.CDC.h.115.c83a7d6c5b6c8644b3dec6212d4ced09
                           .group:00000000 wm4.Descriptors.h.91.5cf84c2489ee54d154cabfe9e14b5c19
                           .group:00000000 wm4.Usic.h.54.8af9f733ba5771eeb374435d205ea54b
                           .group:00000000 wm4.UART001_Conf.h.53.fce01a2aa073e958cae0b1cc894db26c
                           .group:00000000 wm4.UART001.h.109.3e835815a7a59791d8bd39655f4d4cc9
                           .group:00000000 wm4.CCU4Global_Conf.h.63.10a5fc586e1563647b9633c45b1b739e
                           .group:00000000 wm4.PWMSP001.h.57.29b732b86baf3e81f49153f5f495912e
                           .group:00000000 wm4.NVIC002_Conf.h.63.85c8666caca8bd9e6c27dcbc8efe5043
                           .group:00000000 wm4.I2C001.h.97.5277d52889d6c741e048ea45ee1277b5
                           .group:00000000 wm4.I2C001_Conf.h.58.2b816ac2c964c55a6c88f9c406d78c9f
                           .group:00000000 wm4.ERU001_Conf.h.69.61c28b1ac8f55fb79ee064524d8b6415
                           .group:00000000 wm4.ERU002_Conf.h.49.449ecc05b9e62e9b43f2dc6ead06a5ce
                           .group:00000000 wm4.IO002_Conf.h.51.87e2c8c60b647393fe9ced2cae198f63
                           .group:00000000 wm4.ADCGROUP001.h.66.3ee81aba16709c201614af7d67499bdb
                           .group:00000000 wm4.IO001.h.49.4efcabb368feaef60c65bd7504b48505
                           .group:00000000 wm4.ADC001.h.72.a0f6b9479a18584b91fa95e6f862978d
                           .group:00000000 wm4.IO004.h.53.442ea5eb47ad9eedc675253aa35f3107
                           .group:00000000 wm4.limits.h.2.43fda939be266b929466b0fef1d948d4
                           .group:00000000 wm4.limits.h.61.9aaff5f42682428210a5b13055277813
                           .group:00000000 wm4.math.h.35.cc9264b0ced3bd063c5784e64e89cf51
                           .group:00000000 wm4.arm_math.h.258.4f811f2034dd4ca295ea6f28c00c3d1e
                           .group:00000000 wm4.arm_math.h.277.3c36979cd3767d76e13a76d35d605b04
                           .group:00000000 wm4.I2Cdev.h.14.f8691519f66653930a002c194805c1eb
                           .group:00000000 wm4.QuaternionFilters.h.9.8d6677ee602ddf2a66354108c84046ca
                           .group:00000000 wm4.MPU9150.h.24.5b885a59e2282a0c8589994451f09df3
                           .group:00000000 wm4.FIR_Filter.h.9.4e964a304570d6362a54bd10cf9ece8c
                           .group:00000000 wm4.DPS310.h.16.caa4c47411da0fdd1759c4186e449235
                           .group:00000000 wm4.BluetoothProtocol.h.15.5d0e6511d0a0b48dfdf591d0a2f8c5c0
                           .group:00000000 wm4.RCReceive.h.14.d31683ac823b724229d346345b741bab
                           .group:00000000 wm4.DaisyCodes.h.9.06b3ba8a33d82ef6faf2c6f59bdf534a
                           .group:00000000 wm4.BatterySafety.h.22.e0f263b65b628e016ddf3845e2cf7037

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_d2uiz
GetAngles
GetRCData
AngleRateController
AngleController
CreatePulseWidth
SendDaisyData
initBluetoothStorage
delay
MPU9150_Setup
WatchRC_Init
setupDPS310
getCoefficients
Initialize_FIR_Filter
PWMSP001_Handle0
PWMSP001_Start
DAVE_Init
USBVC001_Init
USBVC001_BytesReceived
USBVC001_ReceiveByte
sprintf
PWMSP001_Handle2
GetSensorCount
GetRCCount
GetGyroData
GetAccData
USBVC001_SendString
USB_USBTask
GetMagData
